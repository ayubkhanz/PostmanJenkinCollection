{
	"info": {
		"_postman_id": "19e7d98f-3a5a-4667-a22d-8f13c6695873",
		"name": "VineaNovaWebCopy",
		"description": "For react application mock server apis",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "PracticeVinea",
			"item": [
				{
					"name": "AuthorizationToken",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var response = pm.response.json();\r",
									"var access_token = response.access_token;\r",
									"pm.environment.set('TOKEN', access_token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "client_id",
									"value": "{{ClientID}}",
									"type": "text"
								},
								{
									"key": "client_secret",
									"value": "{{ClientSecret}}",
									"type": "text"
								},
								{
									"key": "grant_type",
									"value": "client_credentials",
									"type": "text"
								},
								{
									"key": "scope",
									"value": "https://graph.microsoft.com/.default",
									"type": "text"
								},
								{
									"key": "redirect_uri",
									"value": "https://oauth.pstmn.io/v1/browser-callback",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://login.microsoftonline.com/{{TenantID}}/oauth2/v2.0/token",
							"protocol": "https",
							"host": [
								"login",
								"microsoftonline",
								"com"
							],
							"path": [
								"{{TenantID}}",
								"oauth2",
								"v2.0",
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "PostIdentityPerson-Update",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer eyJ0eXAiOiJKV1QiLCJub25jZSI6ImR1V0lqNV9jOUpwNkc1Tjk4dTV4aUw3elpvN1VNelpOdVhtcE9qbUZ0ZmciLCJhbGciOiJSUzI1NiIsIng1dCI6Im5PbzNaRHJPRFhFSzFqS1doWHNsSFJfS1hFZyIsImtpZCI6Im5PbzNaRHJPRFhFSzFqS1doWHNsSFJfS1hFZyJ9.eyJhdWQiOiIwMDAwMDAwMy0wMDAwLTAwMDAtYzAwMC0wMDAwMDAwMDAwMDAiLCJpc3MiOiJodHRwczovL3N0cy53aW5kb3dzLm5ldC8yMGFkODczMS1hNGIzLTQxOWUtOWVkNi0wYjhkNjU2YWU4OWQvIiwiaWF0IjoxNjE1MDAwOTE3LCJuYmYiOjE2MTUwMDA5MTcsImV4cCI6MTYxNTAwNDgxNywiYWNjdCI6MCwiYWNyIjoiMSIsImFjcnMiOlsidXJuOnVzZXI6cmVnaXN0ZXJzZWN1cml0eWluZm8iLCJ1cm46bWljcm9zb2Z0OnJlcTEiLCJ1cm46bWljcm9zb2Z0OnJlcTIiLCJ1cm46bWljcm9zb2Z0OnJlcTMiLCJjMSIsImMyIiwiYzMiLCJjNCIsImM1IiwiYzYiLCJjNyIsImM4IiwiYzkiLCJjMTAiLCJjMTEiLCJjMTIiLCJjMTMiLCJjMTQiLCJjMTUiLCJjMTYiLCJjMTciLCJjMTgiLCJjMTkiLCJjMjAiLCJjMjEiLCJjMjIiLCJjMjMiLCJjMjQiLCJjMjUiXSwiYWlvIjoiQVVRQXUvOFRBQUFBV3Z5K2tkU3REYmFYMW1oeWowV3lCVEc4R0hnZCs3UEMxOENOMGxXc1BIZWU1anVCUks2SEN3cUR3aFR0SDUvZEJTNGNyUkdMdkVzWUlLUTJFd2RDeEE9PSIsImFtciI6WyJwd2QiLCJtZmEiXSwiYXBwX2Rpc3BsYXluYW1lIjoiVmluZWFOb3ZhV2ViRGV2IiwiYXBwaWQiOiIwNTczNzFhNC02NGVkLTQwOWUtOWRmNy1hODcyMWZhY2NhYWMiLCJhcHBpZGFjciI6IjAiLCJmYW1pbHlfbmFtZSI6ImtoYW56eiIsImdpdmVuX25hbWUiOiJpcmZhbiIsImlkdHlwIjoidXNlciIsImlwYWRkciI6IjE4MC4xNTAuMzEuMTM3IiwibmFtZSI6IklyZmFuIEtoYW4iLCJvaWQiOiIzY2Q5M2Y0MS01YzJiLTRjYTgtYWNhMC1iODUwYTMzNzU0MjkiLCJwbGF0ZiI6IjMiLCJwdWlkIjoiMTAwMzdGRkVBNjYzMEYwMyIsInJoIjoiMC5BUVlBTVlldElMT2tua0dlMWd1TlpXcm9uYVJ4Y3dYdFpKNUFuZmVvY2gtc3lxd0dBSXcuIiwic2NwIjoiQXBwbGljYXRpb24uUmVhZC5BbGwgT3JnYW5pemF0aW9uLlJlYWQuQWxsIFVzZXIuUmVhZCBwcm9maWxlIG9wZW5pZCBlbWFpbCIsInNpZ25pbl9zdGF0ZSI6WyJrbXNpIl0sInN1YiI6IkhFUV82QjVMR1VZOHhoR2JvY1B4VFp6Y2M3YWZXd3hqMllrbk9JYzdiM28iLCJ0ZW5hbnRfcmVnaW9uX3Njb3BlIjoiT0MiLCJ0aWQiOiIyMGFkODczMS1hNGIzLTQxOWUtOWVkNi0wYjhkNjU2YWU4OWQiLCJ1bmlxdWVfbmFtZSI6IklyZmFuQGluZm9wb3dlci5jby5ueiIsInVwbiI6IklyZmFuQGluZm9wb3dlci5jby5ueiIsInV0aSI6ImUxUHR0X2FfaEVPQlZaWDVtZjVQQUEiLCJ2ZXIiOiIxLjAiLCJ3aWRzIjpbImI3OWZiZjRkLTNlZjktNDY4OS04MTQzLTc2YjE5NGU4NTUwOSJdLCJ4bXNfc3QiOnsic3ViIjoiZHVadlU3RmVQemhweWdjOV9QcDZCbnl5RHVQcHMyUDhrcG85UXJ3N2lPYyJ9LCJ4bXNfdGNkdCI6MTM1MTU1MDIwMX0.H8SUn3JtUJ0EKFdw7oOM5a3PFLKIzs6JhNx8T5CIwW1PH-H7dyItF_bQY55DE3842sejxy26vzIORUPFdcdOCzw3-wPst5LdxHsAnJRv9ySy8hO9s79ps_yV9YCx6fpJupJrblQFMJpxnyMIyhg31VpaM3r7XkmNh7qJc4heKxrn4y4bTbnNnVYgmxjQDEOuRXAmEwpZEnmNQ70zepX-mIUVYZZ39MlLsX17R9dnLt5P0aEZFEczktuf-xU5PhZTNxsLDdPQ3Ce9Fv6KS4TwdEMVtidemT3Qf1iFg_JuFlbAaazde9rcj15f5kL5VJ5ZsNrS6VM6RNrzTcc7vFau0w",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": \"2449\",\r\n    \"identityTypeID\": 1,\r\n    \"salutationID\": 1,\r\n    \"firstName\": \"Mangi\",\r\n    \"middleName\": \"Mangi\",\r\n    \"lastName\": \"Mangi\",\r\n    \"knownAs\": \"Mangiyoo\",\r\n    \"genderID\": 1,\r\n    \"ethnicityID\": 2,\r\n    \"nationalityID\": 1,\r\n    \"preferredLanguageID\": 1,\r\n    \"secondaryLanguageID\": 1,\r\n    \"businessUnitID\": 1,\r\n    \"roleTypeID\": null,\r\n    \"preferredContactMethodTypeID\": null,\r\n    \"birthDate\": \"2020-08-04\"\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/IdentityPerson?code={{Code}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"IdentityPerson"
							],
							"query": [
								{
									"key": "code",
									"value": "{{Code}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "PostSampleHeader",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"blockVintageIDs\": [\r\n        112\r\n    ],\r\n    \"id\": 51,\r\n    \"recomendedSampleSize\": 0,\r\n    \"regionID\": 1,\r\n    \"vintageID\": 9,\r\n    \"createdDate\": \"2021-07-03T07:51:33.658Z\",\r\n    \"createdBy\": \"string\",\r\n    \"plannedStartDate\": \"2021-07-03T07:51:33.658Z\",\r\n    \"sampleSetNote\": \"string\",\r\n    \"defaultSampleSize\": 0,\r\n    \"measureInstanceID\": 0\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/SampleHeader?code={{Code}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"SampleHeader"
							],
							"query": [
								{
									"key": "code",
									"value": "{{Code}}"
								},
								{
									"key": "RegionID",
									"value": "1",
									"disabled": true
								},
								{
									"key": "VintageID",
									"value": "8",
									"disabled": true
								},
								{
									"key": "SampleSetID",
									"value": "1",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GetLookUps",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer eyJ0eXAiOiJKV1QiLCJub25jZSI6IlM2NnI4VFZCRVFQNWRfTy12c2huWk9vX3Z1aTZweVRtVDdTSUtDVmJWcEEiLCJhbGciOiJSUzI1NiIsIng1dCI6IjVPZjlQNUY5Z0NDd0NtRjJCT0hIeEREUS1EayIsImtpZCI6IjVPZjlQNUY5Z0NDd0NtRjJCT0hIeEREUS1EayJ9.eyJhdWQiOiIwMDAwMDAwMy0wMDAwLTAwMDAtYzAwMC0wMDAwMDAwMDAwMDAiLCJpc3MiOiJodHRwczovL3N0cy53aW5kb3dzLm5ldC8yMGFkODczMS1hNGIzLTQxOWUtOWVkNi0wYjhkNjU2YWU4OWQvIiwiaWF0IjoxNjA4ODQ5MzQ5LCJuYmYiOjE2MDg4NDkzNDksImV4cCI6MTYwODg1MzI0OSwiYWNjdCI6MCwiYWNyIjoiMSIsImFjcnMiOlsidXJuOnVzZXI6cmVnaXN0ZXJzZWN1cml0eWluZm8iLCJ1cm46bWljcm9zb2Z0OnJlcTEiLCJ1cm46bWljcm9zb2Z0OnJlcTIiLCJ1cm46bWljcm9zb2Z0OnJlcTMiLCJjMSIsImMyIiwiYzMiLCJjNCIsImM1IiwiYzYiLCJjNyIsImM4IiwiYzkiLCJjMTAiLCJjMTEiLCJjMTIiLCJjMTMiLCJjMTQiLCJjMTUiLCJjMTYiLCJjMTciLCJjMTgiLCJjMTkiLCJjMjAiLCJjMjEiLCJjMjIiLCJjMjMiLCJjMjQiLCJjMjUiXSwiYWlvIjoiQVVRQXUvOFNBQUFBUjNLcStLeGdPRGdWZk1uWWo2dUdnN3NIcHdWNHBVam5KTXhFckc1d2ZLMnFqSy9xMFB6S0FSOFkxT2pxelRWM2JPQWFPU3BTTmduTHVtTW1HaU5tckE9PSIsImFtciI6WyJwd2QiLCJtZmEiXSwiYXBwX2Rpc3BsYXluYW1lIjoiVmluZWFOb3ZhV2ViRGV2IiwiYXBwaWQiOiIwNTczNzFhNC02NGVkLTQwOWUtOWRmNy1hODcyMWZhY2NhYWMiLCJhcHBpZGFjciI6IjAiLCJmYW1pbHlfbmFtZSI6ImtoYW56eiIsImdpdmVuX25hbWUiOiJpcmZhbiIsImlkdHlwIjoidXNlciIsImlwYWRkciI6IjExOS4xOC4xLjgwIiwibmFtZSI6IklyZmFuIEtoYW4iLCJvaWQiOiIzY2Q5M2Y0MS01YzJiLTRjYTgtYWNhMC1iODUwYTMzNzU0MjkiLCJwbGF0ZiI6IjMiLCJwdWlkIjoiMTAwMzdGRkVBNjYzMEYwMyIsInJoIjoiMC5BUVlBTVlldElMT2tua0dlMWd1TlpXcm9uYVJ4Y3dYdFpKNUFuZmVvY2gtc3lxd0dBSXcuIiwic2NwIjoiQXBwbGljYXRpb24uUmVhZC5BbGwgT3JnYW5pemF0aW9uLlJlYWQuQWxsIFVzZXIuUmVhZCBwcm9maWxlIG9wZW5pZCBlbWFpbCIsInNpZ25pbl9zdGF0ZSI6WyJrbXNpIl0sInN1YiI6IkhFUV82QjVMR1VZOHhoR2JvY1B4VFp6Y2M3YWZXd3hqMllrbk9JYzdiM28iLCJ0ZW5hbnRfcmVnaW9uX3Njb3BlIjoiT0MiLCJ0aWQiOiIyMGFkODczMS1hNGIzLTQxOWUtOWVkNi0wYjhkNjU2YWU4OWQiLCJ1bmlxdWVfbmFtZSI6IklyZmFuQGluZm9wb3dlci5jby5ueiIsInVwbiI6IklyZmFuQGluZm9wb3dlci5jby5ueiIsInV0aSI6InlmSVk2eVFyekVPM1M0VUFDOU5aQVEiLCJ2ZXIiOiIxLjAiLCJ3aWRzIjpbImI3OWZiZjRkLTNlZjktNDY4OS04MTQzLTc2YjE5NGU4NTUwOSJdLCJ4bXNfc3QiOnsic3ViIjoiZHVadlU3RmVQemhweWdjOV9QcDZCbnl5RHVQcHMyUDhrcG85UXJ3N2lPYyJ9LCJ4bXNfdGNkdCI6MTM1MTU1MDIwMX0.UF4YAMTF03c0FBbU02hccXOix5-yzTvM6x7mOvjdM2fgVANpNwPKi5iUHHMMPfJHWfQJbF2c1ZGfX5xl9luHCP0Q6L4YY9W6pSCLi43MNPCuOzJi8ifJE-le2zpbZvS9OI-qTEnZZnNPnFFnuTPcpi3FyfVq5T8nOInU6LgaoMh5j-n-5jX1h-Dgxc-aCwWpR7_jxFTlTv0GbMvWZjcswIwQnPFx1uFbhpf2o4TYhfYU7LH9HpER_DOzJlH-JLunJVWq25uHFgWPvKRNiH78T6ictw23-7t8hwq1W5-PMJIMV9CL-wqEWfQsPdd2Q-kUU0LI_oqWyDPFvjtFj6cEVA",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/GetLookUP?code={{Code}}&LookUpName=Classification",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"GetLookUP"
							],
							"query": [
								{
									"key": "code",
									"value": "{{Code}}"
								},
								{
									"key": "LookUpName",
									"value": "Classification"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GetSampleBlockVintages",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/SampleBlockVintages?code={{Code}}&RegionID=1&VintageID=8&SampleSetID=1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"SampleBlockVintages"
							],
							"query": [
								{
									"key": "code",
									"value": "{{Code}}"
								},
								{
									"key": "RegionID",
									"value": "1"
								},
								{
									"key": "VintageID",
									"value": "8"
								},
								{
									"key": "SampleSetID",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "IdentityVineyardBlocks",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/IdentityVineyardBlocks?code={{Code}}&IdentityID=1271",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"IdentityVineyardBlocks"
							],
							"query": [
								{
									"key": "code",
									"value": "{{Code}}"
								},
								{
									"key": "IdentityID",
									"value": "1271"
								},
								{
									"key": "IdentityTypeID",
									"value": "2",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "IdentityVineyardBlocksV2_S",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonSch =[ {\r",
									"    \"$schema\": \"http://json-schema.org/draft-06/schema\",\r",
									"    \"$id\": \"http://example.com/example.json\",\r",
									"    \"type\": \"array\",\r",
									"    \"additionalItems\": false,\r",
									"    \"items\": {\r",
									"        \"$id\": \"#/items\",\r",
									"        \"anyOf\": [\r",
									"            {\r",
									"                \"$id\": \"#/items/anyOf/0\",\r",
									"                \"type\": \"object\",\r",
									"                \"required\": [\r",
									"                    \"id\",\r",
									"                    \"vineyardID\",\r",
									"                    \"blockRef\",\r",
									"                    \"sectionRef\",\r",
									"                    \"subSectionRef\",\r",
									"                    \"blockFullName\",\r",
									"                    \"datePlanted\",\r",
									"                    \"latestVintageID\",\r",
									"                    \"blockVintageStatusID\",\r",
									"                    \"version\",\r",
									"                    \"varietyID\",\r",
									"                    \"cloneID\",\r",
									"                    \"rootStockID\",\r",
									"                    \"plantedArea\",\r",
									"                    \"rowSpacing\",\r",
									"                    \"plantSpacing\",\r",
									"                    \"plantedVines\",\r",
									"                    \"startRow\",\r",
									"                    \"endRow\",\r",
									"                    \"row_Count\",\r",
									"                    \"linkCode01\",\r",
									"                    \"linkCode02\",\r",
									"                    \"blockNotes\",\r",
									"                    \"activeFromDate\",\r",
									"                    \"activeToDate\",\r",
									"                    \"ts\"\r",
									"                ],\r",
									"                \"properties\": {\r",
									"                    \"id\": {\r",
									"                        \"$id\": \"#/items/anyOf/0/properties/id\",\r",
									"                        \"type\": \"integer\"\r",
									"                    },\r",
									"                    \"vineyardID\": {\r",
									"                        \"$id\": \"#/items/anyOf/0/properties/vineyardID\",\r",
									"                        \"type\": \"integer\"\r",
									"                    },\r",
									"                    \"blockRef\": {\r",
									"                        \"$id\": \"#/items/anyOf/0/properties/blockRef\",\r",
									"                        \"type\": \"string\"\r",
									"                    },\r",
									"                    \"sectionRef\": {\r",
									"                        \"$id\": \"#/items/anyOf/0/properties/sectionRef\",\r",
									"                        \"type\": \"string\"\r",
									"                    },\r",
									"                    \"subSectionRef\": {\r",
									"                        \"$id\": \"#/items/anyOf/0/properties/subSectionRef\",\r",
									"                        \"type\": \"string\"\r",
									"                    },\r",
									"                    \"blockFullName\": {\r",
									"                        \"$id\": \"#/items/anyOf/0/properties/blockFullName\",\r",
									"                        \"type\": \"string\"\r",
									"                    },\r",
									"                    \"datePlanted\": {\r",
									"                        \"$id\": \"#/items/anyOf/0/properties/datePlanted\",\r",
									"                        \"type\": \"string\"\r",
									"                    },\r",
									"                    \"latestVintageID\": {\r",
									"                        \"$id\": \"#/items/anyOf/0/properties/latestVintageID\",\r",
									"                        \"type\": \"integer\"\r",
									"                    },\r",
									"                    \"blockVintageStatusID\": {\r",
									"                        \"$id\": \"#/items/anyOf/0/properties/blockVintageStatusID\",\r",
									"                        \"type\": \"integer\"\r",
									"                    },\r",
									"                    \"version\": {\r",
									"                        \"$id\": \"#/items/anyOf/0/properties/version\",\r",
									"                        \"type\": \"string\"\r",
									"                    },\r",
									"                    \"varietyID\": {\r",
									"                        \"$id\": \"#/items/anyOf/0/properties/varietyID\",\r",
									"                        \"type\": \"integer\"\r",
									"                    },\r",
									"                    \"cloneID\": {\r",
									"                        \"$id\": \"#/items/anyOf/0/properties/cloneID\",\r",
									"                        \"type\": \"integer\"\r",
									"                    },\r",
									"                    \"rootStockID\": {\r",
									"                        \"$id\": \"#/items/anyOf/0/properties/rootStockID\",\r",
									"                        \"type\": \"integer\"\r",
									"                    },\r",
									"                    \"plantedArea\": {\r",
									"                        \"$id\": \"#/items/anyOf/0/properties/plantedArea\",\r",
									"                        \"type\": \"number\"\r",
									"                    },\r",
									"                    \"rowSpacing\": {\r",
									"                        \"$id\": \"#/items/anyOf/0/properties/rowSpacing\",\r",
									"                        \"type\": \"number\"\r",
									"                    },\r",
									"                    \"plantSpacing\": {\r",
									"                        \"$id\": \"#/items/anyOf/0/properties/plantSpacing\",\r",
									"                        \"type\": \"number\"\r",
									"                    },\r",
									"                    \"plantedVines\": {\r",
									"                        \"$id\": \"#/items/anyOf/0/properties/plantedVines\",\r",
									"                        \"type\": \"integer\"\r",
									"                    },\r",
									"                    \"startRow\": {\r",
									"                        \"$id\": \"#/items/anyOf/0/properties/startRow\",\r",
									"                        \"type\": \"string\"\r",
									"                    },\r",
									"                    \"endRow\": {\r",
									"                        \"$id\": \"#/items/anyOf/0/properties/endRow\",\r",
									"                        \"type\": \"string\"\r",
									"                    },\r",
									"                    \"row_Count\": {\r",
									"                        \"$id\": \"#/items/anyOf/0/properties/row_Count\",\r",
									"                        \"type\": \"integer\"\r",
									"                    },\r",
									"                    \"linkCode01\": {\r",
									"                        \"$id\": \"#/items/anyOf/0/properties/linkCode01\",\r",
									"                        \"type\": \"string\"\r",
									"                    },\r",
									"                    \"linkCode02\": {\r",
									"                        \"$id\": \"#/items/anyOf/0/properties/linkCode02\",\r",
									"                        \"type\": \"string\"\r",
									"                    },\r",
									"                    \"blockNotes\": {\r",
									"                        \"$id\": \"#/items/anyOf/0/properties/blockNotes\",\r",
									"                        \"type\": \"string\"\r",
									"                    },\r",
									"                    \"activeFromDate\": {\r",
									"                        \"$id\": \"#/items/anyOf/0/properties/activeFromDate\",\r",
									"                        \"type\": \"string\"\r",
									"                    },\r",
									"                    \"activeToDate\": {\r",
									"                        \"$id\": \"#/items/anyOf/0/properties/activeToDate\",\r",
									"                        \"type\": \"null\"\r",
									"                    },\r",
									"                    \"ts\": {\r",
									"                        \"$id\": \"#/items/anyOf/0/properties/ts\",\r",
									"                        \"type\": \"string\"\r",
									"                    }\r",
									"                },\r",
									"                \"additionalProperties\": false\r",
									"            }\r",
									"        ]\r",
									"    }\r",
									"}]\r",
									"\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"pm.test('Checking  Schema Validation', function() {\r",
									"    var result=tv4.validate(jsonData, jsonSch);\r",
									"    if(result.valid){\r",
									"    console.log(result);\r",
									"    }\r",
									"    pm.expect(result).to.be.true;\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/IdentityVineyardBlocks?code={{Code}}&IdentityID=1271",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"IdentityVineyardBlocks"
							],
							"query": [
								{
									"key": "code",
									"value": "{{Code}}"
								},
								{
									"key": "IdentityID",
									"value": "1271"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "BlockVintage",
			"item": [
				{
					"name": "BlcockVintage",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string blockVintageStatusID\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"blockVintageStatusID\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true,
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": 0,\r\n  \"vineyardBlockID\": 0,\r\n  \"vintageID\": 0,\r\n  \"blockVintageStatusID\": 0,\r\n  \"defaultSampleSize\": 0,\r\n  \"trellisID\": 0,\r\n  \"ts\": \"string\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/BlockVintage?code={{Code}}&VineyardBlockID=121",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"BlockVintage"
							],
							"query": [
								{
									"key": "code",
									"value": "{{Code}}"
								},
								{
									"key": "VineyardBlockID",
									"value": "121"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "BlockVintage_400",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"let jsonData = pm.response.json();\r",
									"console.log(jsonData);"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true,
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Authorization",
								"value": "aaaaz",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": 0,\r\n  \"vineyardBlockID\": 0,\r\n  \"vintageID\": 0,\r\n  \"blockVintageStatusID\": 0,\r\n  \"defaultSampleSize\": 0,\r\n  \"trellisID\": 0,\r\n  \"ts\": \"string\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/BlockVintage?code={{Code}}&VineyardBlockID=121",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"BlockVintage"
							],
							"query": [
								{
									"key": "code",
									"value": "{{Code}}"
								},
								{
									"key": "VineyardBlockID",
									"value": "121"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "BlockVintage_500",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 500\", function () {\r",
									"    pm.response.to.have.status(500);\r",
									"});\r",
									"\r",
									"let jsonData = pm.response.json();\r",
									"//console.log(jsonData);\r",
									"\r",
									"//console.log(pm.environment.get(\"fakeUrl\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var fakeUrl = \"https://gloabaserver.com\"\r",
									"//pm.environment.set(\"baseUrl\", fakeUrl);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true,
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "awsv4"
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": 0,\r\n  \"vineyardBlockID\": 0,\r\n  \"vintageID\": 0,\r\n  \"blockVintageStatusID\": 0,\r\n  \"defaultSampleSize\": 0,\r\n  \"trellisID\": 0,\r\n  \"ts\": \"string\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/BlockVintage?code={{Code}}&VineyardBlockID=121",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"BlockVintage"
							],
							"query": [
								{
									"key": "code",
									"value": "{{Code}}"
								},
								{
									"key": "VineyardBlockID",
									"value": "121"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "BlockVintage_500",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 500\", function () {\r",
									"    pm.response.to.have.status(500);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"/* geniune statuse code 500 */"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": 0,\r\n  \"vineyardBlockID\": 0,\r\n  \"vintageID\": 0,\r\n  \"blockVintageStatusID\": 0,\r\n  \"defaultSampleSize\": 0,\r\n  \"trellisID\": 0,\r\n  \"ts\": \"string\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/BlockVintage?code={{Code}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"BlockVintage"
							],
							"query": [
								{
									"key": "code",
									"value": "{{Code}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "BlockVintage_500",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 500\", function () {\r",
									"    pm.response.to.have.status(500);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"/* geniune statuse code 500 */"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": 0,\r\n  \"vineyardBlockID\": 0,\r\n  \"vintageID\": 0,\r\n  \"blockVintageStatusID\": 0,\r\n  \"defaultSampleSize\": 0,\r\n  \"trellisID\": 0,\r\n  \"ts\": \"string\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/BlockVintage?code={{Code}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"BlockVintage"
							],
							"query": [
								{
									"key": "code",
									"value": "{{Code}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "BlockVintage_500",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 500\", function () {\r",
									"    pm.response.to.have.status(500);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"/* geniune statuse code 500 */"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": 0,\r\n  \"vineyardBlockID\": 0,\r\n  \"vintageID\": 0,\r\n  \"blockVintageStatusID\": 0,\r\n  \"defaultSampleSize\": 0,\r\n  \"trellisID\": 0,\r\n  \"ts\": \"string\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/BlockVintage?code={{Code}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"BlockVintage"
							],
							"query": [
								{
									"key": "code",
									"value": "{{Code}}"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "CropBlockPhenology",
			"item": [
				{
					"name": "CropBlockPhenology_200",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Phenology\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/CropBlockPhenology?VineyardBlockID=121&VintageID=9&code={{Code}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"CropBlockPhenology"
							],
							"query": [
								{
									"key": "VineyardBlockID",
									"value": "121"
								},
								{
									"key": "VintageID",
									"value": "9"
								},
								{
									"key": "code",
									"value": "{{Code}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "CropBlockPhenology_400",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is Bad Request\", function () {\r",
									"    pm.response.to.have.status(\"Bad Request\");\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/CropBlockPhenology?VineyardBlockID=121&VintageID=9&code={{Code}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"CropBlockPhenology"
							],
							"query": [
								{
									"key": "VineyardBlockID",
									"value": "121"
								},
								{
									"key": "VintageID",
									"value": "9"
								},
								{
									"key": "code",
									"value": "{{Code}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "CropBlockPhenology_500",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 500\", function () {\r",
									"    pm.response.to.have.status(500);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is Internal Server Error\", function () {\r",
									"    pm.response.to.have.status(\"Internal Server Error\");\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "awsv4"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/CropBlockPhenology?VineyardBlockID=121&VintageID=9&code={{Code}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"CropBlockPhenology"
							],
							"query": [
								{
									"key": "VineyardBlockID",
									"value": "121"
								},
								{
									"key": "VintageID",
									"value": "9"
								},
								{
									"key": "code",
									"value": "{{Code}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "CropBlockPhenology_500",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 500\", function () {\r",
									"    pm.response.to.have.status(500);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is Internal Server Error\", function () {\r",
									"    pm.response.to.have.status(\"Internal Server Error\");\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": 0,\r\n  \"vineyardBlockId\": 0,\r\n  \"vintageId\": 0,\r\n  \"blockVintageId\": 0,\r\n  \"phenologyMeasureSet\": \"string\",\r\n  \"isPrivate\": true,\r\n  \"phenologyMeasureID\": 0,\r\n  \"phenologyMeasureOptionID\": 0,\r\n  \"measureValue\": \"string\",\r\n  \"phenologyMeasureDate\": \"2021-09-26T04:36:14.340Z\",\r\n  \"measure\": \"string\",\r\n  \"phenologyMeasureValue1\": 0,\r\n  \"phenologyMeasureValue2\": 0,\r\n  \"phenologyMeasureValue3\": 0,\r\n  \"isEditable\": true,\r\n  \"phenologyMeasureSetSortOrder\": 0,\r\n  \"note\": \"string\",\r\n  \"modifiedBy\": \"string\",\r\n  \"cropNoteID\": 0,\r\n  \"noteImage\": \"string\",\r\n  \"ts\": \"string\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/CropBlockPhenology?code={{Code}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"CropBlockPhenology"
							],
							"query": [
								{
									"key": "code",
									"value": "{{Code}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "CropBlockPhenology_500",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 500\", function () {\r",
									"    pm.response.to.have.status(500);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is Internal Server Error\", function () {\r",
									"    pm.response.to.have.status(\"Internal Server Error\");\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": 0,\r\n  \"vineyardBlockId\": 0,\r\n  \"vintageId\": 0,\r\n  \"blockVintageId\": 0,\r\n  \"phenologyMeasureSet\": \"string\",\r\n  \"isPrivate\": true,\r\n  \"phenologyMeasureID\": 0,\r\n  \"phenologyMeasureOptionID\": 0,\r\n  \"measureValue\": \"string\",\r\n  \"phenologyMeasureDate\": \"2021-09-26T04:37:51.011Z\",\r\n  \"measure\": \"string\",\r\n  \"phenologyMeasureValue1\": 0,\r\n  \"phenologyMeasureValue2\": 0,\r\n  \"phenologyMeasureValue3\": 0,\r\n  \"isEditable\": true,\r\n  \"phenologyMeasureSetSortOrder\": 0,\r\n  \"note\": \"string\",\r\n  \"modifiedBy\": \"string\",\r\n  \"cropNoteID\": 0,\r\n  \"noteImage\": \"string\",\r\n  \"ts\": \"string\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/CropBlockPhenology?code={{Code}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"CropBlockPhenology"
							],
							"query": [
								{
									"key": "code",
									"value": "{{Code}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "CropBlockPhenology_500",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 500\", function () {\r",
									"    pm.response.to.have.status(500);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is Internal Server Error\", function () {\r",
									"    pm.response.to.have.status(\"Internal Server Error\");\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": 0,\r\n  \"ts\": \"string\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/CropBlockPhenology?code={{Code}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"CropBlockPhenology"
							],
							"query": [
								{
									"key": "code",
									"value": "{{Code}}"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "CropBlockVintage",
			"item": [
				{
					"name": "CropBlockVintage",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string blockVintageId\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"blockVintageId\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/CropBlockVintage?VineyardBlockID=121&VintageID=9&code={{Code}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"CropBlockVintage"
							],
							"query": [
								{
									"key": "VineyardBlockID",
									"value": "121"
								},
								{
									"key": "VintageID",
									"value": "9"
								},
								{
									"key": "code",
									"value": "{{Code}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "CropBlockVintage_400",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is Bad Request\", function () {\r",
									"    pm.response.to.have.status(\"Bad Request\");\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/CropBlockVintage?VineyardBlockID=121&VintageID=9&code={{Code}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"CropBlockVintage"
							],
							"query": [
								{
									"key": "VineyardBlockID",
									"value": "121"
								},
								{
									"key": "VintageID",
									"value": "9"
								},
								{
									"key": "code",
									"value": "{{Code}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "CropBlockVintage_500",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 500\", function () {\r",
									"    pm.response.to.have.status(500);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is Internal Server Error\", function () {\r",
									"    pm.response.to.have.status(\"Internal Server Error\");\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "awsv4"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/CropBlockVintage?VineyardBlockID=121&VintageID=9&code={{Code}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"CropBlockVintage"
							],
							"query": [
								{
									"key": "VineyardBlockID",
									"value": "121"
								},
								{
									"key": "VintageID",
									"value": "9"
								},
								{
									"key": "code",
									"value": "{{Code}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "CropBlockVintage_500",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 500\", function () {\r",
									"    pm.response.to.have.status(500);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is Internal Server Error\", function () {\r",
									"    pm.response.to.have.status(\"Internal Server Error\");\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "awsv4"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": 0,\r\n  \"vineyardBlockId\": 0,\r\n  \"vintageId\": 0,\r\n  \"blockVintageId\": 0,\r\n  \"measure\": \"string\",\r\n  \"measureSource\": \"string\",\r\n  \"isPrivate\": true,\r\n  \"measureInstanceId\": 0,\r\n  \"measureType\": \"string\",\r\n  \"measureDate\": \"2021-09-26T04:47:45.584Z\",\r\n  \"measureValue\": \"string\",\r\n  \"measureValue1\": 0,\r\n  \"measureValue2\": 0,\r\n  \"isEditable\": true,\r\n  \"measureSort\": 0,\r\n  \"note\": \"string\",\r\n  \"modifiedBy\": \"string\",\r\n  \"noteImage\": \"string\",\r\n  \"cropNoteID\": 0,\r\n  \"ts\": \"string\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/CropBlockVintage?code={{Code}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"CropBlockVintage"
							],
							"query": [
								{
									"key": "code",
									"value": "{{Code}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "CropBlockVintage_500",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 500\", function () {\r",
									"    pm.response.to.have.status(500);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is Internal Server Error\", function () {\r",
									"    pm.response.to.have.status(\"Internal Server Error\");\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "awsv4"
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": 0,\r\n  \"vineyardBlockId\": 0,\r\n  \"vintageId\": 0,\r\n  \"blockVintageId\": 0,\r\n  \"measure\": \"string\",\r\n  \"measureSource\": \"string\",\r\n  \"isPrivate\": true,\r\n  \"measureInstanceId\": 0,\r\n  \"measureType\": \"string\",\r\n  \"measureDate\": \"2021-09-26T04:47:45.584Z\",\r\n  \"measureValue\": \"string\",\r\n  \"measureValue1\": 0,\r\n  \"measureValue2\": 0,\r\n  \"isEditable\": true,\r\n  \"measureSort\": 0,\r\n  \"note\": \"string\",\r\n  \"modifiedBy\": \"string\",\r\n  \"noteImage\": \"string\",\r\n  \"cropNoteID\": 0,\r\n  \"ts\": \"string\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/CropBlockVintage?code={{Code}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"CropBlockVintage"
							],
							"query": [
								{
									"key": "code",
									"value": "{{Code}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "CropBlockVintage_500",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 500\", function () {\r",
									"    pm.response.to.have.status(500);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is Internal Server Error\", function () {\r",
									"    pm.response.to.have.status(\"Internal Server Error\");\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "awsv4"
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": 0,\r\n  \"ts\": \"string\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/CropBlockVintage?code={{Code}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"CropBlockVintage"
							],
							"query": [
								{
									"key": "code",
									"value": "{{Code}}"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "HealthCheck",
			"item": [
				{
					"name": "healthCheck_404",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is Not Found\", function () {\r",
									"    pm.response.to.have.status(\"Not Found\");\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api​/healthcheck?code={{Code}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api​",
								"healthcheck"
							],
							"query": [
								{
									"key": "code",
									"value": "{{Code}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "healthCheck_404 Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is Not Found\", function () {\r",
									"    pm.response.to.have.status(\"Not Found\");\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api​/healthcheck?code={{Code}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api​",
								"healthcheck"
							],
							"query": [
								{
									"key": "code",
									"value": "{{Code}}"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Identity",
			"item": [
				{
					"name": "Identity_200",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var schema = {\r",
									"    \r",
									"    \"items\": {\r",
									"        \"id\": \"#/items\",\r",
									"        \"type\": \"object\",\r",
									"        \"required\": [\r",
									"            \"id\",\r",
									"            \"identityTypeID\",\r",
									"            \"displayName\",\r",
									"            \"businessUnitID\",\r",
									"            \"createdDate\",\r",
									"            \"inaactiveDate\",\r",
									"            \"identityInactiveReasonID\",\r",
									"            \"inactiveComment\",\r",
									"            \"ts\"\r",
									"        ],\r",
									"        \"properties\": {\r",
									"            \"id\": {\r",
									"                \"id\": \"#/items/properties/id\",\r",
									"                \"type\": \"integer\"\r",
									"            },\r",
									"            \"identityTypeID\": {\r",
									"                \"id\": \"#/items/properties/identityTypeID\",\r",
									"                \"type\": \"integer\"\r",
									"            },\r",
									"            \"displayName\": {\r",
									"                \"id\": \"#/items/properties/displayName\",\r",
									"                \"type\": \"string\"\r",
									"            },\r",
									"            \"businessUnitID\": {\r",
									"                \"id\": \"#/items/properties/businessUnitID\",\r",
									"                \"type\": \"integer\"\r",
									"            },\r",
									"            \"createdDate\": {\r",
									"                \"id\": \"#/items/properties/createdDate\",\r",
									"                \"type\": \"string\"\r",
									"            },\r",
									"            \"inaactiveDate\": {\r",
									"                \"id\": \"#/items/properties/inaactiveDate\",\r",
									"                \"type\": \"null\"\r",
									"            },\r",
									"            \"identityInactiveReasonID\": {\r",
									"                \"id\": \"#/items/properties/identityInactiveReasonID\",\r",
									"                \"type\": \"integer\"\r",
									"            },\r",
									"            \"inactiveComment\": {\r",
									"                \"id\": \"#/items/properties/inactiveComment\",\r",
									"                \"type\": \"null\"\r",
									"            },\r",
									"            \"ts\": {\r",
									"                \"id\": \"#/items/properties/ts\",\r",
									"                \"type\": \"string\"\r",
									"            }\r",
									"        }\r",
									"    }\r",
									"}\r",
									"/*var jsonData = JSON.parse(responseBody);\r",
									"\r",
									"pm.test('Checking Response Against Schema Validation 1', function() {\r",
									"    var result=tv4.validateMultiple(jsonData, jsonSchema);\r",
									"    console.log(result);\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});\r",
									"\r",
									"\r",
									"pm.test('Checking  Schema Validation 2', function() {\r",
									"    var result=tv4.validateResult(pm.response.json(), jsonSchema);\r",
									"    if(result.valid){\r",
									"   // console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});*/\r",
									"\r",
									"\r",
									"pm.test(\"Validate Schema\",() => {\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string businessUnitID\", function () { pm.expect(pm.response.text()).to.include(\"businessUnitID\");\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json; charset=utf-8 ",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/Identity?code={{Code}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"Identity"
							],
							"query": [
								{
									"key": "code",
									"value": "{{Code}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Identity_400",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is Bad Request\", function () {\r",
									"    pm.response.to.have.status(\"Bad Request\");\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json; charset=utf-8 ",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/Identity?code={{Code}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"Identity"
							],
							"query": [
								{
									"key": "code",
									"value": "{{Code}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Identity_500",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 500\", function () {\r",
									"    pm.response.to.have.status(500);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is Internal Server Error\", function () {\r",
									"    pm.response.to.have.status(\"Internal Server Error\");\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "awsv4"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json; charset=utf-8 ",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/Identity?code={{Code}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"Identity"
							],
							"query": [
								{
									"key": "code",
									"value": "{{Code}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "IdentityDetails_404",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is Not Found\", function () {\r",
									"    pm.response.to.have.status(\"Not Found\");\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json; charset=utf-8 ",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}​/api​/v1​/IdentityDetails?code={{Code}}",
							"host": [
								"{{baseUrl}}​"
							],
							"path": [
								"api​",
								"v1​",
								"IdentityDetails"
							],
							"query": [
								{
									"key": "code",
									"value": "{{Code}}"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "IdentityClassification",
			"item": [
				{
					"name": "IdentityClassification_200",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const schema= {\r",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
									"    \"$id\": \"http://example.com/example.json\",\r",
									"    \"type\": \"array\",\r",
									"    \"items\": {\r",
									"        \"$id\": \"#/items\",\r",
									"        \"type\": \"object\",\r",
									"        \"required\": [\r",
									"            \"id\",\r",
									"            \"classification\",\r",
									"            \"classificationGroup\",\r",
									"            \"classificationID\",\r",
									"            \"classificationGroupID\",\r",
									"            \"effectiveFromDate\",\r",
									"            \"effectiveToDate\",\r",
									"            \"ts\"\r",
									"        ],\r",
									"        \"properties\": {\r",
									"            \"id\": {\r",
									"                \"$id\": \"#/items/properties/id\",\r",
									"                \"type\": \"integer\"\r",
									"            },\r",
									"            \"classification\": {\r",
									"                \"$id\": \"#/items/properties/classification\",\r",
									"                \"type\": \"string\"\r",
									"            },\r",
									"            \"classificationGroup\": {\r",
									"                \"$id\": \"#/items/properties/classificationGroup\",\r",
									"                \"type\": \"string\"\r",
									"            },\r",
									"            \"classificationID\": {\r",
									"                \"$id\": \"#/items/properties/classificationID\",\r",
									"                \"type\": \"integer\"\r",
									"            },\r",
									"            \"classificationGroupID\": {\r",
									"                \"$id\": \"#/items/properties/classificationGroupID\",\r",
									"                \"type\": \"integer\"\r",
									"            },\r",
									"            \"effectiveFromDate\": {\r",
									"                \"$id\": \"#/items/properties/effectiveFromDate\",\r",
									"                \"type\": \"string\"\r",
									"            },\r",
									"            \"effectiveToDate\": {\r",
									"                \"$id\": \"#/items/properties/effectiveToDate\",\r",
									"                \"type\": \"string\"\r",
									"            },\r",
									"            \"ts\": {\r",
									"                \"$id\": \"#/items/properties/ts\",\r",
									"                \"type\": \"string\"\r",
									"            }\r",
									"        }\r",
									"    }\r",
									"} \r",
									"\r",
									"pm.test(\"Validate Schema\"),() => {\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"};\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer aakll",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/IdentityClassification?code={{Code}}&IdentityID=2385",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"IdentityClassification"
							],
							"query": [
								{
									"key": "code",
									"value": "{{Code}}"
								},
								{
									"key": "IdentityID",
									"value": "2385"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "IdentityClassification_400",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is Bad Request\", function () {\r",
									"    pm.response.to.have.status(\"Bad Request\");\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true,
						"disableUrlEncoding": false
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer aakll",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "pm.test(\"Status code is 400\", function () {\r\n    pm.response.to.have.status(400);\r\n});\r\n\r\npm.test(\"Status code is Bad Request\", function () {\r\n    pm.response.to.have.status(\"Bad Request\");\r\n});\r\n\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/IdentityClassification?code={{Code}}&IdentityID=2385",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"IdentityClassification"
							],
							"query": [
								{
									"key": "code",
									"value": "{{Code}}"
								},
								{
									"key": "IdentityID",
									"value": "2385"
								},
								{
									"key": "xx",
									"value": "252",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "IdentityClassification_500",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 500\", function () {\r",
									"    pm.response.to.have.status(500);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is Internal Server Error\", function () {\r",
									"    pm.response.to.have.status(\"Internal Server Error\");\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "awsv4"
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer aakll",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/IdentityClassification?code={{Code}}&IdentityID=2385",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"IdentityClassification"
							],
							"query": [
								{
									"key": "code",
									"value": "{{Code}}"
								},
								{
									"key": "IdentityID",
									"value": "2385"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "IdentityClassification_200",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var schema = {\r",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
									"    \"$id\": \"http://example.com/example.json\",\r",
									"    \"type\": \"object\",\r",
									"    \"required\": [\r",
									"        \"id\",\r",
									"        \"identityID\",\r",
									"        \"classificationID\",\r",
									"        \"effectiveFromDate\",\r",
									"        \"effectiveToDate\",\r",
									"        \"ts\"\r",
									"    ],\r",
									"    \"properties\": {\r",
									"        \"id\": {\r",
									"            \"$id\": \"#/properties/id\",\r",
									"            \"type\": \"integer\"\r",
									"        },\r",
									"        \"identityID\": {\r",
									"            \"$id\": \"#/properties/identityID\",\r",
									"            \"type\": \"integer\"\r",
									"        },\r",
									"        \"classificationID\": {\r",
									"            \"$id\": \"#/properties/classificationID\",\r",
									"            \"type\": \"integer\"\r",
									"        },\r",
									"        \"effectiveFromDate\": {\r",
									"            \"$id\": \"#/properties/effectiveFromDate\",\r",
									"            \"type\": \"string\"\r",
									"        },\r",
									"        \"effectiveToDate\": {\r",
									"            \"$id\": \"#/properties/effectiveToDate\",\r",
									"            \"type\": \"null\"\r",
									"        },\r",
									"        \"ts\": {\r",
									"            \"$id\": \"#/properties/ts\",\r",
									"            \"type\": \"string\"\r",
									"        }\r",
									"    }\r",
									"}\r",
									"\r",
									"pm.test(\"Checking Json Schema Validation\"),()=>{\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"};\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer aakll",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"IdentityID\": 2385,\r\n    \"ClassificationID\": 14,\r\n    \"effectiveFromDate\": \"2020-12-23\",\r\n    \"effectiveToDate\": null\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/IdentityClassification?code={{Code}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"IdentityClassification"
							],
							"query": [
								{
									"key": "code",
									"value": "{{Code}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "IdentityClassification_500",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 500\", function () {\r",
									"    pm.response.to.have.status(500);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is Internal Server Error\", function () {\r",
									"    pm.response.to.have.status(\"Internal Server Error\");\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "awsv4"
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer aakll",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": 0,\r\n  \"identityID\": 0,\r\n  \"classificationID\": 0,\r\n  \"effectiveFromDate\": \"2021-09-26T09:18:15.695Z\",\r\n  \"effectiveToDate\": \"2021-09-26T09:18:15.695Z\",\r\n  \"ts\": \"string\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/IdentityClassification?code={{Code}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"IdentityClassification"
							],
							"query": [
								{
									"key": "code",
									"value": "{{Code}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GetIdentityClassifications",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer eyJ0eXAiOiJKV1QiLCJub25jZSI6IlUzM29ONU5XZDBLOEgxN0dkU2hZM0dFdGE1Y2I5Nmk3OE5VbTJ2aHNRUHMiLCJhbGciOiJSUzI1NiIsIng1dCI6Im5PbzNaRHJPRFhFSzFqS1doWHNsSFJfS1hFZyIsImtpZCI6Im5PbzNaRHJPRFhFSzFqS1doWHNsSFJfS1hFZyJ9.eyJhdWQiOiIwMDAwMDAwMy0wMDAwLTAwMDAtYzAwMC0wMDAwMDAwMDAwMDAiLCJpc3MiOiJodHRwczovL3N0cy53aW5kb3dzLm5ldC8yMGFkODczMS1hNGIzLTQxOWUtOWVkNi0wYjhkNjU2YWU4OWQvIiwiaWF0IjoxNjExMDQzNDg2LCJuYmYiOjE2MTEwNDM0ODYsImV4cCI6MTYxMTA0NzM4NiwiYWNjdCI6MCwiYWNyIjoiMSIsImFjcnMiOlsidXJuOnVzZXI6cmVnaXN0ZXJzZWN1cml0eWluZm8iLCJ1cm46bWljcm9zb2Z0OnJlcTEiLCJ1cm46bWljcm9zb2Z0OnJlcTIiLCJ1cm46bWljcm9zb2Z0OnJlcTMiLCJjMSIsImMyIiwiYzMiLCJjNCIsImM1IiwiYzYiLCJjNyIsImM4IiwiYzkiLCJjMTAiLCJjMTEiLCJjMTIiLCJjMTMiLCJjMTQiLCJjMTUiLCJjMTYiLCJjMTciLCJjMTgiLCJjMTkiLCJjMjAiLCJjMjEiLCJjMjIiLCJjMjMiLCJjMjQiLCJjMjUiXSwiYWlvIjoiQVVRQXUvOFNBQUFBT3NZK3NvVXlRRXpUM3BpZ05zN1Roa3FCRzlhZzZzeDBzOGl3VUhLbkxyWmIwQ0VzOExQcFFFc05xQWJtU0dCcGdVdkJQUTgzQUdreUM1bmN5UitqREE9PSIsImFtciI6WyJwd2QiLCJtZmEiXSwiYXBwX2Rpc3BsYXluYW1lIjoiVmluZWFOb3ZhV2ViRGV2IiwiYXBwaWQiOiIwNTczNzFhNC02NGVkLTQwOWUtOWRmNy1hODcyMWZhY2NhYWMiLCJhcHBpZGFjciI6IjAiLCJmYW1pbHlfbmFtZSI6ImtoYW56eiIsImdpdmVuX25hbWUiOiJpcmZhbiIsImlkdHlwIjoidXNlciIsImlwYWRkciI6IjExOS4xOC4xLjgwIiwibmFtZSI6IklyZmFuIEtoYW4iLCJvaWQiOiIzY2Q5M2Y0MS01YzJiLTRjYTgtYWNhMC1iODUwYTMzNzU0MjkiLCJwbGF0ZiI6IjMiLCJwdWlkIjoiMTAwMzdGRkVBNjYzMEYwMyIsInB3ZF9leHAiOiIzOTU3ODAiLCJwd2RfdXJsIjoiaHR0cHM6Ly9wb3J0YWwubWljcm9zb2Z0b25saW5lLmNvbS9DaGFuZ2VQYXNzd29yZC5hc3B4IiwicmgiOiIwLkFRWUFNWWV0SUxPa25rR2UxZ3VOWldyb25hUnhjd1h0Wko1QW5mZW9jaC1zeXF3R0FJdy4iLCJzY3AiOiJBcHBsaWNhdGlvbi5SZWFkLkFsbCBPcmdhbml6YXRpb24uUmVhZC5BbGwgVXNlci5SZWFkIHByb2ZpbGUgb3BlbmlkIGVtYWlsIiwic2lnbmluX3N0YXRlIjpbImttc2kiXSwic3ViIjoiSEVRXzZCNUxHVVk4eGhHYm9jUHhUWnpjYzdhZld3eGoyWWtuT0ljN2IzbyIsInRlbmFudF9yZWdpb25fc2NvcGUiOiJPQyIsInRpZCI6IjIwYWQ4NzMxLWE0YjMtNDE5ZS05ZWQ2LTBiOGQ2NTZhZTg5ZCIsInVuaXF1ZV9uYW1lIjoiSXJmYW5AaW5mb3Bvd2VyLmNvLm56IiwidXBuIjoiSXJmYW5AaW5mb3Bvd2VyLmNvLm56IiwidXRpIjoiVmFRTGtuTXdMa3lraUVsMnZXR3NBQSIsInZlciI6IjEuMCIsIndpZHMiOlsiYjc5ZmJmNGQtM2VmOS00Njg5LTgxNDMtNzZiMTk0ZTg1NTA5Il0sInhtc19zdCI6eyJzdWIiOiJkdVp2VTdGZVB6aHB5Z2M5X1BwNkJueXlEdVBwczJQOGtwbzlRcnc3aU9jIn0sInhtc190Y2R0IjoxMzUxNTUwMjAxfQ.EirXtpg1oHkIlhyXAG8mAsGp4ItV_DVCeTGZUR1WaZH2MYKZnQx26faJSkvFqD4RPu6yrig80PwIHLsTOdMf2Qirbfnm3dgXsUGOxFumGLcCYv_xu7gPig8IfFyc2qihUIrADfHA_BANu6IFV7KWOWEJ8ryELq2Jhy4iwcU4WhbbmS293yE7GpFgSEBB7ZTqqNgL-vI5o8A39rwTnzDf8ecSiNeuUF5KWb_3e5N6bwtP7iNStqoM28MSnoYlrCa23mmqO_tX_xMWiX7Z7m-l_-tD3iVcLEKALuv7pn3lKDnLujdMLImNESY_G_uX8B9Mw0cHDIAEZKIZ66NAO4N07Q",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/IdentityClassification?code={{Code}}&IdentityID=2385&IdentityTypeID=2",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"IdentityClassification"
							],
							"query": [
								{
									"key": "code",
									"value": "{{Code}}"
								},
								{
									"key": "IdentityID",
									"value": "2385"
								},
								{
									"key": "IdentityTypeID",
									"value": "2"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Vineyard",
			"item": [
				{
					"name": "IdentityVinyard_404",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is Not Found\", function () {\r",
									"    pm.response.to.have.status(\"Not Found\");\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}​/api​/v1​/IdentityVineyard?code={{Code}}&IdentityID=4",
							"host": [
								"{{baseUrl}}​"
							],
							"path": [
								"api​",
								"v1​",
								"IdentityVineyard"
							],
							"query": [
								{
									"key": "code",
									"value": "{{Code}}"
								},
								{
									"key": "IdentityID",
									"value": "4"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "IdentityVinyard_404",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is Not Found\", function () {\r",
									"    pm.response.to.have.status(\"Not Found\");\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": 0,\r\n  \"identityTypeID\": 0,\r\n  \"vineyardName\": \"string\",\r\n  \"vineyardKnownAs\": \"string\",\r\n  \"totalVineyardArea\": 0,\r\n  \"plantedArea\": 0,\r\n  \"subRegionID\": 0,\r\n  \"businessUnitID\": 0,\r\n  \"preferredContactMethodTypeID\": 0,\r\n  \"createdDate\": \"2021-09-26T05:53:53.060Z\",\r\n  \"ts\": \"string\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}​/api​/v1​/IdentityVineyard?code={{Code}}",
							"host": [
								"{{baseUrl}}​"
							],
							"path": [
								"api​",
								"v1​",
								"IdentityVineyard"
							],
							"query": [
								{
									"key": "code",
									"value": "{{Code}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "IdentityVinyard_404",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is Not Found\", function () {\r",
									"    pm.response.to.have.status(\"Not Found\");\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": 0,\r\n  \"identityTypeID\": 0,\r\n  \"vineyardName\": \"string\",\r\n  \"vineyardKnownAs\": \"string\",\r\n  \"totalVineyardArea\": 0,\r\n  \"plantedArea\": 0,\r\n  \"subRegionID\": 0,\r\n  \"businessUnitID\": 0,\r\n  \"preferredContactMethodTypeID\": 0,\r\n  \"createdDate\": \"2021-09-26T05:53:53.060Z\",\r\n  \"ts\": \"string\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}​/api​/v1​/IdentityVineyard?code={{Code}}",
							"host": [
								"{{baseUrl}}​"
							],
							"path": [
								"api​",
								"v1​",
								"IdentityVineyard"
							],
							"query": [
								{
									"key": "code",
									"value": "{{Code}}"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Search",
			"item": [
				{
					"name": "SearchIdentity_200",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonSchema =[ {\r",
									"    \"$schema\": \"http://json-schema.org/draft-06/schema\",\r",
									"    \"$id\": \"http://example.com/example.json\",\r",
									"    \"type\": \"array\",\r",
									"    \"additionalItems\": false,\r",
									"    \"items\": {\r",
									"        \"$id\": \"#/items\",\r",
									"        \"anyOf\": [\r",
									"            {\r",
									"                \"$id\": \"#/items/anyOf/0\",\r",
									"                \"type\": \"object\",\r",
									"                \"required\": [\r",
									"                    \"roles\",\r",
									"                    \"id\",\r",
									"                    \"name\",\r",
									"                    \"knownAs\",\r",
									"                    \"phone\",\r",
									"                    \"email\",\r",
									"                    \"address\",\r",
									"                    \"businessUnit\",\r",
									"                    \"status\"\r",
									"                ],\r",
									"                \"properties\": {\r",
									"                    \"roles\": {\r",
									"                        \"$id\": \"#/items/anyOf/0/properties/roles\",\r",
									"                        \"type\": \"string\"\r",
									"                    },\r",
									"                    \"id\": {\r",
									"                        \"$id\": \"#/items/anyOf/0/properties/id\",\r",
									"                        \"type\": \"integer\"\r",
									"                    },\r",
									"                    \"name\": {\r",
									"                        \"$id\": \"#/items/anyOf/0/properties/name\",\r",
									"                        \"type\": \"string\"\r",
									"                    },\r",
									"                    \"knownAs\": {\r",
									"                        \"$id\": \"#/items/anyOf/0/properties/knownAs\",\r",
									"                        \"type\": \"string\"\r",
									"                    },\r",
									"                    \"phone\": {\r",
									"                        \"$id\": \"#/items/anyOf/0/properties/phone\",\r",
									"                        \"type\": \"string\"\r",
									"                    },\r",
									"                    \"email\": {\r",
									"                        \"$id\": \"#/items/anyOf/0/properties/email\",\r",
									"                        \"type\": \"string\"\r",
									"                    },\r",
									"                    \"address\": {\r",
									"                        \"$id\": \"#/items/anyOf/0/properties/address\",\r",
									"                        \"type\": \"string\"\r",
									"                    },\r",
									"                    \"businessUnit\": {\r",
									"                        \"$id\": \"#/items/anyOf/0/properties/businessUnit\",\r",
									"                        \"type\": \"string\"\r",
									"                    },\r",
									"                    \"status\": {\r",
									"                        \"$id\": \"#/items/anyOf/0/properties/status\",\r",
									"                        \"type\": \"string\"\r",
									"                    }\r",
									"                },\r",
									"                \"additionalProperties\": false\r",
									"            }\r",
									"        ]\r",
									"    }\r",
									"} ]\r",
									"\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"\r",
									"pm.test('Checking Response Against Schema Validation 1', function() {\r",
									"    var result=tv4.validateMultiple(jsonData, jsonSchema);\r",
									"    console.log(result);\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});\r",
									"\r",
									"pm.test('Checking Schema Validation against response', function(){\r",
									"    var result = tv4.validateResult(pm.response.json(), jsonSchema);\r",
									"     if(result.valid){\r",
									"    console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string roles\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"roles\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer eyJ0eXAiOiJKV1QiLCJub25jZSI6Ing3LWpuMjdHR1k1UDgtWFBwaUZ0T2VzNlRHY08zc24yMDFISEEzUnFmTjAiLCJhbGciOiJSUzI1NiIsIng1dCI6Im5PbzNaRHJPRFhFSzFqS1doWHNsSFJfS1hFZyIsImtpZCI6Im5PbzNaRHJPRFhFSzFqS1doWHNsSFJfS1hFZyJ9.eyJhdWQiOiIwMDAwMDAwMy0wMDAwLTAwMDAtYzAwMC0wMDAwMDAwMDAwMDAiLCJpc3MiOiJodHRwczovL3N0cy53aW5kb3dzLm5ldC8yMGFkODczMS1hNGIzLTQxOWUtOWVkNi0wYjhkNjU2YWU4OWQvIiwiaWF0IjoxNjE0MDIzNzg2LCJuYmYiOjE2MTQwMjM3ODYsImV4cCI6MTYxNDAyNzY4NiwiYWNjdCI6MCwiYWNyIjoiMSIsImFjcnMiOlsidXJuOnVzZXI6cmVnaXN0ZXJzZWN1cml0eWluZm8iLCJ1cm46bWljcm9zb2Z0OnJlcTEiLCJ1cm46bWljcm9zb2Z0OnJlcTIiLCJ1cm46bWljcm9zb2Z0OnJlcTMiLCJjMSIsImMyIiwiYzMiLCJjNCIsImM1IiwiYzYiLCJjNyIsImM4IiwiYzkiLCJjMTAiLCJjMTEiLCJjMTIiLCJjMTMiLCJjMTQiLCJjMTUiLCJjMTYiLCJjMTciLCJjMTgiLCJjMTkiLCJjMjAiLCJjMjEiLCJjMjIiLCJjMjMiLCJjMjQiLCJjMjUiXSwiYWlvIjoiQVVRQXUvOFRBQUFBdjNCSC9oRXRaKzZiaWxVazd3dGswWExUbWhzS3dCTElVRHFiVUwvZDRwdDV1Y3k0UGJNM3NVTW9iVnZETWlwMlhScnQ0S3owU3ovYllRbTc1cGZiZUE9PSIsImFtciI6WyJwd2QiLCJtZmEiXSwiYXBwX2Rpc3BsYXluYW1lIjoiVmluZWFOb3ZhV2ViRGV2IiwiYXBwaWQiOiIwNTczNzFhNC02NGVkLTQwOWUtOWRmNy1hODcyMWZhY2NhYWMiLCJhcHBpZGFjciI6IjAiLCJmYW1pbHlfbmFtZSI6ImtoYW56eiIsImdpdmVuX25hbWUiOiJpcmZhbiIsImlkdHlwIjoidXNlciIsImlwYWRkciI6IjE4MC4xNTAuMzEuMTM3IiwibmFtZSI6IklyZmFuIEtoYW4iLCJvaWQiOiIzY2Q5M2Y0MS01YzJiLTRjYTgtYWNhMC1iODUwYTMzNzU0MjkiLCJwbGF0ZiI6IjMiLCJwdWlkIjoiMTAwMzdGRkVBNjYzMEYwMyIsInJoIjoiMC5BUVlBTVlldElMT2tua0dlMWd1TlpXcm9uYVJ4Y3dYdFpKNUFuZmVvY2gtc3lxd0dBSXcuIiwic2NwIjoiQXBwbGljYXRpb24uUmVhZC5BbGwgT3JnYW5pemF0aW9uLlJlYWQuQWxsIFVzZXIuUmVhZCBwcm9maWxlIG9wZW5pZCBlbWFpbCIsInNpZ25pbl9zdGF0ZSI6WyJrbXNpIl0sInN1YiI6IkhFUV82QjVMR1VZOHhoR2JvY1B4VFp6Y2M3YWZXd3hqMllrbk9JYzdiM28iLCJ0ZW5hbnRfcmVnaW9uX3Njb3BlIjoiT0MiLCJ0aWQiOiIyMGFkODczMS1hNGIzLTQxOWUtOWVkNi0wYjhkNjU2YWU4OWQiLCJ1bmlxdWVfbmFtZSI6IklyZmFuQGluZm9wb3dlci5jby5ueiIsInVwbiI6IklyZmFuQGluZm9wb3dlci5jby5ueiIsInV0aSI6IjRubTJSRC1UMGs2cG9mVm5ZZDF4QUEiLCJ2ZXIiOiIxLjAiLCJ3aWRzIjpbImI3OWZiZjRkLTNlZjktNDY4OS04MTQzLTc2YjE5NGU4NTUwOSJdLCJ4bXNfc3QiOnsic3ViIjoiZHVadlU3RmVQemhweWdjOV9QcDZCbnl5RHVQcHMyUDhrcG85UXJ3N2lPYyJ9LCJ4bXNfdGNkdCI6MTM1MTU1MDIwMX0.lNIV_zVFF8t_7nMkYTmmxzQzltfN2oEUrZGd3ZHxyB-yN_a75-Xp4VNJeWgb-lGNrkYj7tyMVSLNG0js-1suHqj7vfq8fN5FA224j1M88GXUexBdIQDmW6w_bTtaojh0lES93gxU1HpvFbcp2jmIuMv5UjUtJCqrfR0aZcVPVdnLSpUrmiZjCUp0YiFUqRii1deU6A4I-QywJ2iGfX17Me3YuDXeqkx_y-e2Qe_yWazNdj--v6hdWzceADpl7D0uDMhzsRFGPiRJPausp-ofmUBQ5SHdxCPQAIFjosbYAkumo2d5PRdnBquktgSGuqR1juvJuVdv6hifNvDqPvz3cw",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"IdentityTypeID\": 1,\r\n    \"RoleTypeID\": null,\r\n    \"Name\": \"\",\r\n    \"ClassificationTypeID\": null,\r\n    \"ReferenceTypeID\": null,\r\n    \"RefValue\": null,\r\n    \"FindNonActive\": false\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/SearchIdentity?code={{Code}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"SearchIdentity"
							],
							"query": [
								{
									"key": "code",
									"value": "{{Code}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "SearchIdentity_500",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 500\", function () {\r",
									"    pm.response.to.have.status(500);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is Internal Server Error\", function () {\r",
									"    pm.response.to.have.status(\"Internal Server Error\");\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "awsv4"
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer eyJ0eXAiOiJKV1QiLCJub25jZSI6Ing3LWpuMjdHR1k1UDgtWFBwaUZ0T2VzNlRHY08zc24yMDFISEEzUnFmTjAiLCJhbGciOiJSUzI1NiIsIng1dCI6Im5PbzNaRHJPRFhFSzFqS1doWHNsSFJfS1hFZyIsImtpZCI6Im5PbzNaRHJPRFhFSzFqS1doWHNsSFJfS1hFZyJ9.eyJhdWQiOiIwMDAwMDAwMy0wMDAwLTAwMDAtYzAwMC0wMDAwMDAwMDAwMDAiLCJpc3MiOiJodHRwczovL3N0cy53aW5kb3dzLm5ldC8yMGFkODczMS1hNGIzLTQxOWUtOWVkNi0wYjhkNjU2YWU4OWQvIiwiaWF0IjoxNjE0MDIzNzg2LCJuYmYiOjE2MTQwMjM3ODYsImV4cCI6MTYxNDAyNzY4NiwiYWNjdCI6MCwiYWNyIjoiMSIsImFjcnMiOlsidXJuOnVzZXI6cmVnaXN0ZXJzZWN1cml0eWluZm8iLCJ1cm46bWljcm9zb2Z0OnJlcTEiLCJ1cm46bWljcm9zb2Z0OnJlcTIiLCJ1cm46bWljcm9zb2Z0OnJlcTMiLCJjMSIsImMyIiwiYzMiLCJjNCIsImM1IiwiYzYiLCJjNyIsImM4IiwiYzkiLCJjMTAiLCJjMTEiLCJjMTIiLCJjMTMiLCJjMTQiLCJjMTUiLCJjMTYiLCJjMTciLCJjMTgiLCJjMTkiLCJjMjAiLCJjMjEiLCJjMjIiLCJjMjMiLCJjMjQiLCJjMjUiXSwiYWlvIjoiQVVRQXUvOFRBQUFBdjNCSC9oRXRaKzZiaWxVazd3dGswWExUbWhzS3dCTElVRHFiVUwvZDRwdDV1Y3k0UGJNM3NVTW9iVnZETWlwMlhScnQ0S3owU3ovYllRbTc1cGZiZUE9PSIsImFtciI6WyJwd2QiLCJtZmEiXSwiYXBwX2Rpc3BsYXluYW1lIjoiVmluZWFOb3ZhV2ViRGV2IiwiYXBwaWQiOiIwNTczNzFhNC02NGVkLTQwOWUtOWRmNy1hODcyMWZhY2NhYWMiLCJhcHBpZGFjciI6IjAiLCJmYW1pbHlfbmFtZSI6ImtoYW56eiIsImdpdmVuX25hbWUiOiJpcmZhbiIsImlkdHlwIjoidXNlciIsImlwYWRkciI6IjE4MC4xNTAuMzEuMTM3IiwibmFtZSI6IklyZmFuIEtoYW4iLCJvaWQiOiIzY2Q5M2Y0MS01YzJiLTRjYTgtYWNhMC1iODUwYTMzNzU0MjkiLCJwbGF0ZiI6IjMiLCJwdWlkIjoiMTAwMzdGRkVBNjYzMEYwMyIsInJoIjoiMC5BUVlBTVlldElMT2tua0dlMWd1TlpXcm9uYVJ4Y3dYdFpKNUFuZmVvY2gtc3lxd0dBSXcuIiwic2NwIjoiQXBwbGljYXRpb24uUmVhZC5BbGwgT3JnYW5pemF0aW9uLlJlYWQuQWxsIFVzZXIuUmVhZCBwcm9maWxlIG9wZW5pZCBlbWFpbCIsInNpZ25pbl9zdGF0ZSI6WyJrbXNpIl0sInN1YiI6IkhFUV82QjVMR1VZOHhoR2JvY1B4VFp6Y2M3YWZXd3hqMllrbk9JYzdiM28iLCJ0ZW5hbnRfcmVnaW9uX3Njb3BlIjoiT0MiLCJ0aWQiOiIyMGFkODczMS1hNGIzLTQxOWUtOWVkNi0wYjhkNjU2YWU4OWQiLCJ1bmlxdWVfbmFtZSI6IklyZmFuQGluZm9wb3dlci5jby5ueiIsInVwbiI6IklyZmFuQGluZm9wb3dlci5jby5ueiIsInV0aSI6IjRubTJSRC1UMGs2cG9mVm5ZZDF4QUEiLCJ2ZXIiOiIxLjAiLCJ3aWRzIjpbImI3OWZiZjRkLTNlZjktNDY4OS04MTQzLTc2YjE5NGU4NTUwOSJdLCJ4bXNfc3QiOnsic3ViIjoiZHVadlU3RmVQemhweWdjOV9QcDZCbnl5RHVQcHMyUDhrcG85UXJ3N2lPYyJ9LCJ4bXNfdGNkdCI6MTM1MTU1MDIwMX0.lNIV_zVFF8t_7nMkYTmmxzQzltfN2oEUrZGd3ZHxyB-yN_a75-Xp4VNJeWgb-lGNrkYj7tyMVSLNG0js-1suHqj7vfq8fN5FA224j1M88GXUexBdIQDmW6w_bTtaojh0lES93gxU1HpvFbcp2jmIuMv5UjUtJCqrfR0aZcVPVdnLSpUrmiZjCUp0YiFUqRii1deU6A4I-QywJ2iGfX17Me3YuDXeqkx_y-e2Qe_yWazNdj--v6hdWzceADpl7D0uDMhzsRFGPiRJPausp-ofmUBQ5SHdxCPQAIFjosbYAkumo2d5PRdnBquktgSGuqR1juvJuVdv6hifNvDqPvz3cw",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"IdentityTypeID\": 1,\r\n    \"RoleTypeID\": null,\r\n    \"Name\": \"\",\r\n    \"ClassificationTypeID\": null,\r\n    \"ReferenceTypeID\": null,\r\n    \"RefValue\": null,\r\n    \"FindNonActive\": false\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/SearchIdentity?code={{Code}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"SearchIdentity"
							],
							"query": [
								{
									"key": "code",
									"value": "{{Code}}"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "CropBlockSetting",
			"item": [
				{
					"name": "CropBlockSetting",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/CropBlockSetting?code={{Code}}&VineyardBlockID=121&VintageID=9",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"CropBlockSetting"
							],
							"query": [
								{
									"key": "code",
									"value": "{{Code}}"
								},
								{
									"key": "VineyardBlockID",
									"value": "121"
								},
								{
									"key": "VintageID",
									"value": "9"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "IdentityContactMethod",
			"item": [
				{
					"name": "IdentityContactMethod_200",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const schema= {\r",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
									"    \"$id\": \"http://example.com/example.json\",\r",
									"    \"type\": \"array\",\r",
									"    \"items\": {\r",
									"        \"$id\": \"#/items\",\r",
									"        \"type\": \"object\",\r",
									"        \"required\": [\r",
									"            \"id\",\r",
									"            \"contactMethodDetails\",\r",
									"            \"contactMethodType\",\r",
									"            \"contactMethodTypeID\",\r",
									"            \"isPrimaryContact\",\r",
									"            \"effectiveFromDate\",\r",
									"            \"effectiveToDate\",\r",
									"            \"ts\"\r",
									"        ],\r",
									"        \"properties\": {\r",
									"            \"id\": {\r",
									"                \"$id\": \"#/items/properties/id\",\r",
									"                \"type\": \"integer\"\r",
									"            },\r",
									"            \"contactMethodDetails\": {\r",
									"                \"$id\": \"#/items/properties/contactMethodDetails\",\r",
									"                \"type\": \"string\"\r",
									"            },\r",
									"            \"contactMethodType\": {\r",
									"                \"$id\": \"#/items/properties/contactMethodType\",\r",
									"                \"type\": \"string\"\r",
									"            },\r",
									"            \"contactMethodTypeID\": {\r",
									"                \"$id\": \"#/items/properties/contactMethodTypeID\",\r",
									"                \"type\": \"integer\"\r",
									"            },\r",
									"            \"isPrimaryContact\": {\r",
									"                \"$id\": \"#/items/properties/isPrimaryContact\",\r",
									"                \"type\": \"boolean\"\r",
									"            },\r",
									"            \"effectiveFromDate\": {\r",
									"                \"$id\": \"#/items/properties/effectiveFromDate\",\r",
									"                \"type\": \"string\"\r",
									"            },\r",
									"            \"effectiveToDate\": {\r",
									"                \"$id\": \"#/items/properties/effectiveToDate\",\r",
									"                \"type\": \"null\"\r",
									"            },\r",
									"            \"ts\": {\r",
									"                \"$id\": \"#/items/properties/ts\",\r",
									"                \"type\": \"string\"\r",
									"            }\r",
									"        }\r",
									"    }\r",
									"}\r",
									"\r",
									"pm.test(\"Validate Schema\"),() => {\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"};\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer eyJ0eXAiOiJKV1QiLCJub25jZSI6ImdJSVRZTGxhN0V6bHVGdzhfM2FvM0ctZnBSU1ROYzVEQnFialAzUzlSU1UiLCJhbGciOiJSUzI1NiIsIng1dCI6Im5PbzNaRHJPRFhFSzFqS1doWHNsSFJfS1hFZyIsImtpZCI6Im5PbzNaRHJPRFhFSzFqS1doWHNsSFJfS1hFZyJ9.eyJhdWQiOiIwMDAwMDAwMy0wMDAwLTAwMDAtYzAwMC0wMDAwMDAwMDAwMDAiLCJpc3MiOiJodHRwczovL3N0cy53aW5kb3dzLm5ldC8yMGFkODczMS1hNGIzLTQxOWUtOWVkNi0wYjhkNjU2YWU4OWQvIiwiaWF0IjoxNjEyNjY3MTYwLCJuYmYiOjE2MTI2NjcxNjAsImV4cCI6MTYxMjY3MTA2MCwiYWNjdCI6MCwiYWNyIjoiMSIsImFjcnMiOlsidXJuOnVzZXI6cmVnaXN0ZXJzZWN1cml0eWluZm8iLCJ1cm46bWljcm9zb2Z0OnJlcTEiLCJ1cm46bWljcm9zb2Z0OnJlcTIiLCJ1cm46bWljcm9zb2Z0OnJlcTMiLCJjMSIsImMyIiwiYzMiLCJjNCIsImM1IiwiYzYiLCJjNyIsImM4IiwiYzkiLCJjMTAiLCJjMTEiLCJjMTIiLCJjMTMiLCJjMTQiLCJjMTUiLCJjMTYiLCJjMTciLCJjMTgiLCJjMTkiLCJjMjAiLCJjMjEiLCJjMjIiLCJjMjMiLCJjMjQiLCJjMjUiXSwiYWlvIjoiQVVRQXUvOFRBQUFBTDFFRFZCRFFCcDFvWXQyNTNuUVI4c0paR016R0RXZVBBdkdDeHE4b0JTdGFyYzFyMFVKVmJROHAzdzljdTQ3YlowNjVXNG1iYm1qOFRhRjJhL2h6alE9PSIsImFtciI6WyJwd2QiLCJtZmEiXSwiYXBwX2Rpc3BsYXluYW1lIjoiVmluZWFOb3ZhV2ViRGV2IiwiYXBwaWQiOiIwNTczNzFhNC02NGVkLTQwOWUtOWRmNy1hODcyMWZhY2NhYWMiLCJhcHBpZGFjciI6IjAiLCJmYW1pbHlfbmFtZSI6ImtoYW56eiIsImdpdmVuX25hbWUiOiJpcmZhbiIsImlkdHlwIjoidXNlciIsImlwYWRkciI6IjExOS4xOC4xLjgwIiwibmFtZSI6IklyZmFuIEtoYW4iLCJvaWQiOiIzY2Q5M2Y0MS01YzJiLTRjYTgtYWNhMC1iODUwYTMzNzU0MjkiLCJwbGF0ZiI6IjMiLCJwdWlkIjoiMTAwMzdGRkVBNjYzMEYwMyIsInJoIjoiMC5BUVlBTVlldElMT2tua0dlMWd1TlpXcm9uYVJ4Y3dYdFpKNUFuZmVvY2gtc3lxd0dBSXcuIiwic2NwIjoiQXBwbGljYXRpb24uUmVhZC5BbGwgT3JnYW5pemF0aW9uLlJlYWQuQWxsIFVzZXIuUmVhZCBwcm9maWxlIG9wZW5pZCBlbWFpbCIsInNpZ25pbl9zdGF0ZSI6WyJrbXNpIl0sInN1YiI6IkhFUV82QjVMR1VZOHhoR2JvY1B4VFp6Y2M3YWZXd3hqMllrbk9JYzdiM28iLCJ0ZW5hbnRfcmVnaW9uX3Njb3BlIjoiT0MiLCJ0aWQiOiIyMGFkODczMS1hNGIzLTQxOWUtOWVkNi0wYjhkNjU2YWU4OWQiLCJ1bmlxdWVfbmFtZSI6IklyZmFuQGluZm9wb3dlci5jby5ueiIsInVwbiI6IklyZmFuQGluZm9wb3dlci5jby5ueiIsInV0aSI6IkJvYzMzYXR6cFV1NWxSS1BWMlkzQUEiLCJ2ZXIiOiIxLjAiLCJ3aWRzIjpbImI3OWZiZjRkLTNlZjktNDY4OS04MTQzLTc2YjE5NGU4NTUwOSJdLCJ4bXNfc3QiOnsic3ViIjoiZHVadlU3RmVQemhweWdjOV9QcDZCbnl5RHVQcHMyUDhrcG85UXJ3N2lPYyJ9LCJ4bXNfdGNkdCI6MTM1MTU1MDIwMX0.O8nPGIvVLMfLTYvXfGAMS1aKHREviAaRPb3zSy6CnWTt0ulcgR3nf9LMDP-iXkf6c5lv5DmFIlqqdxzlkhfGHVeMiYzf-f2XMnwpWr5NYAKpAgPsBk7FNo3xaraP5nVXfLyxXTSZXaCqFQaXSypcjsBB07MgYSpYPLqUaLZiUuFr0_XmQKdukKaPPZQOkbRSpg_f98YwtPNtaZpwLG10yk6yqwdQpoIMipq0HqFWjal0RNPS6IG1iv6-8nq8CBOHfnDpgU7PCO_PKL3s7Tv3Sp34u70QkcUi4M_WhHC8FVX_PX_5lNmQknd_cfoh9gM3IKQ9auP_YiD-VME38E0-Qg",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/IdentityContactMethod?code={{Code}}&IdentityID=2385",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"IdentityContactMethod"
							],
							"query": [
								{
									"key": "code",
									"value": "{{Code}}"
								},
								{
									"key": "IdentityID",
									"value": "2385"
								},
								{
									"key": "IdentityTypeID",
									"value": "2",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "IdentityContactMethod_400",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is Bad Request\", function () {\r",
									"    pm.response.to.have.status(\"Bad Request\");\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer eyJ0eXAiOiJKV1QiLCJub25jZSI6ImdJSVRZTGxhN0V6bHVGdzhfM2FvM0ctZnBSU1ROYzVEQnFialAzUzlSU1UiLCJhbGciOiJSUzI1NiIsIng1dCI6Im5PbzNaRHJPRFhFSzFqS1doWHNsSFJfS1hFZyIsImtpZCI6Im5PbzNaRHJPRFhFSzFqS1doWHNsSFJfS1hFZyJ9.eyJhdWQiOiIwMDAwMDAwMy0wMDAwLTAwMDAtYzAwMC0wMDAwMDAwMDAwMDAiLCJpc3MiOiJodHRwczovL3N0cy53aW5kb3dzLm5ldC8yMGFkODczMS1hNGIzLTQxOWUtOWVkNi0wYjhkNjU2YWU4OWQvIiwiaWF0IjoxNjEyNjY3MTYwLCJuYmYiOjE2MTI2NjcxNjAsImV4cCI6MTYxMjY3MTA2MCwiYWNjdCI6MCwiYWNyIjoiMSIsImFjcnMiOlsidXJuOnVzZXI6cmVnaXN0ZXJzZWN1cml0eWluZm8iLCJ1cm46bWljcm9zb2Z0OnJlcTEiLCJ1cm46bWljcm9zb2Z0OnJlcTIiLCJ1cm46bWljcm9zb2Z0OnJlcTMiLCJjMSIsImMyIiwiYzMiLCJjNCIsImM1IiwiYzYiLCJjNyIsImM4IiwiYzkiLCJjMTAiLCJjMTEiLCJjMTIiLCJjMTMiLCJjMTQiLCJjMTUiLCJjMTYiLCJjMTciLCJjMTgiLCJjMTkiLCJjMjAiLCJjMjEiLCJjMjIiLCJjMjMiLCJjMjQiLCJjMjUiXSwiYWlvIjoiQVVRQXUvOFRBQUFBTDFFRFZCRFFCcDFvWXQyNTNuUVI4c0paR016R0RXZVBBdkdDeHE4b0JTdGFyYzFyMFVKVmJROHAzdzljdTQ3YlowNjVXNG1iYm1qOFRhRjJhL2h6alE9PSIsImFtciI6WyJwd2QiLCJtZmEiXSwiYXBwX2Rpc3BsYXluYW1lIjoiVmluZWFOb3ZhV2ViRGV2IiwiYXBwaWQiOiIwNTczNzFhNC02NGVkLTQwOWUtOWRmNy1hODcyMWZhY2NhYWMiLCJhcHBpZGFjciI6IjAiLCJmYW1pbHlfbmFtZSI6ImtoYW56eiIsImdpdmVuX25hbWUiOiJpcmZhbiIsImlkdHlwIjoidXNlciIsImlwYWRkciI6IjExOS4xOC4xLjgwIiwibmFtZSI6IklyZmFuIEtoYW4iLCJvaWQiOiIzY2Q5M2Y0MS01YzJiLTRjYTgtYWNhMC1iODUwYTMzNzU0MjkiLCJwbGF0ZiI6IjMiLCJwdWlkIjoiMTAwMzdGRkVBNjYzMEYwMyIsInJoIjoiMC5BUVlBTVlldElMT2tua0dlMWd1TlpXcm9uYVJ4Y3dYdFpKNUFuZmVvY2gtc3lxd0dBSXcuIiwic2NwIjoiQXBwbGljYXRpb24uUmVhZC5BbGwgT3JnYW5pemF0aW9uLlJlYWQuQWxsIFVzZXIuUmVhZCBwcm9maWxlIG9wZW5pZCBlbWFpbCIsInNpZ25pbl9zdGF0ZSI6WyJrbXNpIl0sInN1YiI6IkhFUV82QjVMR1VZOHhoR2JvY1B4VFp6Y2M3YWZXd3hqMllrbk9JYzdiM28iLCJ0ZW5hbnRfcmVnaW9uX3Njb3BlIjoiT0MiLCJ0aWQiOiIyMGFkODczMS1hNGIzLTQxOWUtOWVkNi0wYjhkNjU2YWU4OWQiLCJ1bmlxdWVfbmFtZSI6IklyZmFuQGluZm9wb3dlci5jby5ueiIsInVwbiI6IklyZmFuQGluZm9wb3dlci5jby5ueiIsInV0aSI6IkJvYzMzYXR6cFV1NWxSS1BWMlkzQUEiLCJ2ZXIiOiIxLjAiLCJ3aWRzIjpbImI3OWZiZjRkLTNlZjktNDY4OS04MTQzLTc2YjE5NGU4NTUwOSJdLCJ4bXNfc3QiOnsic3ViIjoiZHVadlU3RmVQemhweWdjOV9QcDZCbnl5RHVQcHMyUDhrcG85UXJ3N2lPYyJ9LCJ4bXNfdGNkdCI6MTM1MTU1MDIwMX0.O8nPGIvVLMfLTYvXfGAMS1aKHREviAaRPb3zSy6CnWTt0ulcgR3nf9LMDP-iXkf6c5lv5DmFIlqqdxzlkhfGHVeMiYzf-f2XMnwpWr5NYAKpAgPsBk7FNo3xaraP5nVXfLyxXTSZXaCqFQaXSypcjsBB07MgYSpYPLqUaLZiUuFr0_XmQKdukKaPPZQOkbRSpg_f98YwtPNtaZpwLG10yk6yqwdQpoIMipq0HqFWjal0RNPS6IG1iv6-8nq8CBOHfnDpgU7PCO_PKL3s7Tv3Sp34u70QkcUi4M_WhHC8FVX_PX_5lNmQknd_cfoh9gM3IKQ9auP_YiD-VME38E0-Qg",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/IdentityContactMethod?code={{Code}}&IdentityID=2385",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"IdentityContactMethod"
							],
							"query": [
								{
									"key": "code",
									"value": "{{Code}}"
								},
								{
									"key": "IdentityID",
									"value": "2385"
								},
								{
									"key": "IdentityTypeID",
									"value": "2",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "IdentityContactMethod_500",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 500\", function () {\r",
									"    pm.response.to.have.status(500);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is Internal Server Error\", function () {\r",
									"    pm.response.to.have.status(\"Internal Server Error\");\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "awsv4"
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer eyJ0eXAiOiJKV1QiLCJub25jZSI6ImdJSVRZTGxhN0V6bHVGdzhfM2FvM0ctZnBSU1ROYzVEQnFialAzUzlSU1UiLCJhbGciOiJSUzI1NiIsIng1dCI6Im5PbzNaRHJPRFhFSzFqS1doWHNsSFJfS1hFZyIsImtpZCI6Im5PbzNaRHJPRFhFSzFqS1doWHNsSFJfS1hFZyJ9.eyJhdWQiOiIwMDAwMDAwMy0wMDAwLTAwMDAtYzAwMC0wMDAwMDAwMDAwMDAiLCJpc3MiOiJodHRwczovL3N0cy53aW5kb3dzLm5ldC8yMGFkODczMS1hNGIzLTQxOWUtOWVkNi0wYjhkNjU2YWU4OWQvIiwiaWF0IjoxNjEyNjY3MTYwLCJuYmYiOjE2MTI2NjcxNjAsImV4cCI6MTYxMjY3MTA2MCwiYWNjdCI6MCwiYWNyIjoiMSIsImFjcnMiOlsidXJuOnVzZXI6cmVnaXN0ZXJzZWN1cml0eWluZm8iLCJ1cm46bWljcm9zb2Z0OnJlcTEiLCJ1cm46bWljcm9zb2Z0OnJlcTIiLCJ1cm46bWljcm9zb2Z0OnJlcTMiLCJjMSIsImMyIiwiYzMiLCJjNCIsImM1IiwiYzYiLCJjNyIsImM4IiwiYzkiLCJjMTAiLCJjMTEiLCJjMTIiLCJjMTMiLCJjMTQiLCJjMTUiLCJjMTYiLCJjMTciLCJjMTgiLCJjMTkiLCJjMjAiLCJjMjEiLCJjMjIiLCJjMjMiLCJjMjQiLCJjMjUiXSwiYWlvIjoiQVVRQXUvOFRBQUFBTDFFRFZCRFFCcDFvWXQyNTNuUVI4c0paR016R0RXZVBBdkdDeHE4b0JTdGFyYzFyMFVKVmJROHAzdzljdTQ3YlowNjVXNG1iYm1qOFRhRjJhL2h6alE9PSIsImFtciI6WyJwd2QiLCJtZmEiXSwiYXBwX2Rpc3BsYXluYW1lIjoiVmluZWFOb3ZhV2ViRGV2IiwiYXBwaWQiOiIwNTczNzFhNC02NGVkLTQwOWUtOWRmNy1hODcyMWZhY2NhYWMiLCJhcHBpZGFjciI6IjAiLCJmYW1pbHlfbmFtZSI6ImtoYW56eiIsImdpdmVuX25hbWUiOiJpcmZhbiIsImlkdHlwIjoidXNlciIsImlwYWRkciI6IjExOS4xOC4xLjgwIiwibmFtZSI6IklyZmFuIEtoYW4iLCJvaWQiOiIzY2Q5M2Y0MS01YzJiLTRjYTgtYWNhMC1iODUwYTMzNzU0MjkiLCJwbGF0ZiI6IjMiLCJwdWlkIjoiMTAwMzdGRkVBNjYzMEYwMyIsInJoIjoiMC5BUVlBTVlldElMT2tua0dlMWd1TlpXcm9uYVJ4Y3dYdFpKNUFuZmVvY2gtc3lxd0dBSXcuIiwic2NwIjoiQXBwbGljYXRpb24uUmVhZC5BbGwgT3JnYW5pemF0aW9uLlJlYWQuQWxsIFVzZXIuUmVhZCBwcm9maWxlIG9wZW5pZCBlbWFpbCIsInNpZ25pbl9zdGF0ZSI6WyJrbXNpIl0sInN1YiI6IkhFUV82QjVMR1VZOHhoR2JvY1B4VFp6Y2M3YWZXd3hqMllrbk9JYzdiM28iLCJ0ZW5hbnRfcmVnaW9uX3Njb3BlIjoiT0MiLCJ0aWQiOiIyMGFkODczMS1hNGIzLTQxOWUtOWVkNi0wYjhkNjU2YWU4OWQiLCJ1bmlxdWVfbmFtZSI6IklyZmFuQGluZm9wb3dlci5jby5ueiIsInVwbiI6IklyZmFuQGluZm9wb3dlci5jby5ueiIsInV0aSI6IkJvYzMzYXR6cFV1NWxSS1BWMlkzQUEiLCJ2ZXIiOiIxLjAiLCJ3aWRzIjpbImI3OWZiZjRkLTNlZjktNDY4OS04MTQzLTc2YjE5NGU4NTUwOSJdLCJ4bXNfc3QiOnsic3ViIjoiZHVadlU3RmVQemhweWdjOV9QcDZCbnl5RHVQcHMyUDhrcG85UXJ3N2lPYyJ9LCJ4bXNfdGNkdCI6MTM1MTU1MDIwMX0.O8nPGIvVLMfLTYvXfGAMS1aKHREviAaRPb3zSy6CnWTt0ulcgR3nf9LMDP-iXkf6c5lv5DmFIlqqdxzlkhfGHVeMiYzf-f2XMnwpWr5NYAKpAgPsBk7FNo3xaraP5nVXfLyxXTSZXaCqFQaXSypcjsBB07MgYSpYPLqUaLZiUuFr0_XmQKdukKaPPZQOkbRSpg_f98YwtPNtaZpwLG10yk6yqwdQpoIMipq0HqFWjal0RNPS6IG1iv6-8nq8CBOHfnDpgU7PCO_PKL3s7Tv3Sp34u70QkcUi4M_WhHC8FVX_PX_5lNmQknd_cfoh9gM3IKQ9auP_YiD-VME38E0-Qg",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/IdentityContactMethod?code={{Code}}&IdentityID=2385",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"IdentityContactMethod"
							],
							"query": [
								{
									"key": "code",
									"value": "{{Code}}"
								},
								{
									"key": "IdentityID",
									"value": "2385"
								},
								{
									"key": "IdentityTypeID",
									"value": "2",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "IdentityContactMethod_404",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is Not Found\", function () {\r",
									"    pm.response.to.have.status(\"Not Found\");\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "awsv4"
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer eyJ0eXAiOiJKV1QiLCJub25jZSI6ImdJSVRZTGxhN0V6bHVGdzhfM2FvM0ctZnBSU1ROYzVEQnFialAzUzlSU1UiLCJhbGciOiJSUzI1NiIsIng1dCI6Im5PbzNaRHJPRFhFSzFqS1doWHNsSFJfS1hFZyIsImtpZCI6Im5PbzNaRHJPRFhFSzFqS1doWHNsSFJfS1hFZyJ9.eyJhdWQiOiIwMDAwMDAwMy0wMDAwLTAwMDAtYzAwMC0wMDAwMDAwMDAwMDAiLCJpc3MiOiJodHRwczovL3N0cy53aW5kb3dzLm5ldC8yMGFkODczMS1hNGIzLTQxOWUtOWVkNi0wYjhkNjU2YWU4OWQvIiwiaWF0IjoxNjEyNjY3MTYwLCJuYmYiOjE2MTI2NjcxNjAsImV4cCI6MTYxMjY3MTA2MCwiYWNjdCI6MCwiYWNyIjoiMSIsImFjcnMiOlsidXJuOnVzZXI6cmVnaXN0ZXJzZWN1cml0eWluZm8iLCJ1cm46bWljcm9zb2Z0OnJlcTEiLCJ1cm46bWljcm9zb2Z0OnJlcTIiLCJ1cm46bWljcm9zb2Z0OnJlcTMiLCJjMSIsImMyIiwiYzMiLCJjNCIsImM1IiwiYzYiLCJjNyIsImM4IiwiYzkiLCJjMTAiLCJjMTEiLCJjMTIiLCJjMTMiLCJjMTQiLCJjMTUiLCJjMTYiLCJjMTciLCJjMTgiLCJjMTkiLCJjMjAiLCJjMjEiLCJjMjIiLCJjMjMiLCJjMjQiLCJjMjUiXSwiYWlvIjoiQVVRQXUvOFRBQUFBTDFFRFZCRFFCcDFvWXQyNTNuUVI4c0paR016R0RXZVBBdkdDeHE4b0JTdGFyYzFyMFVKVmJROHAzdzljdTQ3YlowNjVXNG1iYm1qOFRhRjJhL2h6alE9PSIsImFtciI6WyJwd2QiLCJtZmEiXSwiYXBwX2Rpc3BsYXluYW1lIjoiVmluZWFOb3ZhV2ViRGV2IiwiYXBwaWQiOiIwNTczNzFhNC02NGVkLTQwOWUtOWRmNy1hODcyMWZhY2NhYWMiLCJhcHBpZGFjciI6IjAiLCJmYW1pbHlfbmFtZSI6ImtoYW56eiIsImdpdmVuX25hbWUiOiJpcmZhbiIsImlkdHlwIjoidXNlciIsImlwYWRkciI6IjExOS4xOC4xLjgwIiwibmFtZSI6IklyZmFuIEtoYW4iLCJvaWQiOiIzY2Q5M2Y0MS01YzJiLTRjYTgtYWNhMC1iODUwYTMzNzU0MjkiLCJwbGF0ZiI6IjMiLCJwdWlkIjoiMTAwMzdGRkVBNjYzMEYwMyIsInJoIjoiMC5BUVlBTVlldElMT2tua0dlMWd1TlpXcm9uYVJ4Y3dYdFpKNUFuZmVvY2gtc3lxd0dBSXcuIiwic2NwIjoiQXBwbGljYXRpb24uUmVhZC5BbGwgT3JnYW5pemF0aW9uLlJlYWQuQWxsIFVzZXIuUmVhZCBwcm9maWxlIG9wZW5pZCBlbWFpbCIsInNpZ25pbl9zdGF0ZSI6WyJrbXNpIl0sInN1YiI6IkhFUV82QjVMR1VZOHhoR2JvY1B4VFp6Y2M3YWZXd3hqMllrbk9JYzdiM28iLCJ0ZW5hbnRfcmVnaW9uX3Njb3BlIjoiT0MiLCJ0aWQiOiIyMGFkODczMS1hNGIzLTQxOWUtOWVkNi0wYjhkNjU2YWU4OWQiLCJ1bmlxdWVfbmFtZSI6IklyZmFuQGluZm9wb3dlci5jby5ueiIsInVwbiI6IklyZmFuQGluZm9wb3dlci5jby5ueiIsInV0aSI6IkJvYzMzYXR6cFV1NWxSS1BWMlkzQUEiLCJ2ZXIiOiIxLjAiLCJ3aWRzIjpbImI3OWZiZjRkLTNlZjktNDY4OS04MTQzLTc2YjE5NGU4NTUwOSJdLCJ4bXNfc3QiOnsic3ViIjoiZHVadlU3RmVQemhweWdjOV9QcDZCbnl5RHVQcHMyUDhrcG85UXJ3N2lPYyJ9LCJ4bXNfdGNkdCI6MTM1MTU1MDIwMX0.O8nPGIvVLMfLTYvXfGAMS1aKHREviAaRPb3zSy6CnWTt0ulcgR3nf9LMDP-iXkf6c5lv5DmFIlqqdxzlkhfGHVeMiYzf-f2XMnwpWr5NYAKpAgPsBk7FNo3xaraP5nVXfLyxXTSZXaCqFQaXSypcjsBB07MgYSpYPLqUaLZiUuFr0_XmQKdukKaPPZQOkbRSpg_f98YwtPNtaZpwLG10yk6yqwdQpoIMipq0HqFWjal0RNPS6IG1iv6-8nq8CBOHfnDpgU7PCO_PKL3s7Tv3Sp34u70QkcUi4M_WhHC8FVX_PX_5lNmQknd_cfoh9gM3IKQ9auP_YiD-VME38E0-Qg",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": 0,\r\n  \"identityID\": 0,\r\n  \"contactMethodTypeID\": 0,\r\n  \"contactMethodType\": \"string\",\r\n  \"contactMethodDetails\": \"string\",\r\n  \"isPrimaryContact\": true,\r\n  \"isOnMailList\": true,\r\n  \"effectiveFromDate\": \"2021-09-26T11:06:03.253Z\",\r\n  \"effectiveToDate\": \"2021-09-26T11:06:03.253Z\",\r\n  \"ts\": \"string\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/IdentityContactMethod",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"IdentityContactMethod"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "IdentityContactMethodAddress",
			"item": [
				{
					"name": "IdentityContactMethod_404",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is Not Found\", function () {\r",
									"    pm.response.to.have.status(\"Not Found\");\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer eyJ0eXAiOiJKV1QiLCJub25jZSI6ImdJSVRZTGxhN0V6bHVGdzhfM2FvM0ctZnBSU1ROYzVEQnFialAzUzlSU1UiLCJhbGciOiJSUzI1NiIsIng1dCI6Im5PbzNaRHJPRFhFSzFqS1doWHNsSFJfS1hFZyIsImtpZCI6Im5PbzNaRHJPRFhFSzFqS1doWHNsSFJfS1hFZyJ9.eyJhdWQiOiIwMDAwMDAwMy0wMDAwLTAwMDAtYzAwMC0wMDAwMDAwMDAwMDAiLCJpc3MiOiJodHRwczovL3N0cy53aW5kb3dzLm5ldC8yMGFkODczMS1hNGIzLTQxOWUtOWVkNi0wYjhkNjU2YWU4OWQvIiwiaWF0IjoxNjEyNjY3MTYwLCJuYmYiOjE2MTI2NjcxNjAsImV4cCI6MTYxMjY3MTA2MCwiYWNjdCI6MCwiYWNyIjoiMSIsImFjcnMiOlsidXJuOnVzZXI6cmVnaXN0ZXJzZWN1cml0eWluZm8iLCJ1cm46bWljcm9zb2Z0OnJlcTEiLCJ1cm46bWljcm9zb2Z0OnJlcTIiLCJ1cm46bWljcm9zb2Z0OnJlcTMiLCJjMSIsImMyIiwiYzMiLCJjNCIsImM1IiwiYzYiLCJjNyIsImM4IiwiYzkiLCJjMTAiLCJjMTEiLCJjMTIiLCJjMTMiLCJjMTQiLCJjMTUiLCJjMTYiLCJjMTciLCJjMTgiLCJjMTkiLCJjMjAiLCJjMjEiLCJjMjIiLCJjMjMiLCJjMjQiLCJjMjUiXSwiYWlvIjoiQVVRQXUvOFRBQUFBTDFFRFZCRFFCcDFvWXQyNTNuUVI4c0paR016R0RXZVBBdkdDeHE4b0JTdGFyYzFyMFVKVmJROHAzdzljdTQ3YlowNjVXNG1iYm1qOFRhRjJhL2h6alE9PSIsImFtciI6WyJwd2QiLCJtZmEiXSwiYXBwX2Rpc3BsYXluYW1lIjoiVmluZWFOb3ZhV2ViRGV2IiwiYXBwaWQiOiIwNTczNzFhNC02NGVkLTQwOWUtOWRmNy1hODcyMWZhY2NhYWMiLCJhcHBpZGFjciI6IjAiLCJmYW1pbHlfbmFtZSI6ImtoYW56eiIsImdpdmVuX25hbWUiOiJpcmZhbiIsImlkdHlwIjoidXNlciIsImlwYWRkciI6IjExOS4xOC4xLjgwIiwibmFtZSI6IklyZmFuIEtoYW4iLCJvaWQiOiIzY2Q5M2Y0MS01YzJiLTRjYTgtYWNhMC1iODUwYTMzNzU0MjkiLCJwbGF0ZiI6IjMiLCJwdWlkIjoiMTAwMzdGRkVBNjYzMEYwMyIsInJoIjoiMC5BUVlBTVlldElMT2tua0dlMWd1TlpXcm9uYVJ4Y3dYdFpKNUFuZmVvY2gtc3lxd0dBSXcuIiwic2NwIjoiQXBwbGljYXRpb24uUmVhZC5BbGwgT3JnYW5pemF0aW9uLlJlYWQuQWxsIFVzZXIuUmVhZCBwcm9maWxlIG9wZW5pZCBlbWFpbCIsInNpZ25pbl9zdGF0ZSI6WyJrbXNpIl0sInN1YiI6IkhFUV82QjVMR1VZOHhoR2JvY1B4VFp6Y2M3YWZXd3hqMllrbk9JYzdiM28iLCJ0ZW5hbnRfcmVnaW9uX3Njb3BlIjoiT0MiLCJ0aWQiOiIyMGFkODczMS1hNGIzLTQxOWUtOWVkNi0wYjhkNjU2YWU4OWQiLCJ1bmlxdWVfbmFtZSI6IklyZmFuQGluZm9wb3dlci5jby5ueiIsInVwbiI6IklyZmFuQGluZm9wb3dlci5jby5ueiIsInV0aSI6IkJvYzMzYXR6cFV1NWxSS1BWMlkzQUEiLCJ2ZXIiOiIxLjAiLCJ3aWRzIjpbImI3OWZiZjRkLTNlZjktNDY4OS04MTQzLTc2YjE5NGU4NTUwOSJdLCJ4bXNfc3QiOnsic3ViIjoiZHVadlU3RmVQemhweWdjOV9QcDZCbnl5RHVQcHMyUDhrcG85UXJ3N2lPYyJ9LCJ4bXNfdGNkdCI6MTM1MTU1MDIwMX0.O8nPGIvVLMfLTYvXfGAMS1aKHREviAaRPb3zSy6CnWTt0ulcgR3nf9LMDP-iXkf6c5lv5DmFIlqqdxzlkhfGHVeMiYzf-f2XMnwpWr5NYAKpAgPsBk7FNo3xaraP5nVXfLyxXTSZXaCqFQaXSypcjsBB07MgYSpYPLqUaLZiUuFr0_XmQKdukKaPPZQOkbRSpg_f98YwtPNtaZpwLG10yk6yqwdQpoIMipq0HqFWjal0RNPS6IG1iv6-8nq8CBOHfnDpgU7PCO_PKL3s7Tv3Sp34u70QkcUi4M_WhHC8FVX_PX_5lNmQknd_cfoh9gM3IKQ9auP_YiD-VME38E0-Qg",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": 0,\r\n  \"identityID\": 0,\r\n  \"contactMethodTypeID\": 0,\r\n  \"contactMethodDetails\": \"string\",\r\n  \"isPrimaryContact\": true,\r\n  \"effectiveFromDate\": \"2021-09-26T20:07:18.530Z\",\r\n  \"effectiveToDate\": \"2021-09-26T20:07:18.530Z\",\r\n  \"addressLine1\": \"string\",\r\n  \"addressLine2\": \"string\",\r\n  \"postCode\": \"string\",\r\n  \"suburb\": \"string\",\r\n  \"countryID\": 0,\r\n  \"townID\": 0,\r\n  \"ts\": \"string\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api​/v1​/IdentityContactMethodAddress?code={{Code}}&ID=14",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api​",
								"v1​",
								"IdentityContactMethodAddress"
							],
							"query": [
								{
									"key": "code",
									"value": "{{Code}}"
								},
								{
									"key": "ID",
									"value": "14"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "IdentityDataConnector",
			"item": [
				{
					"name": "IdentityDataConnector_500",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 500\", function () {\r",
									"    pm.response.to.have.status(500);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is Internal Server Error\", function () {\r",
									"    pm.response.to.have.status(\"Internal Server Error\");\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/IdentityDataConnector?code={{Code}}&IdentityID=2385",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"IdentityDataConnector"
							],
							"query": [
								{
									"key": "code",
									"value": "{{Code}}"
								},
								{
									"key": "IdentityID",
									"value": "2385"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "IdentityDataConnector_500 Copy 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 500\", function () {\r",
									"    pm.response.to.have.status(500);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is Internal Server Error\", function () {\r",
									"    pm.response.to.have.status(\"Internal Server Error\");\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": 0,\r\n  \"identityTypeID\": 0,\r\n  \"connectionDescription\": \"string\",\r\n  \"dataProviderID\": 0,\r\n  \"isConnectionValid\": true,\r\n  \"lastUpdatedDate\": \"2021-09-26T23:37:57.859Z\",\r\n  \"businessUnitID\": 0,\r\n  \"ts\": \"string\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/IdentityDataConnector?code={{Code}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"IdentityDataConnector"
							],
							"query": [
								{
									"key": "code",
									"value": "{{Code}}"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "IdentityNotes",
			"item": [
				{
					"name": "IdentityNote_200",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const schema = {\r",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
									"    \"$id\": \"http://example.com/example.json\",\r",
									"    \"type\": \"array\",\r",
									"    \"items\": {\r",
									"        \"$id\": \"#/items\",\r",
									"        \"type\": \"object\",\r",
									"        \"required\": [\r",
									"            \"id\",\r",
									"            \"noteSubject\",\r",
									"            \"noteStatusID\",\r",
									"            \"relatesTo\",\r",
									"            \"subjectDate\",\r",
									"            \"reviewDate\",\r",
									"            \"reviewer\",\r",
									"            \"noteText\",\r",
									"            \"documentCount\",\r",
									"            \"keywordID\",\r",
									"            \"ts\"\r",
									"        ],\r",
									"        \"properties\": {\r",
									"            \"id\": {\r",
									"                \"$id\": \"#/items/properties/id\",\r",
									"                \"type\": \"integer\"\r",
									"            },\r",
									"            \"noteSubject\": {\r",
									"                \"$id\": \"#/items/properties/noteSubject\",\r",
									"                \"type\": \"string\"\r",
									"            },\r",
									"            \"noteStatusID\": {\r",
									"                \"$id\": \"#/items/properties/noteStatusID\",\r",
									"                \"type\": \"integer\"\r",
									"            },\r",
									"            \"relatesTo\": {\r",
									"                \"$id\": \"#/items/properties/relatesTo\",\r",
									"                \"type\": \"string\"\r",
									"            },\r",
									"            \"subjectDate\": {\r",
									"                \"$id\": \"#/items/properties/subjectDate\",\r",
									"                \"type\": \"string\"\r",
									"            },\r",
									"            \"reviewDate\": {\r",
									"                \"$id\": \"#/items/properties/reviewDate\",\r",
									"                \"type\": \"string\"\r",
									"            },\r",
									"            \"reviewer\": {\r",
									"                \"$id\": \"#/items/properties/reviewer\",\r",
									"                \"type\": \"string\"\r",
									"            },\r",
									"            \"noteText\": {\r",
									"                \"$id\": \"#/items/properties/noteText\",\r",
									"                \"type\": \"string\"\r",
									"            },\r",
									"            \"documentCount\": {\r",
									"                \"$id\": \"#/items/properties/documentCount\",\r",
									"                \"type\": \"integer\"\r",
									"            },\r",
									"            \"keywordID\": {\r",
									"                \"$id\": \"#/items/properties/keywordID\",\r",
									"                \"type\": \"null\"\r",
									"            },\r",
									"            \"ts\": {\r",
									"                \"$id\": \"#/items/properties/ts\",\r",
									"                \"type\": \"string\"\r",
									"            }\r",
									"        }\r",
									"    }\r",
									"}\r",
									"\r",
									"pm.test(\"Validate Schema\"),() => {\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"};\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/IdentityNote?code={{Code}}&ID=3",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"IdentityNote"
							],
							"query": [
								{
									"key": "code",
									"value": "{{Code}}"
								},
								{
									"key": "ID",
									"value": "3",
									"description": "ID s are 3,  4 ,5, 9, 12"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "IdentityNote_400",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is Bad Request\", function () {\r",
									"    pm.response.to.have.status(\"Bad Request\");\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/IdentityNotes?code={{Code}}&IdentityID=3",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"IdentityNotes"
							],
							"query": [
								{
									"key": "code",
									"value": "{{Code}}"
								},
								{
									"key": "IdentityID",
									"value": "3",
									"description": "3, 4, 5,  9, 12"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "IdentityNote_500",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 500\", function () {\r",
									"    pm.response.to.have.status(500);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is Internal Server Error\", function () {\r",
									"    pm.response.to.have.status(\"Internal Server Error\");\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "awsv4"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/IdentityNotes?code={{Code}}&IdentityID=5",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"IdentityNotes"
							],
							"query": [
								{
									"key": "code",
									"value": "{{Code}}"
								},
								{
									"key": "IdentityID",
									"value": "5",
									"description": "3, 4, 5,  9,  12"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "IdentityNotes_200",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const schema = {\r",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
									"    \"$id\": \"http://example.com/example.json\",\r",
									"    \"type\": \"array\",\r",
									"    \"items\": {\r",
									"        \"$id\": \"#/items\",\r",
									"        \"type\": \"object\",\r",
									"        \"required\": [\r",
									"            \"id\",\r",
									"            \"noteSubject\",\r",
									"            \"noteStatusID\",\r",
									"            \"relatesTo\",\r",
									"            \"subjectDate\",\r",
									"            \"reviewDate\",\r",
									"            \"reviewer\",\r",
									"            \"noteText\",\r",
									"            \"documentCount\",\r",
									"            \"keywordID\",\r",
									"            \"ts\"\r",
									"        ],\r",
									"        \"properties\": {\r",
									"            \"id\": {\r",
									"                \"$id\": \"#/items/properties/id\",\r",
									"                \"type\": \"integer\"\r",
									"            },\r",
									"            \"noteSubject\": {\r",
									"                \"$id\": \"#/items/properties/noteSubject\",\r",
									"                \"type\": \"string\"\r",
									"            },\r",
									"            \"noteStatusID\": {\r",
									"                \"$id\": \"#/items/properties/noteStatusID\",\r",
									"                \"type\": \"integer\"\r",
									"            },\r",
									"            \"relatesTo\": {\r",
									"                \"$id\": \"#/items/properties/relatesTo\",\r",
									"                \"type\": \"string\"\r",
									"            },\r",
									"            \"subjectDate\": {\r",
									"                \"$id\": \"#/items/properties/subjectDate\",\r",
									"                \"type\": \"string\"\r",
									"            },\r",
									"            \"reviewDate\": {\r",
									"                \"$id\": \"#/items/properties/reviewDate\",\r",
									"                \"type\": \"string\"\r",
									"            },\r",
									"            \"reviewer\": {\r",
									"                \"$id\": \"#/items/properties/reviewer\",\r",
									"                \"type\": \"string\"\r",
									"            },\r",
									"            \"noteText\": {\r",
									"                \"$id\": \"#/items/properties/noteText\",\r",
									"                \"type\": \"string\"\r",
									"            },\r",
									"            \"documentCount\": {\r",
									"                \"$id\": \"#/items/properties/documentCount\",\r",
									"                \"type\": \"integer\"\r",
									"            },\r",
									"            \"keywordID\": {\r",
									"                \"$id\": \"#/items/properties/keywordID\",\r",
									"                \"type\": \"null\"\r",
									"            },\r",
									"            \"ts\": {\r",
									"                \"$id\": \"#/items/properties/ts\",\r",
									"                \"type\": \"string\"\r",
									"            }\r",
									"        }\r",
									"    }\r",
									"}\r",
									"\r",
									"pm.test(\"Validate Schema\"),() => {\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"};\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/IdentityNotes?code={{Code}}&IdentityID=2385",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"IdentityNotes"
							],
							"query": [
								{
									"key": "code",
									"value": "{{Code}}"
								},
								{
									"key": "IdentityID",
									"value": "2385"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "IdentityNotes_400",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is Bad Request\", function () {\r",
									"    pm.response.to.have.status(\"Bad Request\");\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/IdentityNotes?code={{Code}}&IdentityID=2385",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"IdentityNotes"
							],
							"query": [
								{
									"key": "code",
									"value": "{{Code}}"
								},
								{
									"key": "IdentityID",
									"value": "2385"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "IdentityNotes_500",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 500\", function () {\r",
									"    pm.response.to.have.status(500);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is Internal Server Error\", function () {\r",
									"    pm.response.to.have.status(\"Internal Server Error\");\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "awsv4"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/IdentityNotes?code={{Code}}&IdentityID=2385",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"IdentityNotes"
							],
							"query": [
								{
									"key": "code",
									"value": "{{Code}}"
								},
								{
									"key": "IdentityID",
									"value": "2385"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "IdentityPerson",
			"item": [
				{
					"name": "IdentityPerson_200",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const schema = {\r",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
									"    \"$id\": \"http://example.com/example.json\",\r",
									"    \"type\": \"object\",\r",
									"    \"required\": [\r",
									"        \"id\",\r",
									"        \"identityTypeID\",\r",
									"        \"firstName\",\r",
									"        \"middleName\",\r",
									"        \"lastName\",\r",
									"        \"knownAs\",\r",
									"        \"genderID\",\r",
									"        \"ethnicityID\",\r",
									"        \"nationalityID\",\r",
									"        \"preferredLanguageID\",\r",
									"        \"secondaryLanguageID\",\r",
									"        \"businessUnitID\",\r",
									"        \"roleTypeID\",\r",
									"        \"preferredContactMethodTypeID\",\r",
									"        \"salutationID\",\r",
									"        \"birthDate\",\r",
									"        \"createdDate\",\r",
									"        \"ts\"\r",
									"    ],\r",
									"    \"properties\": {\r",
									"        \"id\": {\r",
									"            \"$id\": \"#/properties/id\",\r",
									"            \"type\": \"integer\"\r",
									"        },\r",
									"        \"identityTypeID\": {\r",
									"            \"$id\": \"#/properties/identityTypeID\",\r",
									"            \"type\": \"integer\"\r",
									"        },\r",
									"        \"firstName\": {\r",
									"            \"$id\": \"#/properties/firstName\",\r",
									"            \"type\": \"string\"\r",
									"        },\r",
									"        \"middleName\": {\r",
									"            \"$id\": \"#/properties/middleName\",\r",
									"            \"type\": \"string\"\r",
									"        },\r",
									"        \"lastName\": {\r",
									"            \"$id\": \"#/properties/lastName\",\r",
									"            \"type\": \"string\"\r",
									"        },\r",
									"        \"knownAs\": {\r",
									"            \"$id\": \"#/properties/knownAs\",\r",
									"            \"type\": \"string\"\r",
									"        },\r",
									"        \"genderID\": {\r",
									"            \"$id\": \"#/properties/genderID\",\r",
									"            \"type\": \"integer\"\r",
									"        },\r",
									"        \"ethnicityID\": {\r",
									"            \"$id\": \"#/properties/ethnicityID\",\r",
									"            \"type\": \"integer\"\r",
									"        },\r",
									"        \"nationalityID\": {\r",
									"            \"$id\": \"#/properties/nationalityID\",\r",
									"            \"type\": \"integer\"\r",
									"        },\r",
									"        \"preferredLanguageID\": {\r",
									"            \"$id\": \"#/properties/preferredLanguageID\",\r",
									"            \"type\": \"integer\"\r",
									"        },\r",
									"        \"secondaryLanguageID\": {\r",
									"            \"$id\": \"#/properties/secondaryLanguageID\",\r",
									"            \"type\": \"integer\"\r",
									"        },\r",
									"        \"businessUnitID\": {\r",
									"            \"$id\": \"#/properties/businessUnitID\",\r",
									"            \"type\": \"integer\"\r",
									"        },\r",
									"        \"roleTypeID\": {\r",
									"            \"$id\": \"#/properties/roleTypeID\",\r",
									"            \"type\": \"null\"\r",
									"        },\r",
									"        \"preferredContactMethodTypeID\": {\r",
									"            \"$id\": \"#/properties/preferredContactMethodTypeID\",\r",
									"            \"type\": \"null\"\r",
									"        },\r",
									"        \"salutationID\": {\r",
									"            \"$id\": \"#/properties/salutationID\",\r",
									"            \"type\": \"integer\"\r",
									"        },\r",
									"        \"birthDate\": {\r",
									"            \"$id\": \"#/properties/birthDate\",\r",
									"            \"type\": \"string\"\r",
									"        },\r",
									"        \"createdDate\": {\r",
									"            \"$id\": \"#/properties/createdDate\",\r",
									"            \"type\": \"string\"\r",
									"        },\r",
									"        \"ts\": {\r",
									"            \"$id\": \"#/properties/ts\",\r",
									"            \"type\": \"string\"\r",
									"        }\r",
									"    }\r",
									"}\r",
									"\r",
									"pm.test(\"Validate Schema\"),() => {\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"};\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/IdentityPerson?code={{Code}}&IdentityID=3083",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"IdentityPerson"
							],
							"query": [
								{
									"key": "code",
									"value": "{{Code}}"
								},
								{
									"key": "IdentityID",
									"value": "3083"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "IdentityPerson_400",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is Bad Request\", function () {\r",
									"    pm.response.to.have.status(\"Bad Request\");\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/IdentityPerson?code={{Code}}&IdentityID=2385",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"IdentityPerson"
							],
							"query": [
								{
									"key": "code",
									"value": "{{Code}}"
								},
								{
									"key": "IdentityID",
									"value": "2385"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "IdentityPerson_500",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 500\", function () {\r",
									"    pm.response.to.have.status(500);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is Internal Server Error\", function () {\r",
									"    pm.response.to.have.status(\"Internal Server Error\");\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "awsv4"
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/IdentityPerson?code={{Code}}&IdentityID=2385",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"IdentityPerson"
							],
							"query": [
								{
									"key": "code",
									"value": "{{Code}}"
								},
								{
									"key": "IdentityID",
									"value": "2385"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "IdentityPerson_200",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const schema = {\r",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
									"    \"$id\": \"http://example.com/example.json\",\r",
									"    \"type\": \"object\",\r",
									"    \"required\": [\r",
									"        \"id\",\r",
									"        \"identityTypeID\",\r",
									"        \"firstName\",\r",
									"        \"middleName\",\r",
									"        \"lastName\",\r",
									"        \"knownAs\",\r",
									"        \"genderID\",\r",
									"        \"ethnicityID\",\r",
									"        \"nationalityID\",\r",
									"        \"preferredLanguageID\",\r",
									"        \"secondaryLanguageID\",\r",
									"        \"businessUnitID\",\r",
									"        \"roleTypeID\",\r",
									"        \"preferredContactMethodTypeID\",\r",
									"        \"salutationID\",\r",
									"        \"birthDate\",\r",
									"        \"createdDate\",\r",
									"        \"ts\"\r",
									"    ],\r",
									"    \"properties\": {\r",
									"        \"id\": {\r",
									"            \"$id\": \"#/properties/id\",\r",
									"            \"type\": \"integer\"\r",
									"        },\r",
									"        \"identityTypeID\": {\r",
									"            \"$id\": \"#/properties/identityTypeID\",\r",
									"            \"type\": \"integer\"\r",
									"        },\r",
									"        \"firstName\": {\r",
									"            \"$id\": \"#/properties/firstName\",\r",
									"            \"type\": \"string\"\r",
									"        },\r",
									"        \"middleName\": {\r",
									"            \"$id\": \"#/properties/middleName\",\r",
									"            \"type\": \"string\"\r",
									"        },\r",
									"        \"lastName\": {\r",
									"            \"$id\": \"#/properties/lastName\",\r",
									"            \"type\": \"string\"\r",
									"        },\r",
									"        \"knownAs\": {\r",
									"            \"$id\": \"#/properties/knownAs\",\r",
									"            \"type\": \"string\"\r",
									"        },\r",
									"        \"genderID\": {\r",
									"            \"$id\": \"#/properties/genderID\",\r",
									"            \"type\": \"integer\"\r",
									"        },\r",
									"        \"ethnicityID\": {\r",
									"            \"$id\": \"#/properties/ethnicityID\",\r",
									"            \"type\": \"integer\"\r",
									"        },\r",
									"        \"nationalityID\": {\r",
									"            \"$id\": \"#/properties/nationalityID\",\r",
									"            \"type\": \"integer\"\r",
									"        },\r",
									"        \"preferredLanguageID\": {\r",
									"            \"$id\": \"#/properties/preferredLanguageID\",\r",
									"            \"type\": \"integer\"\r",
									"        },\r",
									"        \"secondaryLanguageID\": {\r",
									"            \"$id\": \"#/properties/secondaryLanguageID\",\r",
									"            \"type\": \"integer\"\r",
									"        },\r",
									"        \"businessUnitID\": {\r",
									"            \"$id\": \"#/properties/businessUnitID\",\r",
									"            \"type\": \"integer\"\r",
									"        },\r",
									"        \"roleTypeID\": {\r",
									"            \"$id\": \"#/properties/roleTypeID\",\r",
									"            \"type\": \"null\"\r",
									"        },\r",
									"        \"preferredContactMethodTypeID\": {\r",
									"            \"$id\": \"#/properties/preferredContactMethodTypeID\",\r",
									"            \"type\": \"null\"\r",
									"        },\r",
									"        \"salutationID\": {\r",
									"            \"$id\": \"#/properties/salutationID\",\r",
									"            \"type\": \"integer\"\r",
									"        },\r",
									"        \"birthDate\": {\r",
									"            \"$id\": \"#/properties/birthDate\",\r",
									"            \"type\": \"string\"\r",
									"        },\r",
									"        \"createdDate\": {\r",
									"            \"$id\": \"#/properties/createdDate\",\r",
									"            \"type\": \"string\"\r",
									"        },\r",
									"        \"ts\": {\r",
									"            \"$id\": \"#/properties/ts\",\r",
									"            \"type\": \"string\"\r",
									"        }\r",
									"    }\r",
									"}\r",
									"\r",
									"pm.test(\"Validate Schema\"),() => {\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"};\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": 2385,\r\n    \"identityTypeID\": 1,\r\n    \"firstName\": \"Irfan\",\r\n    \"middleName\": \"\",\r\n    \"lastName\": \"Khan\",\r\n    \"knownAs\": \"IAK\",\r\n    \"genderID\": 1,\r\n    \"ethnicityID\": 2,\r\n    \"nationalityID\": 1,\r\n    \"preferredLanguageID\": 1,\r\n    \"secondaryLanguageID\": 1,\r\n    \"businessUnitID\": 1,\r\n    \"roleTypeID\": null,\r\n    \"preferredContactMethodTypeID\": null,\r\n    \"salutationID\": 1,\r\n    \"birthDate\": \"1979-02-08T00:00:00+00:00\",\r\n    \"createdDate\": \"0001-01-01T00:00:00+00:00\",\r\n    \"ts\": \"AAAAAAAF7KU=\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/IdentityPerson?code={{Code}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"IdentityPerson"
							],
							"query": [
								{
									"key": "code",
									"value": "{{Code}}"
								},
								{
									"key": "IdentityID",
									"value": "2385",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "IdentityPerson_500",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 500\", function () {\r",
									"    pm.response.to.have.status(500);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is Internal Server Error\", function () {\r",
									"    pm.response.to.have.status(\"Internal Server Error\");\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "awsv4"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": 2385,\r\n    \"identityTypeID\": 1,\r\n    \"firstName\": \"Irfan\",\r\n    \"middleName\": \"\",\r\n    \"lastName\": \"Khan\",\r\n    \"knownAs\": \"IAK\",\r\n    \"genderID\": 1,\r\n    \"ethnicityID\": 2,\r\n    \"nationalityID\": 1,\r\n    \"preferredLanguageID\": 1,\r\n    \"secondaryLanguageID\": 1,\r\n    \"businessUnitID\": 1,\r\n    \"roleTypeID\": null,\r\n    \"preferredContactMethodTypeID\": null,\r\n    \"salutationID\": 1,\r\n    \"birthDate\": \"1979-02-08T00:00:00+00:00\",\r\n    \"createdDate\": \"0001-01-01T00:00:00+00:00\",\r\n    \"ts\": \"AAAAAAAF7KU=\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/IdentityPerson?code={{Code}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"IdentityPerson"
							],
							"query": [
								{
									"key": "code",
									"value": "{{Code}}"
								},
								{
									"key": "IdentityID",
									"value": "2385",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "IdentityPerson_500",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 500\", function () {\r",
									"    pm.response.to.have.status(500);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is Internal Server Error\", function () {\r",
									"    pm.response.to.have.status(\"Internal Server Error\");\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": 3091,\r\n    \"identityTypeID\": 1,\r\n    \"firstName\": \"Irrfan\",\r\n    \"middleName\": \"\",\r\n    \"lastName\": \"ah Khan\",\r\n    \"knownAs\": \"IAK\",\r\n    \"genderID\": 1,\r\n    \"ethnicityID\": 2,\r\n    \"nationalityID\": 1,\r\n    \"preferredLanguageID\": 1,\r\n    \"secondaryLanguageID\": 1,\r\n    \"businessUnitID\": 1,\r\n    \"roleTypeID\": null,\r\n    \"preferredContactMethodTypeID\": null,\r\n    \"salutationID\": 1,\r\n    \"birthDate\": \"1979-02-08T00:00:00+00:00\",\r\n    \"createdDate\": \"2021-09-27T02:12:35.01+00:00\",\r\n    \"ts\": \"AAAAAAAGEao=\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/IdentityPerson?code={{Code}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"IdentityPerson"
							],
							"query": [
								{
									"key": "code",
									"value": "{{Code}}"
								},
								{
									"key": "IdentityID",
									"value": "2385",
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "IdentityRole",
			"item": [
				{
					"name": "GetIdentityRole",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var secret = \"process.env.VNOVA_SECRET\";\r",
									"//pm.variables.set(\"secret\", process.env.VNOVA_SECRET);\r",
									"console.log(secret);\r",
									"\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/IdentityRole?code={{Code}}&IdentityID=5",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"IdentityRole"
							],
							"query": [
								{
									"key": "code",
									"value": "{{Code}}"
								},
								{
									"key": "IdentityID",
									"value": "5"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "IdentityOrganisaiton",
			"item": [
				{
					"name": "IdentityOrganisation_200",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const schema = {\r",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
									"    \"$id\": \"http://example.com/example.json\",\r",
									"    \"type\": \"object\",\r",
									"    \"required\": [\r",
									"        \"id\",\r",
									"        \"identityTypeID\",\r",
									"        \"organisationName\",\r",
									"        \"organisationKnownAs\",\r",
									"        \"businessUnitID\",\r",
									"        \"roleTypeID\",\r",
									"        \"preferredContactMethodTypeID\",\r",
									"        \"createdDate\",\r",
									"        \"ts\"\r",
									"    ],\r",
									"    \"properties\": {\r",
									"        \"id\": {\r",
									"            \"$id\": \"#/properties/id\",\r",
									"            \"type\": \"integer\"\r",
									"        },\r",
									"        \"identityTypeID\": {\r",
									"            \"$id\": \"#/properties/identityTypeID\",\r",
									"            \"type\": \"integer\"\r",
									"        },\r",
									"        \"organisationName\": {\r",
									"            \"$id\": \"#/properties/organisationName\",\r",
									"            \"type\": \"string\"\r",
									"        },\r",
									"        \"organisationKnownAs\": {\r",
									"            \"$id\": \"#/properties/organisationKnownAs\",\r",
									"            \"type\": \"string\"\r",
									"        },\r",
									"        \"businessUnitID\": {\r",
									"            \"$id\": \"#/properties/businessUnitID\",\r",
									"            \"type\": \"integer\"\r",
									"        },\r",
									"        \"roleTypeID\": {\r",
									"            \"$id\": \"#/properties/roleTypeID\",\r",
									"            \"type\": \"null\"\r",
									"        },\r",
									"        \"preferredContactMethodTypeID\": {\r",
									"            \"$id\": \"#/properties/preferredContactMethodTypeID\",\r",
									"            \"type\": \"null\"\r",
									"        },\r",
									"        \"createdDate\": {\r",
									"            \"$id\": \"#/properties/createdDate\",\r",
									"            \"type\": \"string\"\r",
									"        },\r",
									"        \"ts\": {\r",
									"            \"$id\": \"#/properties/ts\",\r",
									"            \"type\": \"string\"\r",
									"        }\r",
									"    }\r",
									"}\r",
									"\r",
									"\r",
									"pm.test(\"Validate Schema\"),() => {\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"};\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"IdentityTypeID\": 2,\r\n    \"OrganisationName\": \"Akarua Organisation\",\r\n    \"OrganisationKnownAs\": \"Akarua\",\r\n    \"RoleTypeID\": null,\r\n    \"PreferredContactMethodTypeID\": null,\r\n    \"BusinessUnitID\": 1,\r\n    \"CreatedDate\": \"2020-01-26\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/IdentityOrganisation?code={{Code}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"IdentityOrganisation"
							],
							"query": [
								{
									"key": "code",
									"value": "{{Code}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "IdentityOrganisation_500",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 500\", function () {\r",
									"    pm.response.to.have.status(500);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is Internal Server Error\", function () {\r",
									"    pm.response.to.have.status(\"Internal Server Error\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "awsv4"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"IdentityTypeID\": 2,\r\n    \"OrganisationName\": \"Akarua Organisation\",\r\n    \"OrganisationKnownAs\": \"Akarua\",\r\n    \"RoleTypeID\": null,\r\n    \"PreferredContactMethodTypeID\": null,\r\n    \"BusinessUnitID\": 1,\r\n    \"CreatedDate\": \"2020-01-26\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/IdentityOrganisation?code={{Code}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"IdentityOrganisation"
							],
							"query": [
								{
									"key": "code",
									"value": "{{Code}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "IdentityOrganisation_500",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 500\", function () {\r",
									"    pm.response.to.have.status(500);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is Internal Server Error\", function () {\r",
									"    pm.response.to.have.status(\"Internal Server Error\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"IdentityTypeID\": 2,\r\n    \"OrganisationName\": \"Akarua Organisation\",\r\n    \"OrganisationKnownAs\": \"Akarua\",\r\n    \"RoleTypeID\": null,\r\n    \"PreferredContactMethodTypeID\": null,\r\n    \"BusinessUnitID\": 1,\r\n    \"CreatedDate\": \"2020-01-26\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/IdentityOrganisation?code={{Code}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"IdentityOrganisation"
							],
							"query": [
								{
									"key": "code",
									"value": "{{Code}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "IdentityOrganisation_200",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const schema = {\r",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
									"    \"$id\": \"http://example.com/example.json\",\r",
									"    \"type\": \"object\",\r",
									"    \"required\": [\r",
									"        \"id\",\r",
									"        \"identityTypeID\",\r",
									"        \"organisationName\",\r",
									"        \"organisationKnownAs\",\r",
									"        \"businessUnitID\",\r",
									"        \"roleTypeID\",\r",
									"        \"preferredContactMethodTypeID\",\r",
									"        \"createdDate\",\r",
									"        \"ts\"\r",
									"    ],\r",
									"    \"properties\": {\r",
									"        \"id\": {\r",
									"            \"$id\": \"#/properties/id\",\r",
									"            \"type\": \"integer\"\r",
									"        },\r",
									"        \"identityTypeID\": {\r",
									"            \"$id\": \"#/properties/identityTypeID\",\r",
									"            \"type\": \"integer\"\r",
									"        },\r",
									"        \"organisationName\": {\r",
									"            \"$id\": \"#/properties/organisationName\",\r",
									"            \"type\": \"string\"\r",
									"        },\r",
									"        \"organisationKnownAs\": {\r",
									"            \"$id\": \"#/properties/organisationKnownAs\",\r",
									"            \"type\": \"string\"\r",
									"        },\r",
									"        \"businessUnitID\": {\r",
									"            \"$id\": \"#/properties/businessUnitID\",\r",
									"            \"type\": \"integer\"\r",
									"        },\r",
									"        \"roleTypeID\": {\r",
									"            \"$id\": \"#/properties/roleTypeID\",\r",
									"            \"type\": \"null\"\r",
									"        },\r",
									"        \"preferredContactMethodTypeID\": {\r",
									"            \"$id\": \"#/properties/preferredContactMethodTypeID\",\r",
									"            \"type\": \"null\"\r",
									"        },\r",
									"        \"createdDate\": {\r",
									"            \"$id\": \"#/properties/createdDate\",\r",
									"            \"type\": \"string\"\r",
									"        },\r",
									"        \"ts\": {\r",
									"            \"$id\": \"#/properties/ts\",\r",
									"            \"type\": \"string\"\r",
									"        }\r",
									"    }\r",
									"}\r",
									"\r",
									"\r",
									"pm.test(\"Validate Schema\"),() => {\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"};\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/IdentityOrganisation?code={{Code}}&IdentityID=3094",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"IdentityOrganisation"
							],
							"query": [
								{
									"key": "code",
									"value": "{{Code}}"
								},
								{
									"key": "IdentityID",
									"value": "3094"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "IdentityOrganisation_500",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 500\", function () {\r",
									"    pm.response.to.have.status(500);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is Internal Server Error\", function () {\r",
									"    pm.response.to.have.status(\"Internal Server Error\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "awsv4"
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"IdentityTypeID\": 2,\r\n    \"OrganisationName\": \"Akarua Organisation\",\r\n    \"OrganisationKnownAs\": \"Akarua\",\r\n    \"RoleTypeID\": null,\r\n    \"PreferredContactMethodTypeID\": null,\r\n    \"BusinessUnitID\": 1,\r\n    \"CreatedDate\": \"2020-01-26\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/IdentityOrganisation?code={{Code}}&IdentityID=3094",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"IdentityOrganisation"
							],
							"query": [
								{
									"key": "code",
									"value": "{{Code}}"
								},
								{
									"key": "IdentityID",
									"value": "3094"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "IdentityOrganisation_400",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is Bad Request\", function () {\r",
									"    pm.response.to.have.status(\"Bad Request\");\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"IdentityTypeID\": 2,\r\n    \"OrganisationName\": \"Akarua Organisation\",\r\n    \"OrganisationKnownAs\": \"Akarua\",\r\n    \"RoleTypeID\": null,\r\n    \"PreferredContactMethodTypeID\": null,\r\n    \"BusinessUnitID\": 1,\r\n    \"CreatedDate\": \"2020-01-26\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/IdentityOrganisation?code={{Code}}&IdentityID=3094",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"IdentityOrganisation"
							],
							"query": [
								{
									"key": "code",
									"value": "{{Code}}"
								},
								{
									"key": "IdentityID",
									"value": "3094"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "IdentityReference",
			"item": [
				{
					"name": "IdentityReference_200",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/IdentityReference?code={{Code}}&IdentityTypeID=2&IdentityID=3094",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"IdentityReference"
							],
							"query": [
								{
									"key": "code",
									"value": "{{Code}}"
								},
								{
									"key": "IdentityTypeID",
									"value": "2"
								},
								{
									"key": "IdentityID",
									"value": "3094"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "IdentityReference_200",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var schema = {\r",
									"    \"$schema\": \"http://json-schema.org/draft-06/schema\",\r",
									"    \"$id\": \"http://example.com/example.json\",\r",
									"    \"type\": \"object\",\r",
									"    \"required\": [\r",
									"        \"id\",\r",
									"        \"identityID\",\r",
									"        \"referenceType\",\r",
									"        \"referenceValue\",\r",
									"        \"referenceTypeID\",\r",
									"        \"effectiveFromDate\",\r",
									"        \"effectiveToDate\",\r",
									"        \"displayOrder\",\r",
									"        \"ts\"\r",
									"    ],\r",
									"    \"properties\": {\r",
									"        \"id\": {\r",
									"            \"$id\": \"#/properties/id\",\r",
									"            \"type\": \"integer\"\r",
									"        },\r",
									"        \"identityID\": {\r",
									"            \"$id\": \"#/properties/identityID\",\r",
									"            \"type\": \"integer\"\r",
									"        },\r",
									"        \"referenceType\": {\r",
									"            \"$id\": \"#/properties/referenceType\",\r",
									"            \"type\": \"null\"\r",
									"        },\r",
									"        \"referenceValue\": {\r",
									"            \"$id\": \"#/properties/referenceValue\",\r",
									"            \"type\": \"string\"\r",
									"        },\r",
									"        \"referenceTypeID\": {\r",
									"            \"$id\": \"#/properties/referenceTypeID\",\r",
									"            \"type\": \"integer\"\r",
									"        },\r",
									"        \"effectiveFromDate\": {\r",
									"            \"$id\": \"#/properties/effectiveFromDate\",\r",
									"            \"type\": \"string\"\r",
									"        },\r",
									"        \"effectiveToDate\": {\r",
									"            \"$id\": \"#/properties/effectiveToDate\",\r",
									"            \"type\": \"string\"\r",
									"        },\r",
									"        \"displayOrder\": {\r",
									"            \"$id\": \"#/properties/displayOrder\",\r",
									"            \"type\": \"integer\"\r",
									"        },\r",
									"        \"ts\": {\r",
									"            \"$id\": \"#/properties/ts\",\r",
									"            \"type\": \"string\"\r",
									"        }\r",
									"    },\r",
									"    \"additionalProperties\": false\r",
									"}\r",
									"\r",
									"/*\r",
									"pm.test('Checking Json Schema Validation Against response', function(){\r",
									"\r",
									"    var result = tv4.validate(pm.response.json(), schema)\r",
									"     pm.expect(result).to.be.true;\r",
									"       console.log(result);\r",
									"     //console.log(result.valid);\r",
									"\r",
									"});*/\r",
									"\r",
									"pm.test(\"Checking Json Schema Validation\"),()=>{\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"};\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer eyJ0eXAiOiJKV1QiLCJub25jZSI6Inl1X2tmbXE1T1lUVGIzdUNfQnc5THF6RDkwNUNCTzhXeG9zb2pJdXlMa2ciLCJhbGciOiJSUzI1NiIsIng1dCI6Im5PbzNaRHJPRFhFSzFqS1doWHNsSFJfS1hFZyIsImtpZCI6Im5PbzNaRHJPRFhFSzFqS1doWHNsSFJfS1hFZyJ9.eyJhdWQiOiIwMDAwMDAwMy0wMDAwLTAwMDAtYzAwMC0wMDAwMDAwMDAwMDAiLCJpc3MiOiJodHRwczovL3N0cy53aW5kb3dzLm5ldC8yMGFkODczMS1hNGIzLTQxOWUtOWVkNi0wYjhkNjU2YWU4OWQvIiwiaWF0IjoxNjEwNjYwNzIzLCJuYmYiOjE2MTA2NjA3MjMsImV4cCI6MTYxMDY2NDYyMywiYWNjdCI6MCwiYWNyIjoiMSIsImFjcnMiOlsidXJuOnVzZXI6cmVnaXN0ZXJzZWN1cml0eWluZm8iLCJ1cm46bWljcm9zb2Z0OnJlcTEiLCJ1cm46bWljcm9zb2Z0OnJlcTIiLCJ1cm46bWljcm9zb2Z0OnJlcTMiLCJjMSIsImMyIiwiYzMiLCJjNCIsImM1IiwiYzYiLCJjNyIsImM4IiwiYzkiLCJjMTAiLCJjMTEiLCJjMTIiLCJjMTMiLCJjMTQiLCJjMTUiLCJjMTYiLCJjMTciLCJjMTgiLCJjMTkiLCJjMjAiLCJjMjEiLCJjMjIiLCJjMjMiLCJjMjQiLCJjMjUiXSwiYWlvIjoiQVVRQXUvOFNBQUFBUThEdlU4c2lwWlpsUS81NVFIZWdGSWJtRXRWVVlqMEg5dC80cCszalcxWFNvZU5oL2VvZVZrZW91M1c4QXpkbXcrREhJRGsvbDM4eHl2Z3VUNHlRV3c9PSIsImFtciI6WyJwd2QiLCJtZmEiXSwiYXBwX2Rpc3BsYXluYW1lIjoiVmluZWFOb3ZhV2ViRGV2IiwiYXBwaWQiOiIwNTczNzFhNC02NGVkLTQwOWUtOWRmNy1hODcyMWZhY2NhYWMiLCJhcHBpZGFjciI6IjAiLCJmYW1pbHlfbmFtZSI6ImtoYW56eiIsImdpdmVuX25hbWUiOiJpcmZhbiIsImlkdHlwIjoidXNlciIsImlwYWRkciI6IjE2MS40My43OC4xNzQiLCJuYW1lIjoiSXJmYW4gS2hhbiIsIm9pZCI6IjNjZDkzZjQxLTVjMmItNGNhOC1hY2EwLWI4NTBhMzM3NTQyOSIsInBsYXRmIjoiMyIsInB1aWQiOiIxMDAzN0ZGRUE2NjMwRjAzIiwicHdkX2V4cCI6Ijc3ODU0MiIsInB3ZF91cmwiOiJodHRwczovL3BvcnRhbC5taWNyb3NvZnRvbmxpbmUuY29tL0NoYW5nZVBhc3N3b3JkLmFzcHgiLCJyaCI6IjAuQVFZQU1ZZXRJTE9rbmtHZTFndU5aV3JvbmFSeGN3WHRaSjVBbmZlb2NoLXN5cXdHQUl3LiIsInNjcCI6IkFwcGxpY2F0aW9uLlJlYWQuQWxsIE9yZ2FuaXphdGlvbi5SZWFkLkFsbCBVc2VyLlJlYWQgcHJvZmlsZSBvcGVuaWQgZW1haWwiLCJzaWduaW5fc3RhdGUiOlsia21zaSJdLCJzdWIiOiJIRVFfNkI1TEdVWTh4aEdib2NQeFRaemNjN2FmV3d4ajJZa25PSWM3YjNvIiwidGVuYW50X3JlZ2lvbl9zY29wZSI6Ik9DIiwidGlkIjoiMjBhZDg3MzEtYTRiMy00MTllLTllZDYtMGI4ZDY1NmFlODlkIiwidW5pcXVlX25hbWUiOiJJcmZhbkBpbmZvcG93ZXIuY28ubnoiLCJ1cG4iOiJJcmZhbkBpbmZvcG93ZXIuY28ubnoiLCJ1dGkiOiJXSlRKblZUUVdrRzV1VFNMTmFWU0FBIiwidmVyIjoiMS4wIiwid2lkcyI6WyJiNzlmYmY0ZC0zZWY5LTQ2ODktODE0My03NmIxOTRlODU1MDkiXSwieG1zX3N0Ijp7InN1YiI6ImR1WnZVN0ZlUHpocHlnYzlfUHA2Qm55eUR1UHBzMlA4a3BvOVFydzdpT2MifSwieG1zX3RjZHQiOjEzNTE1NTAyMDF9.SkEPHbwef3QiSEAf2-xqiYF7slbQVc7midK2hMn2I46VTHZKF6mBXoSe01VyKk1MrJqiITXrxHvgB7dfhtNN9qxOMNsxXB9hkBx5_39xI0Es_tFCEUPQWq6AeOOqubzGCo7aLjRBtUawY7QCi41dnMgJMLXcvgDgNIsnbi1zUvY2JKNdjdbasH6d3Aph1x6-Qnu94bsqdCsT3p322wJ4k9uMSg43HL2ye_UBJMQR79mYycjyv430VJYKzxGeOccwRkvH41D1a7CYdSrYK4Il3TycdaygDP3X7mJwYd7qMh_LvM1mBP16_zQrt35Fjb9Ag1PRm4qnPvAz0pJguxcVuQ",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"IdentityID\": \"2385\",\r\n    \"effectiveFromDate\": \"2021-01-18\",\r\n    \"effectiveToDate\": \"2021-01-20\",\r\n    \"referenceTypeID\": 9,\r\n    \"referenceValue\": \"testdata\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/IdentityReference?code={{Code}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"IdentityReference"
							],
							"query": [
								{
									"key": "code",
									"value": "{{Code}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "IdentityReference_400",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is Bad Request\", function () {\r",
									"    pm.response.to.have.status(\"Bad Request\");\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer eyJ0eXAiOiJKV1QiLCJub25jZSI6Inl1X2tmbXE1T1lUVGIzdUNfQnc5THF6RDkwNUNCTzhXeG9zb2pJdXlMa2ciLCJhbGciOiJSUzI1NiIsIng1dCI6Im5PbzNaRHJPRFhFSzFqS1doWHNsSFJfS1hFZyIsImtpZCI6Im5PbzNaRHJPRFhFSzFqS1doWHNsSFJfS1hFZyJ9.eyJhdWQiOiIwMDAwMDAwMy0wMDAwLTAwMDAtYzAwMC0wMDAwMDAwMDAwMDAiLCJpc3MiOiJodHRwczovL3N0cy53aW5kb3dzLm5ldC8yMGFkODczMS1hNGIzLTQxOWUtOWVkNi0wYjhkNjU2YWU4OWQvIiwiaWF0IjoxNjEwNjYwNzIzLCJuYmYiOjE2MTA2NjA3MjMsImV4cCI6MTYxMDY2NDYyMywiYWNjdCI6MCwiYWNyIjoiMSIsImFjcnMiOlsidXJuOnVzZXI6cmVnaXN0ZXJzZWN1cml0eWluZm8iLCJ1cm46bWljcm9zb2Z0OnJlcTEiLCJ1cm46bWljcm9zb2Z0OnJlcTIiLCJ1cm46bWljcm9zb2Z0OnJlcTMiLCJjMSIsImMyIiwiYzMiLCJjNCIsImM1IiwiYzYiLCJjNyIsImM4IiwiYzkiLCJjMTAiLCJjMTEiLCJjMTIiLCJjMTMiLCJjMTQiLCJjMTUiLCJjMTYiLCJjMTciLCJjMTgiLCJjMTkiLCJjMjAiLCJjMjEiLCJjMjIiLCJjMjMiLCJjMjQiLCJjMjUiXSwiYWlvIjoiQVVRQXUvOFNBQUFBUThEdlU4c2lwWlpsUS81NVFIZWdGSWJtRXRWVVlqMEg5dC80cCszalcxWFNvZU5oL2VvZVZrZW91M1c4QXpkbXcrREhJRGsvbDM4eHl2Z3VUNHlRV3c9PSIsImFtciI6WyJwd2QiLCJtZmEiXSwiYXBwX2Rpc3BsYXluYW1lIjoiVmluZWFOb3ZhV2ViRGV2IiwiYXBwaWQiOiIwNTczNzFhNC02NGVkLTQwOWUtOWRmNy1hODcyMWZhY2NhYWMiLCJhcHBpZGFjciI6IjAiLCJmYW1pbHlfbmFtZSI6ImtoYW56eiIsImdpdmVuX25hbWUiOiJpcmZhbiIsImlkdHlwIjoidXNlciIsImlwYWRkciI6IjE2MS40My43OC4xNzQiLCJuYW1lIjoiSXJmYW4gS2hhbiIsIm9pZCI6IjNjZDkzZjQxLTVjMmItNGNhOC1hY2EwLWI4NTBhMzM3NTQyOSIsInBsYXRmIjoiMyIsInB1aWQiOiIxMDAzN0ZGRUE2NjMwRjAzIiwicHdkX2V4cCI6Ijc3ODU0MiIsInB3ZF91cmwiOiJodHRwczovL3BvcnRhbC5taWNyb3NvZnRvbmxpbmUuY29tL0NoYW5nZVBhc3N3b3JkLmFzcHgiLCJyaCI6IjAuQVFZQU1ZZXRJTE9rbmtHZTFndU5aV3JvbmFSeGN3WHRaSjVBbmZlb2NoLXN5cXdHQUl3LiIsInNjcCI6IkFwcGxpY2F0aW9uLlJlYWQuQWxsIE9yZ2FuaXphdGlvbi5SZWFkLkFsbCBVc2VyLlJlYWQgcHJvZmlsZSBvcGVuaWQgZW1haWwiLCJzaWduaW5fc3RhdGUiOlsia21zaSJdLCJzdWIiOiJIRVFfNkI1TEdVWTh4aEdib2NQeFRaemNjN2FmV3d4ajJZa25PSWM3YjNvIiwidGVuYW50X3JlZ2lvbl9zY29wZSI6Ik9DIiwidGlkIjoiMjBhZDg3MzEtYTRiMy00MTllLTllZDYtMGI4ZDY1NmFlODlkIiwidW5pcXVlX25hbWUiOiJJcmZhbkBpbmZvcG93ZXIuY28ubnoiLCJ1cG4iOiJJcmZhbkBpbmZvcG93ZXIuY28ubnoiLCJ1dGkiOiJXSlRKblZUUVdrRzV1VFNMTmFWU0FBIiwidmVyIjoiMS4wIiwid2lkcyI6WyJiNzlmYmY0ZC0zZWY5LTQ2ODktODE0My03NmIxOTRlODU1MDkiXSwieG1zX3N0Ijp7InN1YiI6ImR1WnZVN0ZlUHpocHlnYzlfUHA2Qm55eUR1UHBzMlA4a3BvOVFydzdpT2MifSwieG1zX3RjZHQiOjEzNTE1NTAyMDF9.SkEPHbwef3QiSEAf2-xqiYF7slbQVc7midK2hMn2I46VTHZKF6mBXoSe01VyKk1MrJqiITXrxHvgB7dfhtNN9qxOMNsxXB9hkBx5_39xI0Es_tFCEUPQWq6AeOOqubzGCo7aLjRBtUawY7QCi41dnMgJMLXcvgDgNIsnbi1zUvY2JKNdjdbasH6d3Aph1x6-Qnu94bsqdCsT3p322wJ4k9uMSg43HL2ye_UBJMQR79mYycjyv430VJYKzxGeOccwRkvH41D1a7CYdSrYK4Il3TycdaygDP3X7mJwYd7qMh_LvM1mBP16_zQrt35Fjb9Ag1PRm4qnPvAz0pJguxcVuQ",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"IdentityID\": \"2385\",\r\n    \"effectiveFromDate\": \"2021-01-18\",\r\n    \"effectiveToDate\": \"2021-01-20\",\r\n    \"referenceTypeID\": 9,\r\n    \"referenceValue\": \"testdata\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/IdentityReference?code={{Code}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"IdentityReference"
							],
							"query": [
								{
									"key": "code",
									"value": "{{Code}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "IdentityReference_500",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 500\", function () {\r",
									"    pm.response.to.have.status(500);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is Internal Server Error\", function () {\r",
									"    pm.response.to.have.status(\"Internal Server Error\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "awsv4"
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer eyJ0eXAiOiJKV1QiLCJub25jZSI6Inl1X2tmbXE1T1lUVGIzdUNfQnc5THF6RDkwNUNCTzhXeG9zb2pJdXlMa2ciLCJhbGciOiJSUzI1NiIsIng1dCI6Im5PbzNaRHJPRFhFSzFqS1doWHNsSFJfS1hFZyIsImtpZCI6Im5PbzNaRHJPRFhFSzFqS1doWHNsSFJfS1hFZyJ9.eyJhdWQiOiIwMDAwMDAwMy0wMDAwLTAwMDAtYzAwMC0wMDAwMDAwMDAwMDAiLCJpc3MiOiJodHRwczovL3N0cy53aW5kb3dzLm5ldC8yMGFkODczMS1hNGIzLTQxOWUtOWVkNi0wYjhkNjU2YWU4OWQvIiwiaWF0IjoxNjEwNjYwNzIzLCJuYmYiOjE2MTA2NjA3MjMsImV4cCI6MTYxMDY2NDYyMywiYWNjdCI6MCwiYWNyIjoiMSIsImFjcnMiOlsidXJuOnVzZXI6cmVnaXN0ZXJzZWN1cml0eWluZm8iLCJ1cm46bWljcm9zb2Z0OnJlcTEiLCJ1cm46bWljcm9zb2Z0OnJlcTIiLCJ1cm46bWljcm9zb2Z0OnJlcTMiLCJjMSIsImMyIiwiYzMiLCJjNCIsImM1IiwiYzYiLCJjNyIsImM4IiwiYzkiLCJjMTAiLCJjMTEiLCJjMTIiLCJjMTMiLCJjMTQiLCJjMTUiLCJjMTYiLCJjMTciLCJjMTgiLCJjMTkiLCJjMjAiLCJjMjEiLCJjMjIiLCJjMjMiLCJjMjQiLCJjMjUiXSwiYWlvIjoiQVVRQXUvOFNBQUFBUThEdlU4c2lwWlpsUS81NVFIZWdGSWJtRXRWVVlqMEg5dC80cCszalcxWFNvZU5oL2VvZVZrZW91M1c4QXpkbXcrREhJRGsvbDM4eHl2Z3VUNHlRV3c9PSIsImFtciI6WyJwd2QiLCJtZmEiXSwiYXBwX2Rpc3BsYXluYW1lIjoiVmluZWFOb3ZhV2ViRGV2IiwiYXBwaWQiOiIwNTczNzFhNC02NGVkLTQwOWUtOWRmNy1hODcyMWZhY2NhYWMiLCJhcHBpZGFjciI6IjAiLCJmYW1pbHlfbmFtZSI6ImtoYW56eiIsImdpdmVuX25hbWUiOiJpcmZhbiIsImlkdHlwIjoidXNlciIsImlwYWRkciI6IjE2MS40My43OC4xNzQiLCJuYW1lIjoiSXJmYW4gS2hhbiIsIm9pZCI6IjNjZDkzZjQxLTVjMmItNGNhOC1hY2EwLWI4NTBhMzM3NTQyOSIsInBsYXRmIjoiMyIsInB1aWQiOiIxMDAzN0ZGRUE2NjMwRjAzIiwicHdkX2V4cCI6Ijc3ODU0MiIsInB3ZF91cmwiOiJodHRwczovL3BvcnRhbC5taWNyb3NvZnRvbmxpbmUuY29tL0NoYW5nZVBhc3N3b3JkLmFzcHgiLCJyaCI6IjAuQVFZQU1ZZXRJTE9rbmtHZTFndU5aV3JvbmFSeGN3WHRaSjVBbmZlb2NoLXN5cXdHQUl3LiIsInNjcCI6IkFwcGxpY2F0aW9uLlJlYWQuQWxsIE9yZ2FuaXphdGlvbi5SZWFkLkFsbCBVc2VyLlJlYWQgcHJvZmlsZSBvcGVuaWQgZW1haWwiLCJzaWduaW5fc3RhdGUiOlsia21zaSJdLCJzdWIiOiJIRVFfNkI1TEdVWTh4aEdib2NQeFRaemNjN2FmV3d4ajJZa25PSWM3YjNvIiwidGVuYW50X3JlZ2lvbl9zY29wZSI6Ik9DIiwidGlkIjoiMjBhZDg3MzEtYTRiMy00MTllLTllZDYtMGI4ZDY1NmFlODlkIiwidW5pcXVlX25hbWUiOiJJcmZhbkBpbmZvcG93ZXIuY28ubnoiLCJ1cG4iOiJJcmZhbkBpbmZvcG93ZXIuY28ubnoiLCJ1dGkiOiJXSlRKblZUUVdrRzV1VFNMTmFWU0FBIiwidmVyIjoiMS4wIiwid2lkcyI6WyJiNzlmYmY0ZC0zZWY5LTQ2ODktODE0My03NmIxOTRlODU1MDkiXSwieG1zX3N0Ijp7InN1YiI6ImR1WnZVN0ZlUHpocHlnYzlfUHA2Qm55eUR1UHBzMlA4a3BvOVFydzdpT2MifSwieG1zX3RjZHQiOjEzNTE1NTAyMDF9.SkEPHbwef3QiSEAf2-xqiYF7slbQVc7midK2hMn2I46VTHZKF6mBXoSe01VyKk1MrJqiITXrxHvgB7dfhtNN9qxOMNsxXB9hkBx5_39xI0Es_tFCEUPQWq6AeOOqubzGCo7aLjRBtUawY7QCi41dnMgJMLXcvgDgNIsnbi1zUvY2JKNdjdbasH6d3Aph1x6-Qnu94bsqdCsT3p322wJ4k9uMSg43HL2ye_UBJMQR79mYycjyv430VJYKzxGeOccwRkvH41D1a7CYdSrYK4Il3TycdaygDP3X7mJwYd7qMh_LvM1mBP16_zQrt35Fjb9Ag1PRm4qnPvAz0pJguxcVuQ",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"IdentityID\": \"2385\",\r\n    \"effectiveFromDate\": \"2021-01-18\",\r\n    \"effectiveToDate\": \"2021-01-20\",\r\n    \"referenceTypeID\": 9,\r\n    \"referenceValue\": \"testdata\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/IdentityReference?code={{Code}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"IdentityReference"
							],
							"query": [
								{
									"key": "code",
									"value": "{{Code}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "IdentityReference_500",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 500\", function () {\r",
									"    pm.response.to.have.status(500);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is Internal Server Error\", function () {\r",
									"    pm.response.to.have.status(\"Internal Server Error\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "awsv4"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer eyJ0eXAiOiJKV1QiLCJub25jZSI6Inl1X2tmbXE1T1lUVGIzdUNfQnc5THF6RDkwNUNCTzhXeG9zb2pJdXlMa2ciLCJhbGciOiJSUzI1NiIsIng1dCI6Im5PbzNaRHJPRFhFSzFqS1doWHNsSFJfS1hFZyIsImtpZCI6Im5PbzNaRHJPRFhFSzFqS1doWHNsSFJfS1hFZyJ9.eyJhdWQiOiIwMDAwMDAwMy0wMDAwLTAwMDAtYzAwMC0wMDAwMDAwMDAwMDAiLCJpc3MiOiJodHRwczovL3N0cy53aW5kb3dzLm5ldC8yMGFkODczMS1hNGIzLTQxOWUtOWVkNi0wYjhkNjU2YWU4OWQvIiwiaWF0IjoxNjEwNjYwNzIzLCJuYmYiOjE2MTA2NjA3MjMsImV4cCI6MTYxMDY2NDYyMywiYWNjdCI6MCwiYWNyIjoiMSIsImFjcnMiOlsidXJuOnVzZXI6cmVnaXN0ZXJzZWN1cml0eWluZm8iLCJ1cm46bWljcm9zb2Z0OnJlcTEiLCJ1cm46bWljcm9zb2Z0OnJlcTIiLCJ1cm46bWljcm9zb2Z0OnJlcTMiLCJjMSIsImMyIiwiYzMiLCJjNCIsImM1IiwiYzYiLCJjNyIsImM4IiwiYzkiLCJjMTAiLCJjMTEiLCJjMTIiLCJjMTMiLCJjMTQiLCJjMTUiLCJjMTYiLCJjMTciLCJjMTgiLCJjMTkiLCJjMjAiLCJjMjEiLCJjMjIiLCJjMjMiLCJjMjQiLCJjMjUiXSwiYWlvIjoiQVVRQXUvOFNBQUFBUThEdlU4c2lwWlpsUS81NVFIZWdGSWJtRXRWVVlqMEg5dC80cCszalcxWFNvZU5oL2VvZVZrZW91M1c4QXpkbXcrREhJRGsvbDM4eHl2Z3VUNHlRV3c9PSIsImFtciI6WyJwd2QiLCJtZmEiXSwiYXBwX2Rpc3BsYXluYW1lIjoiVmluZWFOb3ZhV2ViRGV2IiwiYXBwaWQiOiIwNTczNzFhNC02NGVkLTQwOWUtOWRmNy1hODcyMWZhY2NhYWMiLCJhcHBpZGFjciI6IjAiLCJmYW1pbHlfbmFtZSI6ImtoYW56eiIsImdpdmVuX25hbWUiOiJpcmZhbiIsImlkdHlwIjoidXNlciIsImlwYWRkciI6IjE2MS40My43OC4xNzQiLCJuYW1lIjoiSXJmYW4gS2hhbiIsIm9pZCI6IjNjZDkzZjQxLTVjMmItNGNhOC1hY2EwLWI4NTBhMzM3NTQyOSIsInBsYXRmIjoiMyIsInB1aWQiOiIxMDAzN0ZGRUE2NjMwRjAzIiwicHdkX2V4cCI6Ijc3ODU0MiIsInB3ZF91cmwiOiJodHRwczovL3BvcnRhbC5taWNyb3NvZnRvbmxpbmUuY29tL0NoYW5nZVBhc3N3b3JkLmFzcHgiLCJyaCI6IjAuQVFZQU1ZZXRJTE9rbmtHZTFndU5aV3JvbmFSeGN3WHRaSjVBbmZlb2NoLXN5cXdHQUl3LiIsInNjcCI6IkFwcGxpY2F0aW9uLlJlYWQuQWxsIE9yZ2FuaXphdGlvbi5SZWFkLkFsbCBVc2VyLlJlYWQgcHJvZmlsZSBvcGVuaWQgZW1haWwiLCJzaWduaW5fc3RhdGUiOlsia21zaSJdLCJzdWIiOiJIRVFfNkI1TEdVWTh4aEdib2NQeFRaemNjN2FmV3d4ajJZa25PSWM3YjNvIiwidGVuYW50X3JlZ2lvbl9zY29wZSI6Ik9DIiwidGlkIjoiMjBhZDg3MzEtYTRiMy00MTllLTllZDYtMGI4ZDY1NmFlODlkIiwidW5pcXVlX25hbWUiOiJJcmZhbkBpbmZvcG93ZXIuY28ubnoiLCJ1cG4iOiJJcmZhbkBpbmZvcG93ZXIuY28ubnoiLCJ1dGkiOiJXSlRKblZUUVdrRzV1VFNMTmFWU0FBIiwidmVyIjoiMS4wIiwid2lkcyI6WyJiNzlmYmY0ZC0zZWY5LTQ2ODktODE0My03NmIxOTRlODU1MDkiXSwieG1zX3N0Ijp7InN1YiI6ImR1WnZVN0ZlUHpocHlnYzlfUHA2Qm55eUR1UHBzMlA4a3BvOVFydzdpT2MifSwieG1zX3RjZHQiOjEzNTE1NTAyMDF9.SkEPHbwef3QiSEAf2-xqiYF7slbQVc7midK2hMn2I46VTHZKF6mBXoSe01VyKk1MrJqiITXrxHvgB7dfhtNN9qxOMNsxXB9hkBx5_39xI0Es_tFCEUPQWq6AeOOqubzGCo7aLjRBtUawY7QCi41dnMgJMLXcvgDgNIsnbi1zUvY2JKNdjdbasH6d3Aph1x6-Qnu94bsqdCsT3p322wJ4k9uMSg43HL2ye_UBJMQR79mYycjyv430VJYKzxGeOccwRkvH41D1a7CYdSrYK4Il3TycdaygDP3X7mJwYd7qMh_LvM1mBP16_zQrt35Fjb9Ag1PRm4qnPvAz0pJguxcVuQ",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"IdentityID\": \"2385\",\r\n    \"effectiveFromDate\": \"2021-01-18\",\r\n    \"effectiveToDate\": \"2021-01-20\",\r\n    \"referenceTypeID\": 9,\r\n    \"referenceValue\": \"testdata\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/IdentityReference?code={{Code}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"IdentityReference"
							],
							"query": [
								{
									"key": "code",
									"value": "{{Code}}"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "IdentityRelationship",
			"item": [
				{
					"name": "IdentityRelationship_200",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const schema = {\r",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
									"    \"$id\": \"http://example.com/example.json\",\r",
									"    \"type\": \"array\",\r",
									"    \"items\": {\r",
									"        \"$id\": \"#/items\",\r",
									"        \"type\": \"object\",\r",
									"        \"required\": [\r",
									"            \"id\",\r",
									"            \"relatesTo\",\r",
									"            \"relationshipName\",\r",
									"            \"relationshipTypeID\",\r",
									"            \"ownerIdentityID\",\r",
									"            \"dependentIdentityID\",\r",
									"            \"comment\",\r",
									"            \"isDisplayOnPanel\",\r",
									"            \"effectiveFromDate\",\r",
									"            \"effectiveToDate\",\r",
									"            \"ts\"\r",
									"        ],\r",
									"        \"properties\": {\r",
									"            \"id\": {\r",
									"                \"$id\": \"#/items/properties/id\",\r",
									"                \"type\": \"integer\"\r",
									"            },\r",
									"            \"relatesTo\": {\r",
									"                \"$id\": \"#/items/properties/relatesTo\",\r",
									"                \"type\": \"string\"\r",
									"            },\r",
									"            \"relationshipName\": {\r",
									"                \"$id\": \"#/items/properties/relationshipName\",\r",
									"                \"type\": \"string\"\r",
									"            },\r",
									"            \"relationshipTypeID\": {\r",
									"                \"$id\": \"#/items/properties/relationshipTypeID\",\r",
									"                \"type\": \"integer\"\r",
									"            },\r",
									"            \"ownerIdentityID\": {\r",
									"                \"$id\": \"#/items/properties/ownerIdentityID\",\r",
									"                \"type\": \"integer\"\r",
									"            },\r",
									"            \"dependentIdentityID\": {\r",
									"                \"$id\": \"#/items/properties/dependentIdentityID\",\r",
									"                \"type\": \"integer\"\r",
									"            },\r",
									"            \"comment\": {\r",
									"                \"$id\": \"#/items/properties/comment\",\r",
									"                \"type\": \"string\"\r",
									"            },\r",
									"            \"isDisplayOnPanel\": {\r",
									"                \"$id\": \"#/items/properties/isDisplayOnPanel\",\r",
									"                \"type\": \"boolean\"\r",
									"            },\r",
									"            \"effectiveFromDate\": {\r",
									"                \"$id\": \"#/items/properties/effectiveFromDate\",\r",
									"                \"type\": \"string\"\r",
									"            },\r",
									"            \"effectiveToDate\": {\r",
									"                \"$id\": \"#/items/properties/effectiveToDate\",\r",
									"                \"type\": \"string\"\r",
									"            },\r",
									"            \"ts\": {\r",
									"                \"$id\": \"#/items/properties/ts\",\r",
									"                \"type\": \"string\"\r",
									"            }\r",
									"        }\r",
									"    }\r",
									"}\r",
									"\r",
									"pm.test(\"Schema Validation\"), ()=>{\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"}\r",
									"\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer eyJ0eXAiOiJKV1QiLCJub25jZSI6IlM2NnI4VFZCRVFQNWRfTy12c2huWk9vX3Z1aTZweVRtVDdTSUtDVmJWcEEiLCJhbGciOiJSUzI1NiIsIng1dCI6IjVPZjlQNUY5Z0NDd0NtRjJCT0hIeEREUS1EayIsImtpZCI6IjVPZjlQNUY5Z0NDd0NtRjJCT0hIeEREUS1EayJ9.eyJhdWQiOiIwMDAwMDAwMy0wMDAwLTAwMDAtYzAwMC0wMDAwMDAwMDAwMDAiLCJpc3MiOiJodHRwczovL3N0cy53aW5kb3dzLm5ldC8yMGFkODczMS1hNGIzLTQxOWUtOWVkNi0wYjhkNjU2YWU4OWQvIiwiaWF0IjoxNjA4ODQ5MzQ5LCJuYmYiOjE2MDg4NDkzNDksImV4cCI6MTYwODg1MzI0OSwiYWNjdCI6MCwiYWNyIjoiMSIsImFjcnMiOlsidXJuOnVzZXI6cmVnaXN0ZXJzZWN1cml0eWluZm8iLCJ1cm46bWljcm9zb2Z0OnJlcTEiLCJ1cm46bWljcm9zb2Z0OnJlcTIiLCJ1cm46bWljcm9zb2Z0OnJlcTMiLCJjMSIsImMyIiwiYzMiLCJjNCIsImM1IiwiYzYiLCJjNyIsImM4IiwiYzkiLCJjMTAiLCJjMTEiLCJjMTIiLCJjMTMiLCJjMTQiLCJjMTUiLCJjMTYiLCJjMTciLCJjMTgiLCJjMTkiLCJjMjAiLCJjMjEiLCJjMjIiLCJjMjMiLCJjMjQiLCJjMjUiXSwiYWlvIjoiQVVRQXUvOFNBQUFBUjNLcStLeGdPRGdWZk1uWWo2dUdnN3NIcHdWNHBVam5KTXhFckc1d2ZLMnFqSy9xMFB6S0FSOFkxT2pxelRWM2JPQWFPU3BTTmduTHVtTW1HaU5tckE9PSIsImFtciI6WyJwd2QiLCJtZmEiXSwiYXBwX2Rpc3BsYXluYW1lIjoiVmluZWFOb3ZhV2ViRGV2IiwiYXBwaWQiOiIwNTczNzFhNC02NGVkLTQwOWUtOWRmNy1hODcyMWZhY2NhYWMiLCJhcHBpZGFjciI6IjAiLCJmYW1pbHlfbmFtZSI6ImtoYW56eiIsImdpdmVuX25hbWUiOiJpcmZhbiIsImlkdHlwIjoidXNlciIsImlwYWRkciI6IjExOS4xOC4xLjgwIiwibmFtZSI6IklyZmFuIEtoYW4iLCJvaWQiOiIzY2Q5M2Y0MS01YzJiLTRjYTgtYWNhMC1iODUwYTMzNzU0MjkiLCJwbGF0ZiI6IjMiLCJwdWlkIjoiMTAwMzdGRkVBNjYzMEYwMyIsInJoIjoiMC5BUVlBTVlldElMT2tua0dlMWd1TlpXcm9uYVJ4Y3dYdFpKNUFuZmVvY2gtc3lxd0dBSXcuIiwic2NwIjoiQXBwbGljYXRpb24uUmVhZC5BbGwgT3JnYW5pemF0aW9uLlJlYWQuQWxsIFVzZXIuUmVhZCBwcm9maWxlIG9wZW5pZCBlbWFpbCIsInNpZ25pbl9zdGF0ZSI6WyJrbXNpIl0sInN1YiI6IkhFUV82QjVMR1VZOHhoR2JvY1B4VFp6Y2M3YWZXd3hqMllrbk9JYzdiM28iLCJ0ZW5hbnRfcmVnaW9uX3Njb3BlIjoiT0MiLCJ0aWQiOiIyMGFkODczMS1hNGIzLTQxOWUtOWVkNi0wYjhkNjU2YWU4OWQiLCJ1bmlxdWVfbmFtZSI6IklyZmFuQGluZm9wb3dlci5jby5ueiIsInVwbiI6IklyZmFuQGluZm9wb3dlci5jby5ueiIsInV0aSI6InlmSVk2eVFyekVPM1M0VUFDOU5aQVEiLCJ2ZXIiOiIxLjAiLCJ3aWRzIjpbImI3OWZiZjRkLTNlZjktNDY4OS04MTQzLTc2YjE5NGU4NTUwOSJdLCJ4bXNfc3QiOnsic3ViIjoiZHVadlU3RmVQemhweWdjOV9QcDZCbnl5RHVQcHMyUDhrcG85UXJ3N2lPYyJ9LCJ4bXNfdGNkdCI6MTM1MTU1MDIwMX0.UF4YAMTF03c0FBbU02hccXOix5-yzTvM6x7mOvjdM2fgVANpNwPKi5iUHHMMPfJHWfQJbF2c1ZGfX5xl9luHCP0Q6L4YY9W6pSCLi43MNPCuOzJi8ifJE-le2zpbZvS9OI-qTEnZZnNPnFFnuTPcpi3FyfVq5T8nOInU6LgaoMh5j-n-5jX1h-Dgxc-aCwWpR7_jxFTlTv0GbMvWZjcswIwQnPFx1uFbhpf2o4TYhfYU7LH9HpER_DOzJlH-JLunJVWq25uHFgWPvKRNiH78T6ictw23-7t8hwq1W5-PMJIMV9CL-wqEWfQsPdd2Q-kUU0LI_oqWyDPFvjtFj6cEVA",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/IdentityRelationship?code={{Code}}&IdentityID=2385",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"IdentityRelationship"
							],
							"query": [
								{
									"key": "code",
									"value": "{{Code}}"
								},
								{
									"key": "IdentityID",
									"value": "2385"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "IdentityRelationship_200",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const schema = {\r",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
									"    \"$id\": \"http://example.com/example.json\",\r",
									"    \"type\": \"array\",\r",
									"    \"items\": {\r",
									"        \"$id\": \"#/items\",\r",
									"        \"type\": \"object\",\r",
									"        \"required\": [\r",
									"            \"id\",\r",
									"            \"relatesTo\",\r",
									"            \"relationshipName\",\r",
									"            \"relationshipTypeID\",\r",
									"            \"ownerIdentityID\",\r",
									"            \"dependentIdentityID\",\r",
									"            \"comment\",\r",
									"            \"isDisplayOnPanel\",\r",
									"            \"effectiveFromDate\",\r",
									"            \"effectiveToDate\",\r",
									"            \"ts\"\r",
									"        ],\r",
									"        \"properties\": {\r",
									"            \"id\": {\r",
									"                \"$id\": \"#/items/properties/id\",\r",
									"                \"type\": \"integer\"\r",
									"            },\r",
									"            \"relatesTo\": {\r",
									"                \"$id\": \"#/items/properties/relatesTo\",\r",
									"                \"type\": \"string\"\r",
									"            },\r",
									"            \"relationshipName\": {\r",
									"                \"$id\": \"#/items/properties/relationshipName\",\r",
									"                \"type\": \"string\"\r",
									"            },\r",
									"            \"relationshipTypeID\": {\r",
									"                \"$id\": \"#/items/properties/relationshipTypeID\",\r",
									"                \"type\": \"integer\"\r",
									"            },\r",
									"            \"ownerIdentityID\": {\r",
									"                \"$id\": \"#/items/properties/ownerIdentityID\",\r",
									"                \"type\": \"integer\"\r",
									"            },\r",
									"            \"dependentIdentityID\": {\r",
									"                \"$id\": \"#/items/properties/dependentIdentityID\",\r",
									"                \"type\": \"integer\"\r",
									"            },\r",
									"            \"comment\": {\r",
									"                \"$id\": \"#/items/properties/comment\",\r",
									"                \"type\": \"string\"\r",
									"            },\r",
									"            \"isDisplayOnPanel\": {\r",
									"                \"$id\": \"#/items/properties/isDisplayOnPanel\",\r",
									"                \"type\": \"boolean\"\r",
									"            },\r",
									"            \"effectiveFromDate\": {\r",
									"                \"$id\": \"#/items/properties/effectiveFromDate\",\r",
									"                \"type\": \"string\"\r",
									"            },\r",
									"            \"effectiveToDate\": {\r",
									"                \"$id\": \"#/items/properties/effectiveToDate\",\r",
									"                \"type\": \"string\"\r",
									"            },\r",
									"            \"ts\": {\r",
									"                \"$id\": \"#/items/properties/ts\",\r",
									"                \"type\": \"string\"\r",
									"            }\r",
									"        }\r",
									"    }\r",
									"}\r",
									"\r",
									"pm.test(\"Schema Validation\"), ()=>{\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"}\r",
									"\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer eyJ0eXAiOiJKV1QiLCJub25jZSI6IlM2NnI4VFZCRVFQNWRfTy12c2huWk9vX3Z1aTZweVRtVDdTSUtDVmJWcEEiLCJhbGciOiJSUzI1NiIsIng1dCI6IjVPZjlQNUY5Z0NDd0NtRjJCT0hIeEREUS1EayIsImtpZCI6IjVPZjlQNUY5Z0NDd0NtRjJCT0hIeEREUS1EayJ9.eyJhdWQiOiIwMDAwMDAwMy0wMDAwLTAwMDAtYzAwMC0wMDAwMDAwMDAwMDAiLCJpc3MiOiJodHRwczovL3N0cy53aW5kb3dzLm5ldC8yMGFkODczMS1hNGIzLTQxOWUtOWVkNi0wYjhkNjU2YWU4OWQvIiwiaWF0IjoxNjA4ODQ5MzQ5LCJuYmYiOjE2MDg4NDkzNDksImV4cCI6MTYwODg1MzI0OSwiYWNjdCI6MCwiYWNyIjoiMSIsImFjcnMiOlsidXJuOnVzZXI6cmVnaXN0ZXJzZWN1cml0eWluZm8iLCJ1cm46bWljcm9zb2Z0OnJlcTEiLCJ1cm46bWljcm9zb2Z0OnJlcTIiLCJ1cm46bWljcm9zb2Z0OnJlcTMiLCJjMSIsImMyIiwiYzMiLCJjNCIsImM1IiwiYzYiLCJjNyIsImM4IiwiYzkiLCJjMTAiLCJjMTEiLCJjMTIiLCJjMTMiLCJjMTQiLCJjMTUiLCJjMTYiLCJjMTciLCJjMTgiLCJjMTkiLCJjMjAiLCJjMjEiLCJjMjIiLCJjMjMiLCJjMjQiLCJjMjUiXSwiYWlvIjoiQVVRQXUvOFNBQUFBUjNLcStLeGdPRGdWZk1uWWo2dUdnN3NIcHdWNHBVam5KTXhFckc1d2ZLMnFqSy9xMFB6S0FSOFkxT2pxelRWM2JPQWFPU3BTTmduTHVtTW1HaU5tckE9PSIsImFtciI6WyJwd2QiLCJtZmEiXSwiYXBwX2Rpc3BsYXluYW1lIjoiVmluZWFOb3ZhV2ViRGV2IiwiYXBwaWQiOiIwNTczNzFhNC02NGVkLTQwOWUtOWRmNy1hODcyMWZhY2NhYWMiLCJhcHBpZGFjciI6IjAiLCJmYW1pbHlfbmFtZSI6ImtoYW56eiIsImdpdmVuX25hbWUiOiJpcmZhbiIsImlkdHlwIjoidXNlciIsImlwYWRkciI6IjExOS4xOC4xLjgwIiwibmFtZSI6IklyZmFuIEtoYW4iLCJvaWQiOiIzY2Q5M2Y0MS01YzJiLTRjYTgtYWNhMC1iODUwYTMzNzU0MjkiLCJwbGF0ZiI6IjMiLCJwdWlkIjoiMTAwMzdGRkVBNjYzMEYwMyIsInJoIjoiMC5BUVlBTVlldElMT2tua0dlMWd1TlpXcm9uYVJ4Y3dYdFpKNUFuZmVvY2gtc3lxd0dBSXcuIiwic2NwIjoiQXBwbGljYXRpb24uUmVhZC5BbGwgT3JnYW5pemF0aW9uLlJlYWQuQWxsIFVzZXIuUmVhZCBwcm9maWxlIG9wZW5pZCBlbWFpbCIsInNpZ25pbl9zdGF0ZSI6WyJrbXNpIl0sInN1YiI6IkhFUV82QjVMR1VZOHhoR2JvY1B4VFp6Y2M3YWZXd3hqMllrbk9JYzdiM28iLCJ0ZW5hbnRfcmVnaW9uX3Njb3BlIjoiT0MiLCJ0aWQiOiIyMGFkODczMS1hNGIzLTQxOWUtOWVkNi0wYjhkNjU2YWU4OWQiLCJ1bmlxdWVfbmFtZSI6IklyZmFuQGluZm9wb3dlci5jby5ueiIsInVwbiI6IklyZmFuQGluZm9wb3dlci5jby5ueiIsInV0aSI6InlmSVk2eVFyekVPM1M0VUFDOU5aQVEiLCJ2ZXIiOiIxLjAiLCJ3aWRzIjpbImI3OWZiZjRkLTNlZjktNDY4OS04MTQzLTc2YjE5NGU4NTUwOSJdLCJ4bXNfc3QiOnsic3ViIjoiZHVadlU3RmVQemhweWdjOV9QcDZCbnl5RHVQcHMyUDhrcG85UXJ3N2lPYyJ9LCJ4bXNfdGNkdCI6MTM1MTU1MDIwMX0.UF4YAMTF03c0FBbU02hccXOix5-yzTvM6x7mOvjdM2fgVANpNwPKi5iUHHMMPfJHWfQJbF2c1ZGfX5xl9luHCP0Q6L4YY9W6pSCLi43MNPCuOzJi8ifJE-le2zpbZvS9OI-qTEnZZnNPnFFnuTPcpi3FyfVq5T8nOInU6LgaoMh5j-n-5jX1h-Dgxc-aCwWpR7_jxFTlTv0GbMvWZjcswIwQnPFx1uFbhpf2o4TYhfYU7LH9HpER_DOzJlH-JLunJVWq25uHFgWPvKRNiH78T6ictw23-7t8hwq1W5-PMJIMV9CL-wqEWfQsPdd2Q-kUU0LI_oqWyDPFvjtFj6cEVA",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": 205,\r\n    \"relatesTo\": \"Employee (Vineyard) of St Arnaud Vineyard (StArnVineyard) with Job Title of Baker\",\r\n    \"relationshipName\": \"Baker\",\r\n    \"relationshipTypeID\": 2,\r\n    \"ownerIdentityID\": 1302,\r\n    \"dependentIdentityID\": 2385,\r\n    \"comment\": \"test\",\r\n    \"isDisplayOnPanel\": false,\r\n    \"effectiveFromDate\": \"2021-05-01T00:00:00+00:00\",\r\n    \"effectiveToDate\": \"2021-07-31T00:00:00+00:00\",\r\n    \"ts\": \"AAAAAAAF6j0=\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/IdentityRelationship?code={{Code}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"IdentityRelationship"
							],
							"query": [
								{
									"key": "code",
									"value": "{{Code}}"
								},
								{
									"key": "IdentityID",
									"value": "2385",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "IdentityRelationship_400",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is Bad Request\", function () {\r",
									"    pm.response.to.have.status(\"Bad Request\");\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer eyJ0eXAiOiJKV1QiLCJub25jZSI6IlM2NnI4VFZCRVFQNWRfTy12c2huWk9vX3Z1aTZweVRtVDdTSUtDVmJWcEEiLCJhbGciOiJSUzI1NiIsIng1dCI6IjVPZjlQNUY5Z0NDd0NtRjJCT0hIeEREUS1EayIsImtpZCI6IjVPZjlQNUY5Z0NDd0NtRjJCT0hIeEREUS1EayJ9.eyJhdWQiOiIwMDAwMDAwMy0wMDAwLTAwMDAtYzAwMC0wMDAwMDAwMDAwMDAiLCJpc3MiOiJodHRwczovL3N0cy53aW5kb3dzLm5ldC8yMGFkODczMS1hNGIzLTQxOWUtOWVkNi0wYjhkNjU2YWU4OWQvIiwiaWF0IjoxNjA4ODQ5MzQ5LCJuYmYiOjE2MDg4NDkzNDksImV4cCI6MTYwODg1MzI0OSwiYWNjdCI6MCwiYWNyIjoiMSIsImFjcnMiOlsidXJuOnVzZXI6cmVnaXN0ZXJzZWN1cml0eWluZm8iLCJ1cm46bWljcm9zb2Z0OnJlcTEiLCJ1cm46bWljcm9zb2Z0OnJlcTIiLCJ1cm46bWljcm9zb2Z0OnJlcTMiLCJjMSIsImMyIiwiYzMiLCJjNCIsImM1IiwiYzYiLCJjNyIsImM4IiwiYzkiLCJjMTAiLCJjMTEiLCJjMTIiLCJjMTMiLCJjMTQiLCJjMTUiLCJjMTYiLCJjMTciLCJjMTgiLCJjMTkiLCJjMjAiLCJjMjEiLCJjMjIiLCJjMjMiLCJjMjQiLCJjMjUiXSwiYWlvIjoiQVVRQXUvOFNBQUFBUjNLcStLeGdPRGdWZk1uWWo2dUdnN3NIcHdWNHBVam5KTXhFckc1d2ZLMnFqSy9xMFB6S0FSOFkxT2pxelRWM2JPQWFPU3BTTmduTHVtTW1HaU5tckE9PSIsImFtciI6WyJwd2QiLCJtZmEiXSwiYXBwX2Rpc3BsYXluYW1lIjoiVmluZWFOb3ZhV2ViRGV2IiwiYXBwaWQiOiIwNTczNzFhNC02NGVkLTQwOWUtOWRmNy1hODcyMWZhY2NhYWMiLCJhcHBpZGFjciI6IjAiLCJmYW1pbHlfbmFtZSI6ImtoYW56eiIsImdpdmVuX25hbWUiOiJpcmZhbiIsImlkdHlwIjoidXNlciIsImlwYWRkciI6IjExOS4xOC4xLjgwIiwibmFtZSI6IklyZmFuIEtoYW4iLCJvaWQiOiIzY2Q5M2Y0MS01YzJiLTRjYTgtYWNhMC1iODUwYTMzNzU0MjkiLCJwbGF0ZiI6IjMiLCJwdWlkIjoiMTAwMzdGRkVBNjYzMEYwMyIsInJoIjoiMC5BUVlBTVlldElMT2tua0dlMWd1TlpXcm9uYVJ4Y3dYdFpKNUFuZmVvY2gtc3lxd0dBSXcuIiwic2NwIjoiQXBwbGljYXRpb24uUmVhZC5BbGwgT3JnYW5pemF0aW9uLlJlYWQuQWxsIFVzZXIuUmVhZCBwcm9maWxlIG9wZW5pZCBlbWFpbCIsInNpZ25pbl9zdGF0ZSI6WyJrbXNpIl0sInN1YiI6IkhFUV82QjVMR1VZOHhoR2JvY1B4VFp6Y2M3YWZXd3hqMllrbk9JYzdiM28iLCJ0ZW5hbnRfcmVnaW9uX3Njb3BlIjoiT0MiLCJ0aWQiOiIyMGFkODczMS1hNGIzLTQxOWUtOWVkNi0wYjhkNjU2YWU4OWQiLCJ1bmlxdWVfbmFtZSI6IklyZmFuQGluZm9wb3dlci5jby5ueiIsInVwbiI6IklyZmFuQGluZm9wb3dlci5jby5ueiIsInV0aSI6InlmSVk2eVFyekVPM1M0VUFDOU5aQVEiLCJ2ZXIiOiIxLjAiLCJ3aWRzIjpbImI3OWZiZjRkLTNlZjktNDY4OS04MTQzLTc2YjE5NGU4NTUwOSJdLCJ4bXNfc3QiOnsic3ViIjoiZHVadlU3RmVQemhweWdjOV9QcDZCbnl5RHVQcHMyUDhrcG85UXJ3N2lPYyJ9LCJ4bXNfdGNkdCI6MTM1MTU1MDIwMX0.UF4YAMTF03c0FBbU02hccXOix5-yzTvM6x7mOvjdM2fgVANpNwPKi5iUHHMMPfJHWfQJbF2c1ZGfX5xl9luHCP0Q6L4YY9W6pSCLi43MNPCuOzJi8ifJE-le2zpbZvS9OI-qTEnZZnNPnFFnuTPcpi3FyfVq5T8nOInU6LgaoMh5j-n-5jX1h-Dgxc-aCwWpR7_jxFTlTv0GbMvWZjcswIwQnPFx1uFbhpf2o4TYhfYU7LH9HpER_DOzJlH-JLunJVWq25uHFgWPvKRNiH78T6ictw23-7t8hwq1W5-PMJIMV9CL-wqEWfQsPdd2Q-kUU0LI_oqWyDPFvjtFj6cEVA",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": 205,\r\n    \"relatesTo\": \"Employee (Vineyard) of St Arnaud Vineyard (StArnVineyard) with Job Title of Baker\",\r\n    \"relationshipName\": \"Baker\",\r\n    \"relationshipTypeID\": 2,\r\n    \"ownerIdentityID\": 1302,\r\n    \"dependentIdentityID\": 2385,\r\n    \"comment\": \"test\",\r\n    \"isDisplayOnPanel\": false,\r\n    \"effectiveFromDate\": \"2021-05-01T00:00:00+00:00\",\r\n    \"effectiveToDate\": \"2021-07-31T00:00:00+00:00\",\r\n    \"ts\": \"AAAAAAAF6j0=\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/IdentityRelationship?code={{Code}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"IdentityRelationship"
							],
							"query": [
								{
									"key": "code",
									"value": "{{Code}}"
								},
								{
									"key": "IdentityID",
									"value": "2385",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "IdentityRelationship_500",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 500\", function () {\r",
									"    pm.response.to.have.status(500);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is Internal Server Error\", function () {\r",
									"    pm.response.to.have.status(\"Internal Server Error\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "awsv4"
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer eyJ0eXAiOiJKV1QiLCJub25jZSI6IlM2NnI4VFZCRVFQNWRfTy12c2huWk9vX3Z1aTZweVRtVDdTSUtDVmJWcEEiLCJhbGciOiJSUzI1NiIsIng1dCI6IjVPZjlQNUY5Z0NDd0NtRjJCT0hIeEREUS1EayIsImtpZCI6IjVPZjlQNUY5Z0NDd0NtRjJCT0hIeEREUS1EayJ9.eyJhdWQiOiIwMDAwMDAwMy0wMDAwLTAwMDAtYzAwMC0wMDAwMDAwMDAwMDAiLCJpc3MiOiJodHRwczovL3N0cy53aW5kb3dzLm5ldC8yMGFkODczMS1hNGIzLTQxOWUtOWVkNi0wYjhkNjU2YWU4OWQvIiwiaWF0IjoxNjA4ODQ5MzQ5LCJuYmYiOjE2MDg4NDkzNDksImV4cCI6MTYwODg1MzI0OSwiYWNjdCI6MCwiYWNyIjoiMSIsImFjcnMiOlsidXJuOnVzZXI6cmVnaXN0ZXJzZWN1cml0eWluZm8iLCJ1cm46bWljcm9zb2Z0OnJlcTEiLCJ1cm46bWljcm9zb2Z0OnJlcTIiLCJ1cm46bWljcm9zb2Z0OnJlcTMiLCJjMSIsImMyIiwiYzMiLCJjNCIsImM1IiwiYzYiLCJjNyIsImM4IiwiYzkiLCJjMTAiLCJjMTEiLCJjMTIiLCJjMTMiLCJjMTQiLCJjMTUiLCJjMTYiLCJjMTciLCJjMTgiLCJjMTkiLCJjMjAiLCJjMjEiLCJjMjIiLCJjMjMiLCJjMjQiLCJjMjUiXSwiYWlvIjoiQVVRQXUvOFNBQUFBUjNLcStLeGdPRGdWZk1uWWo2dUdnN3NIcHdWNHBVam5KTXhFckc1d2ZLMnFqSy9xMFB6S0FSOFkxT2pxelRWM2JPQWFPU3BTTmduTHVtTW1HaU5tckE9PSIsImFtciI6WyJwd2QiLCJtZmEiXSwiYXBwX2Rpc3BsYXluYW1lIjoiVmluZWFOb3ZhV2ViRGV2IiwiYXBwaWQiOiIwNTczNzFhNC02NGVkLTQwOWUtOWRmNy1hODcyMWZhY2NhYWMiLCJhcHBpZGFjciI6IjAiLCJmYW1pbHlfbmFtZSI6ImtoYW56eiIsImdpdmVuX25hbWUiOiJpcmZhbiIsImlkdHlwIjoidXNlciIsImlwYWRkciI6IjExOS4xOC4xLjgwIiwibmFtZSI6IklyZmFuIEtoYW4iLCJvaWQiOiIzY2Q5M2Y0MS01YzJiLTRjYTgtYWNhMC1iODUwYTMzNzU0MjkiLCJwbGF0ZiI6IjMiLCJwdWlkIjoiMTAwMzdGRkVBNjYzMEYwMyIsInJoIjoiMC5BUVlBTVlldElMT2tua0dlMWd1TlpXcm9uYVJ4Y3dYdFpKNUFuZmVvY2gtc3lxd0dBSXcuIiwic2NwIjoiQXBwbGljYXRpb24uUmVhZC5BbGwgT3JnYW5pemF0aW9uLlJlYWQuQWxsIFVzZXIuUmVhZCBwcm9maWxlIG9wZW5pZCBlbWFpbCIsInNpZ25pbl9zdGF0ZSI6WyJrbXNpIl0sInN1YiI6IkhFUV82QjVMR1VZOHhoR2JvY1B4VFp6Y2M3YWZXd3hqMllrbk9JYzdiM28iLCJ0ZW5hbnRfcmVnaW9uX3Njb3BlIjoiT0MiLCJ0aWQiOiIyMGFkODczMS1hNGIzLTQxOWUtOWVkNi0wYjhkNjU2YWU4OWQiLCJ1bmlxdWVfbmFtZSI6IklyZmFuQGluZm9wb3dlci5jby5ueiIsInVwbiI6IklyZmFuQGluZm9wb3dlci5jby5ueiIsInV0aSI6InlmSVk2eVFyekVPM1M0VUFDOU5aQVEiLCJ2ZXIiOiIxLjAiLCJ3aWRzIjpbImI3OWZiZjRkLTNlZjktNDY4OS04MTQzLTc2YjE5NGU4NTUwOSJdLCJ4bXNfc3QiOnsic3ViIjoiZHVadlU3RmVQemhweWdjOV9QcDZCbnl5RHVQcHMyUDhrcG85UXJ3N2lPYyJ9LCJ4bXNfdGNkdCI6MTM1MTU1MDIwMX0.UF4YAMTF03c0FBbU02hccXOix5-yzTvM6x7mOvjdM2fgVANpNwPKi5iUHHMMPfJHWfQJbF2c1ZGfX5xl9luHCP0Q6L4YY9W6pSCLi43MNPCuOzJi8ifJE-le2zpbZvS9OI-qTEnZZnNPnFFnuTPcpi3FyfVq5T8nOInU6LgaoMh5j-n-5jX1h-Dgxc-aCwWpR7_jxFTlTv0GbMvWZjcswIwQnPFx1uFbhpf2o4TYhfYU7LH9HpER_DOzJlH-JLunJVWq25uHFgWPvKRNiH78T6ictw23-7t8hwq1W5-PMJIMV9CL-wqEWfQsPdd2Q-kUU0LI_oqWyDPFvjtFj6cEVA",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": 205,\r\n    \"relatesTo\": \"Employee (Vineyard) of St Arnaud Vineyard (StArnVineyard) with Job Title of Baker\",\r\n    \"relationshipName\": \"Baker\",\r\n    \"relationshipTypeID\": 2,\r\n    \"ownerIdentityID\": 1302,\r\n    \"dependentIdentityID\": 2385,\r\n    \"comment\": \"test\",\r\n    \"isDisplayOnPanel\": false,\r\n    \"effectiveFromDate\": \"2021-05-01T00:00:00+00:00\",\r\n    \"effectiveToDate\": \"2021-07-31T00:00:00+00:00\",\r\n    \"ts\": \"AAAAAAAF6j0=\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/IdentityRelationship?code={{Code}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"IdentityRelationship"
							],
							"query": [
								{
									"key": "code",
									"value": "{{Code}}"
								},
								{
									"key": "IdentityID",
									"value": "2385",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "IdentityRelationship_400",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is Bad Request\", function () {\r",
									"    pm.response.to.have.status(\"Bad Request\");\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer eyJ0eXAiOiJKV1QiLCJub25jZSI6IlM2NnI4VFZCRVFQNWRfTy12c2huWk9vX3Z1aTZweVRtVDdTSUtDVmJWcEEiLCJhbGciOiJSUzI1NiIsIng1dCI6IjVPZjlQNUY5Z0NDd0NtRjJCT0hIeEREUS1EayIsImtpZCI6IjVPZjlQNUY5Z0NDd0NtRjJCT0hIeEREUS1EayJ9.eyJhdWQiOiIwMDAwMDAwMy0wMDAwLTAwMDAtYzAwMC0wMDAwMDAwMDAwMDAiLCJpc3MiOiJodHRwczovL3N0cy53aW5kb3dzLm5ldC8yMGFkODczMS1hNGIzLTQxOWUtOWVkNi0wYjhkNjU2YWU4OWQvIiwiaWF0IjoxNjA4ODQ5MzQ5LCJuYmYiOjE2MDg4NDkzNDksImV4cCI6MTYwODg1MzI0OSwiYWNjdCI6MCwiYWNyIjoiMSIsImFjcnMiOlsidXJuOnVzZXI6cmVnaXN0ZXJzZWN1cml0eWluZm8iLCJ1cm46bWljcm9zb2Z0OnJlcTEiLCJ1cm46bWljcm9zb2Z0OnJlcTIiLCJ1cm46bWljcm9zb2Z0OnJlcTMiLCJjMSIsImMyIiwiYzMiLCJjNCIsImM1IiwiYzYiLCJjNyIsImM4IiwiYzkiLCJjMTAiLCJjMTEiLCJjMTIiLCJjMTMiLCJjMTQiLCJjMTUiLCJjMTYiLCJjMTciLCJjMTgiLCJjMTkiLCJjMjAiLCJjMjEiLCJjMjIiLCJjMjMiLCJjMjQiLCJjMjUiXSwiYWlvIjoiQVVRQXUvOFNBQUFBUjNLcStLeGdPRGdWZk1uWWo2dUdnN3NIcHdWNHBVam5KTXhFckc1d2ZLMnFqSy9xMFB6S0FSOFkxT2pxelRWM2JPQWFPU3BTTmduTHVtTW1HaU5tckE9PSIsImFtciI6WyJwd2QiLCJtZmEiXSwiYXBwX2Rpc3BsYXluYW1lIjoiVmluZWFOb3ZhV2ViRGV2IiwiYXBwaWQiOiIwNTczNzFhNC02NGVkLTQwOWUtOWRmNy1hODcyMWZhY2NhYWMiLCJhcHBpZGFjciI6IjAiLCJmYW1pbHlfbmFtZSI6ImtoYW56eiIsImdpdmVuX25hbWUiOiJpcmZhbiIsImlkdHlwIjoidXNlciIsImlwYWRkciI6IjExOS4xOC4xLjgwIiwibmFtZSI6IklyZmFuIEtoYW4iLCJvaWQiOiIzY2Q5M2Y0MS01YzJiLTRjYTgtYWNhMC1iODUwYTMzNzU0MjkiLCJwbGF0ZiI6IjMiLCJwdWlkIjoiMTAwMzdGRkVBNjYzMEYwMyIsInJoIjoiMC5BUVlBTVlldElMT2tua0dlMWd1TlpXcm9uYVJ4Y3dYdFpKNUFuZmVvY2gtc3lxd0dBSXcuIiwic2NwIjoiQXBwbGljYXRpb24uUmVhZC5BbGwgT3JnYW5pemF0aW9uLlJlYWQuQWxsIFVzZXIuUmVhZCBwcm9maWxlIG9wZW5pZCBlbWFpbCIsInNpZ25pbl9zdGF0ZSI6WyJrbXNpIl0sInN1YiI6IkhFUV82QjVMR1VZOHhoR2JvY1B4VFp6Y2M3YWZXd3hqMllrbk9JYzdiM28iLCJ0ZW5hbnRfcmVnaW9uX3Njb3BlIjoiT0MiLCJ0aWQiOiIyMGFkODczMS1hNGIzLTQxOWUtOWVkNi0wYjhkNjU2YWU4OWQiLCJ1bmlxdWVfbmFtZSI6IklyZmFuQGluZm9wb3dlci5jby5ueiIsInVwbiI6IklyZmFuQGluZm9wb3dlci5jby5ueiIsInV0aSI6InlmSVk2eVFyekVPM1M0VUFDOU5aQVEiLCJ2ZXIiOiIxLjAiLCJ3aWRzIjpbImI3OWZiZjRkLTNlZjktNDY4OS04MTQzLTc2YjE5NGU4NTUwOSJdLCJ4bXNfc3QiOnsic3ViIjoiZHVadlU3RmVQemhweWdjOV9QcDZCbnl5RHVQcHMyUDhrcG85UXJ3N2lPYyJ9LCJ4bXNfdGNkdCI6MTM1MTU1MDIwMX0.UF4YAMTF03c0FBbU02hccXOix5-yzTvM6x7mOvjdM2fgVANpNwPKi5iUHHMMPfJHWfQJbF2c1ZGfX5xl9luHCP0Q6L4YY9W6pSCLi43MNPCuOzJi8ifJE-le2zpbZvS9OI-qTEnZZnNPnFFnuTPcpi3FyfVq5T8nOInU6LgaoMh5j-n-5jX1h-Dgxc-aCwWpR7_jxFTlTv0GbMvWZjcswIwQnPFx1uFbhpf2o4TYhfYU7LH9HpER_DOzJlH-JLunJVWq25uHFgWPvKRNiH78T6ictw23-7t8hwq1W5-PMJIMV9CL-wqEWfQsPdd2Q-kUU0LI_oqWyDPFvjtFj6cEVA",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/IdentityRelationship?code={{Code}}&IdentityID=2385",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"IdentityRelationship"
							],
							"query": [
								{
									"key": "code",
									"value": "{{Code}}"
								},
								{
									"key": "IdentityID",
									"value": "2385"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "IdentityRelationship_500",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 500\", function () {\r",
									"    pm.response.to.have.status(500);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is Internal Server Error\", function () {\r",
									"    pm.response.to.have.status(\"Internal Server Error\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "awsv4"
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer eyJ0eXAiOiJKV1QiLCJub25jZSI6IlM2NnI4VFZCRVFQNWRfTy12c2huWk9vX3Z1aTZweVRtVDdTSUtDVmJWcEEiLCJhbGciOiJSUzI1NiIsIng1dCI6IjVPZjlQNUY5Z0NDd0NtRjJCT0hIeEREUS1EayIsImtpZCI6IjVPZjlQNUY5Z0NDd0NtRjJCT0hIeEREUS1EayJ9.eyJhdWQiOiIwMDAwMDAwMy0wMDAwLTAwMDAtYzAwMC0wMDAwMDAwMDAwMDAiLCJpc3MiOiJodHRwczovL3N0cy53aW5kb3dzLm5ldC8yMGFkODczMS1hNGIzLTQxOWUtOWVkNi0wYjhkNjU2YWU4OWQvIiwiaWF0IjoxNjA4ODQ5MzQ5LCJuYmYiOjE2MDg4NDkzNDksImV4cCI6MTYwODg1MzI0OSwiYWNjdCI6MCwiYWNyIjoiMSIsImFjcnMiOlsidXJuOnVzZXI6cmVnaXN0ZXJzZWN1cml0eWluZm8iLCJ1cm46bWljcm9zb2Z0OnJlcTEiLCJ1cm46bWljcm9zb2Z0OnJlcTIiLCJ1cm46bWljcm9zb2Z0OnJlcTMiLCJjMSIsImMyIiwiYzMiLCJjNCIsImM1IiwiYzYiLCJjNyIsImM4IiwiYzkiLCJjMTAiLCJjMTEiLCJjMTIiLCJjMTMiLCJjMTQiLCJjMTUiLCJjMTYiLCJjMTciLCJjMTgiLCJjMTkiLCJjMjAiLCJjMjEiLCJjMjIiLCJjMjMiLCJjMjQiLCJjMjUiXSwiYWlvIjoiQVVRQXUvOFNBQUFBUjNLcStLeGdPRGdWZk1uWWo2dUdnN3NIcHdWNHBVam5KTXhFckc1d2ZLMnFqSy9xMFB6S0FSOFkxT2pxelRWM2JPQWFPU3BTTmduTHVtTW1HaU5tckE9PSIsImFtciI6WyJwd2QiLCJtZmEiXSwiYXBwX2Rpc3BsYXluYW1lIjoiVmluZWFOb3ZhV2ViRGV2IiwiYXBwaWQiOiIwNTczNzFhNC02NGVkLTQwOWUtOWRmNy1hODcyMWZhY2NhYWMiLCJhcHBpZGFjciI6IjAiLCJmYW1pbHlfbmFtZSI6ImtoYW56eiIsImdpdmVuX25hbWUiOiJpcmZhbiIsImlkdHlwIjoidXNlciIsImlwYWRkciI6IjExOS4xOC4xLjgwIiwibmFtZSI6IklyZmFuIEtoYW4iLCJvaWQiOiIzY2Q5M2Y0MS01YzJiLTRjYTgtYWNhMC1iODUwYTMzNzU0MjkiLCJwbGF0ZiI6IjMiLCJwdWlkIjoiMTAwMzdGRkVBNjYzMEYwMyIsInJoIjoiMC5BUVlBTVlldElMT2tua0dlMWd1TlpXcm9uYVJ4Y3dYdFpKNUFuZmVvY2gtc3lxd0dBSXcuIiwic2NwIjoiQXBwbGljYXRpb24uUmVhZC5BbGwgT3JnYW5pemF0aW9uLlJlYWQuQWxsIFVzZXIuUmVhZCBwcm9maWxlIG9wZW5pZCBlbWFpbCIsInNpZ25pbl9zdGF0ZSI6WyJrbXNpIl0sInN1YiI6IkhFUV82QjVMR1VZOHhoR2JvY1B4VFp6Y2M3YWZXd3hqMllrbk9JYzdiM28iLCJ0ZW5hbnRfcmVnaW9uX3Njb3BlIjoiT0MiLCJ0aWQiOiIyMGFkODczMS1hNGIzLTQxOWUtOWVkNi0wYjhkNjU2YWU4OWQiLCJ1bmlxdWVfbmFtZSI6IklyZmFuQGluZm9wb3dlci5jby5ueiIsInVwbiI6IklyZmFuQGluZm9wb3dlci5jby5ueiIsInV0aSI6InlmSVk2eVFyekVPM1M0VUFDOU5aQVEiLCJ2ZXIiOiIxLjAiLCJ3aWRzIjpbImI3OWZiZjRkLTNlZjktNDY4OS04MTQzLTc2YjE5NGU4NTUwOSJdLCJ4bXNfc3QiOnsic3ViIjoiZHVadlU3RmVQemhweWdjOV9QcDZCbnl5RHVQcHMyUDhrcG85UXJ3N2lPYyJ9LCJ4bXNfdGNkdCI6MTM1MTU1MDIwMX0.UF4YAMTF03c0FBbU02hccXOix5-yzTvM6x7mOvjdM2fgVANpNwPKi5iUHHMMPfJHWfQJbF2c1ZGfX5xl9luHCP0Q6L4YY9W6pSCLi43MNPCuOzJi8ifJE-le2zpbZvS9OI-qTEnZZnNPnFFnuTPcpi3FyfVq5T8nOInU6LgaoMh5j-n-5jX1h-Dgxc-aCwWpR7_jxFTlTv0GbMvWZjcswIwQnPFx1uFbhpf2o4TYhfYU7LH9HpER_DOzJlH-JLunJVWq25uHFgWPvKRNiH78T6ictw23-7t8hwq1W5-PMJIMV9CL-wqEWfQsPdd2Q-kUU0LI_oqWyDPFvjtFj6cEVA",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/IdentityRelationship?code={{Code}}&IdentityID=2385",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"IdentityRelationship"
							],
							"query": [
								{
									"key": "code",
									"value": "{{Code}}"
								},
								{
									"key": "IdentityID",
									"value": "2385"
								}
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "oauth2",
		"oauth2": [
			{
				"key": "scope",
				"value": "https://graph.microsoft.com/.default",
				"type": "string"
			},
			{
				"key": "accessTokenUrl",
				"value": "https://login.microsoftonline.com/{{TenantID}}/oauth2/v2.0/token",
				"type": "string"
			},
			{
				"key": "grant_type",
				"value": "client_credentials",
				"type": "string"
			},
			{
				"key": "tokenName",
				"value": "Application Token",
				"type": "string"
			},
			{
				"key": "clientSecret",
				"value": "{{ClientSecret}}",
				"type": "string"
			},
			{
				"key": "clientId",
				"value": "{{ClientID}}",
				"type": "string"
			},
			{
				"key": "addTokenTo",
				"value": "header",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "ClientID",
			"value": "057371a4-64ed-409e-9df7-a8721faccaac"
		},
		{
			"key": "ClientSecret",
			"value": "NC0KkrK-12T30b~Xh_8-A83mMb-x8.3M.N"
		},
		{
			"key": "TenantID",
			"value": "20ad8731-a4b3-419e-9ed6-0b8d656ae89d"
		},
		{
			"key": "Code",
			"value": "q02YCVvfNJKdQAAfPXLyNrdndLRgsX7XAxkAiKKuXNev9GRlS6kf6w=="
		}
	]
}